{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _ = require(\"lodash\");\n\nvar signature_parser_1 = require(\"./utils/signature_parser\");\n\nvar address_1 = require(\"./evm_data_types/address\");\n\nvar array_1 = require(\"./evm_data_types/array\");\n\nvar bool_1 = require(\"./evm_data_types/bool\");\n\nvar dynamic_bytes_1 = require(\"./evm_data_types/dynamic_bytes\");\n\nvar int_1 = require(\"./evm_data_types/int\");\n\nvar method_1 = require(\"./evm_data_types/method\");\n\nvar pointer_1 = require(\"./evm_data_types/pointer\");\n\nvar static_bytes_1 = require(\"./evm_data_types/static_bytes\");\n\nvar string_1 = require(\"./evm_data_types/string\");\n\nvar tuple_1 = require(\"./evm_data_types/tuple\");\n\nvar uint_1 = require(\"./evm_data_types/uint\");\n\nvar Address =\n/** @class */\nfunction (_super) {\n  __extends(Address, _super);\n\n  function Address(dataItem) {\n    return _super.call(this, dataItem, EvmDataTypeFactory.getInstance()) || this;\n  }\n\n  return Address;\n}(address_1.AddressDataType);\n\nexports.Address = Address;\n\nvar Bool =\n/** @class */\nfunction (_super) {\n  __extends(Bool, _super);\n\n  function Bool(dataItem) {\n    return _super.call(this, dataItem, EvmDataTypeFactory.getInstance()) || this;\n  }\n\n  return Bool;\n}(bool_1.BoolDataType);\n\nexports.Bool = Bool;\n\nvar Int =\n/** @class */\nfunction (_super) {\n  __extends(Int, _super);\n\n  function Int(dataItem) {\n    return _super.call(this, dataItem, EvmDataTypeFactory.getInstance()) || this;\n  }\n\n  return Int;\n}(int_1.IntDataType);\n\nexports.Int = Int;\n\nvar UInt =\n/** @class */\nfunction (_super) {\n  __extends(UInt, _super);\n\n  function UInt(dataItem) {\n    return _super.call(this, dataItem, EvmDataTypeFactory.getInstance()) || this;\n  }\n\n  return UInt;\n}(uint_1.UIntDataType);\n\nexports.UInt = UInt;\n\nvar StaticBytes =\n/** @class */\nfunction (_super) {\n  __extends(StaticBytes, _super);\n\n  function StaticBytes(dataItem) {\n    return _super.call(this, dataItem, EvmDataTypeFactory.getInstance()) || this;\n  }\n\n  return StaticBytes;\n}(static_bytes_1.StaticBytesDataType);\n\nexports.StaticBytes = StaticBytes;\n\nvar DynamicBytes =\n/** @class */\nfunction (_super) {\n  __extends(DynamicBytes, _super);\n\n  function DynamicBytes(dataItem) {\n    return _super.call(this, dataItem, EvmDataTypeFactory.getInstance()) || this;\n  }\n\n  return DynamicBytes;\n}(dynamic_bytes_1.DynamicBytesDataType);\n\nexports.DynamicBytes = DynamicBytes;\n\nvar String =\n/** @class */\nfunction (_super) {\n  __extends(String, _super);\n\n  function String(dataItem) {\n    return _super.call(this, dataItem, EvmDataTypeFactory.getInstance()) || this;\n  }\n\n  return String;\n}(string_1.StringDataType);\n\nexports.String = String;\n\nvar Pointer =\n/** @class */\nfunction (_super) {\n  __extends(Pointer, _super);\n\n  function Pointer(destDataType, parentDataType) {\n    return _super.call(this, destDataType, parentDataType, EvmDataTypeFactory.getInstance()) || this;\n  }\n\n  return Pointer;\n}(pointer_1.PointerDataType);\n\nexports.Pointer = Pointer;\n\nvar Tuple =\n/** @class */\nfunction (_super) {\n  __extends(Tuple, _super);\n\n  function Tuple(dataItem) {\n    return _super.call(this, dataItem, EvmDataTypeFactory.getInstance()) || this;\n  }\n\n  return Tuple;\n}(tuple_1.TupleDataType);\n\nexports.Tuple = Tuple;\n\nvar Array =\n/** @class */\nfunction (_super) {\n  __extends(Array, _super);\n\n  function Array(dataItem) {\n    return _super.call(this, dataItem, EvmDataTypeFactory.getInstance()) || this;\n  }\n\n  return Array;\n}(array_1.ArrayDataType);\n\nexports.Array = Array;\n\nvar Method =\n/** @class */\nfunction (_super) {\n  __extends(Method, _super);\n\n  function Method(abi) {\n    return _super.call(this, abi, EvmDataTypeFactory.getInstance()) || this;\n  }\n\n  return Method;\n}(method_1.MethodDataType);\n\nexports.Method = Method;\n/* tslint:disable no-construct */\n\nvar EvmDataTypeFactory =\n/** @class */\nfunction () {\n  /* tslint:enable prefer-function-over-method */\n  function EvmDataTypeFactory() {}\n\n  EvmDataTypeFactory.getInstance = function () {\n    if (!EvmDataTypeFactory._instance) {\n      EvmDataTypeFactory._instance = new EvmDataTypeFactory();\n    }\n\n    return EvmDataTypeFactory._instance;\n  };\n  /* tslint:disable prefer-function-over-method */\n\n\n  EvmDataTypeFactory.prototype.create = function (dataItem, parentDataType) {\n    // Create data type\n    var dataType;\n\n    if (Array.matchType(dataItem.type)) {\n      dataType = new Array(dataItem);\n    } else if (Address.matchType(dataItem.type)) {\n      dataType = new Address(dataItem);\n    } else if (Bool.matchType(dataItem.type)) {\n      dataType = new Bool(dataItem);\n    } else if (Int.matchType(dataItem.type)) {\n      dataType = new Int(dataItem);\n    } else if (UInt.matchType(dataItem.type)) {\n      dataType = new UInt(dataItem);\n    } else if (StaticBytes.matchType(dataItem.type)) {\n      dataType = new StaticBytes(dataItem);\n    } else if (Tuple.matchType(dataItem.type)) {\n      dataType = new Tuple(dataItem);\n    } else if (DynamicBytes.matchType(dataItem.type)) {\n      dataType = new DynamicBytes(dataItem);\n    } else if (String.matchType(dataItem.type)) {\n      dataType = new String(dataItem);\n    } // @TODO: DataTypeement Fixed/UFixed types\n\n\n    if (dataType === undefined) {\n      throw new Error(\"Unrecognized data type: '\" + dataItem.type + \"'\");\n    } else if (parentDataType !== undefined && !dataType.isStatic()) {\n      var pointerToDataType = new Pointer(dataType, parentDataType);\n      return pointerToDataType;\n    }\n\n    return dataType;\n  };\n\n  return EvmDataTypeFactory;\n}();\n\nexports.EvmDataTypeFactory = EvmDataTypeFactory;\n/**\r\n * Convenience function for creating a DataType from different inputs.\r\n * @param input A single or set of DataItem or a signature for an EVM data type.\r\n * @return DataType corresponding to input.\r\n */\n\nfunction create(input) {\n  var dataItem = consolidateDataItemsIntoSingle(input);\n  var dataType = EvmDataTypeFactory.getInstance().create(dataItem);\n  return dataType;\n}\n\nexports.create = create;\n/**\r\n * Convenience function to aggregate a single input or a set of inputs into a single DataItem.\r\n * An array of data items is grouped into a single tuple.\r\n * @param input A single data item; a set of data items; a signature.\r\n * @return A single data item corresponding to input.\r\n */\n\nfunction consolidateDataItemsIntoSingle(input) {\n  var dataItem;\n\n  if (_.isArray(input)) {\n    var dataItems = input;\n    dataItem = {\n      name: '',\n      type: 'tuple',\n      components: dataItems\n    };\n  } else {\n    dataItem = _.isString(input) ? signature_parser_1.generateDataItemFromSignature(input) : input;\n  }\n\n  return dataItem;\n}\n/**\r\n * Convenience function for creating a Method encoder from different inputs.\r\n * @param methodName name of method.\r\n * @param input A single data item; a set of data items; a signature; or an array of signatures (optional).\r\n * @param output A single data item; a set of data items; a signature; or an array of signatures (optional).\r\n * @return Method corresponding to input.\r\n */\n\n\nfunction createMethod(methodName, input, output) {\n  var methodInput = input === undefined ? [] : consolidateDataItemsIntoArray(input);\n  var methodOutput = output === undefined ? [] : consolidateDataItemsIntoArray(output);\n  var methodAbi = {\n    name: methodName,\n    inputs: methodInput,\n    outputs: methodOutput,\n    type: 'function',\n    // default fields not used by ABI\n    constant: false,\n    payable: false,\n    stateMutability: 'nonpayable'\n  };\n  var dataType = new Method(methodAbi);\n  return dataType;\n}\n\nexports.createMethod = createMethod;\n/**\r\n * Convenience function that aggregates a single input or a set of inputs into an array of DataItems.\r\n * @param input A single data item; a set of data items; a signature; or an array of signatures.\r\n * @return Array of data items corresponding to input.\r\n */\n\nfunction consolidateDataItemsIntoArray(input) {\n  var dataItems;\n\n  if (_.isArray(input) && _.isEmpty(input)) {\n    dataItems = [];\n  } else if (_.isArray(input) && _.isString(input[0])) {\n    dataItems = [];\n\n    _.each(input, function (signature) {\n      var dataItem = signature_parser_1.generateDataItemFromSignature(signature);\n      dataItems.push(dataItem);\n    });\n  } else if (_.isArray(input)) {\n    dataItems = input;\n  } else if (typeof input === 'string') {\n    var dataItem = signature_parser_1.generateDataItemFromSignature(input);\n    dataItems = [dataItem];\n  } else {\n    dataItems = [input];\n  }\n\n  return dataItems;\n}\n/* tslint:enable no-construct */","map":{"version":3,"sources":["../../../src/abi_encoder/evm_data_type_factory.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    }\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar _ = require(\"lodash\");\r\nvar signature_parser_1 = require(\"./utils/signature_parser\");\r\nvar address_1 = require(\"./evm_data_types/address\");\r\nvar array_1 = require(\"./evm_data_types/array\");\r\nvar bool_1 = require(\"./evm_data_types/bool\");\r\nvar dynamic_bytes_1 = require(\"./evm_data_types/dynamic_bytes\");\r\nvar int_1 = require(\"./evm_data_types/int\");\r\nvar method_1 = require(\"./evm_data_types/method\");\r\nvar pointer_1 = require(\"./evm_data_types/pointer\");\r\nvar static_bytes_1 = require(\"./evm_data_types/static_bytes\");\r\nvar string_1 = require(\"./evm_data_types/string\");\r\nvar tuple_1 = require(\"./evm_data_types/tuple\");\r\nvar uint_1 = require(\"./evm_data_types/uint\");\r\nvar Address = /** @class */ (function (_super) {\r\n    __extends(Address, _super);\r\n    function Address(dataItem) {\r\n        return _super.call(this, dataItem, EvmDataTypeFactory.getInstance()) || this;\r\n    }\r\n    return Address;\r\n}(address_1.AddressDataType));\r\nexports.Address = Address;\r\nvar Bool = /** @class */ (function (_super) {\r\n    __extends(Bool, _super);\r\n    function Bool(dataItem) {\r\n        return _super.call(this, dataItem, EvmDataTypeFactory.getInstance()) || this;\r\n    }\r\n    return Bool;\r\n}(bool_1.BoolDataType));\r\nexports.Bool = Bool;\r\nvar Int = /** @class */ (function (_super) {\r\n    __extends(Int, _super);\r\n    function Int(dataItem) {\r\n        return _super.call(this, dataItem, EvmDataTypeFactory.getInstance()) || this;\r\n    }\r\n    return Int;\r\n}(int_1.IntDataType));\r\nexports.Int = Int;\r\nvar UInt = /** @class */ (function (_super) {\r\n    __extends(UInt, _super);\r\n    function UInt(dataItem) {\r\n        return _super.call(this, dataItem, EvmDataTypeFactory.getInstance()) || this;\r\n    }\r\n    return UInt;\r\n}(uint_1.UIntDataType));\r\nexports.UInt = UInt;\r\nvar StaticBytes = /** @class */ (function (_super) {\r\n    __extends(StaticBytes, _super);\r\n    function StaticBytes(dataItem) {\r\n        return _super.call(this, dataItem, EvmDataTypeFactory.getInstance()) || this;\r\n    }\r\n    return StaticBytes;\r\n}(static_bytes_1.StaticBytesDataType));\r\nexports.StaticBytes = StaticBytes;\r\nvar DynamicBytes = /** @class */ (function (_super) {\r\n    __extends(DynamicBytes, _super);\r\n    function DynamicBytes(dataItem) {\r\n        return _super.call(this, dataItem, EvmDataTypeFactory.getInstance()) || this;\r\n    }\r\n    return DynamicBytes;\r\n}(dynamic_bytes_1.DynamicBytesDataType));\r\nexports.DynamicBytes = DynamicBytes;\r\nvar String = /** @class */ (function (_super) {\r\n    __extends(String, _super);\r\n    function String(dataItem) {\r\n        return _super.call(this, dataItem, EvmDataTypeFactory.getInstance()) || this;\r\n    }\r\n    return String;\r\n}(string_1.StringDataType));\r\nexports.String = String;\r\nvar Pointer = /** @class */ (function (_super) {\r\n    __extends(Pointer, _super);\r\n    function Pointer(destDataType, parentDataType) {\r\n        return _super.call(this, destDataType, parentDataType, EvmDataTypeFactory.getInstance()) || this;\r\n    }\r\n    return Pointer;\r\n}(pointer_1.PointerDataType));\r\nexports.Pointer = Pointer;\r\nvar Tuple = /** @class */ (function (_super) {\r\n    __extends(Tuple, _super);\r\n    function Tuple(dataItem) {\r\n        return _super.call(this, dataItem, EvmDataTypeFactory.getInstance()) || this;\r\n    }\r\n    return Tuple;\r\n}(tuple_1.TupleDataType));\r\nexports.Tuple = Tuple;\r\nvar Array = /** @class */ (function (_super) {\r\n    __extends(Array, _super);\r\n    function Array(dataItem) {\r\n        return _super.call(this, dataItem, EvmDataTypeFactory.getInstance()) || this;\r\n    }\r\n    return Array;\r\n}(array_1.ArrayDataType));\r\nexports.Array = Array;\r\nvar Method = /** @class */ (function (_super) {\r\n    __extends(Method, _super);\r\n    function Method(abi) {\r\n        return _super.call(this, abi, EvmDataTypeFactory.getInstance()) || this;\r\n    }\r\n    return Method;\r\n}(method_1.MethodDataType));\r\nexports.Method = Method;\r\n/* tslint:disable no-construct */\r\nvar EvmDataTypeFactory = /** @class */ (function () {\r\n    /* tslint:enable prefer-function-over-method */\r\n    function EvmDataTypeFactory() {\r\n    }\r\n    EvmDataTypeFactory.getInstance = function () {\r\n        if (!EvmDataTypeFactory._instance) {\r\n            EvmDataTypeFactory._instance = new EvmDataTypeFactory();\r\n        }\r\n        return EvmDataTypeFactory._instance;\r\n    };\r\n    /* tslint:disable prefer-function-over-method */\r\n    EvmDataTypeFactory.prototype.create = function (dataItem, parentDataType) {\r\n        // Create data type\r\n        var dataType;\r\n        if (Array.matchType(dataItem.type)) {\r\n            dataType = new Array(dataItem);\r\n        }\r\n        else if (Address.matchType(dataItem.type)) {\r\n            dataType = new Address(dataItem);\r\n        }\r\n        else if (Bool.matchType(dataItem.type)) {\r\n            dataType = new Bool(dataItem);\r\n        }\r\n        else if (Int.matchType(dataItem.type)) {\r\n            dataType = new Int(dataItem);\r\n        }\r\n        else if (UInt.matchType(dataItem.type)) {\r\n            dataType = new UInt(dataItem);\r\n        }\r\n        else if (StaticBytes.matchType(dataItem.type)) {\r\n            dataType = new StaticBytes(dataItem);\r\n        }\r\n        else if (Tuple.matchType(dataItem.type)) {\r\n            dataType = new Tuple(dataItem);\r\n        }\r\n        else if (DynamicBytes.matchType(dataItem.type)) {\r\n            dataType = new DynamicBytes(dataItem);\r\n        }\r\n        else if (String.matchType(dataItem.type)) {\r\n            dataType = new String(dataItem);\r\n        }\r\n        // @TODO: DataTypeement Fixed/UFixed types\r\n        if (dataType === undefined) {\r\n            throw new Error(\"Unrecognized data type: '\" + dataItem.type + \"'\");\r\n        }\r\n        else if (parentDataType !== undefined && !dataType.isStatic()) {\r\n            var pointerToDataType = new Pointer(dataType, parentDataType);\r\n            return pointerToDataType;\r\n        }\r\n        return dataType;\r\n    };\r\n    return EvmDataTypeFactory;\r\n}());\r\nexports.EvmDataTypeFactory = EvmDataTypeFactory;\r\n/**\r\n * Convenience function for creating a DataType from different inputs.\r\n * @param input A single or set of DataItem or a signature for an EVM data type.\r\n * @return DataType corresponding to input.\r\n */\r\nfunction create(input) {\r\n    var dataItem = consolidateDataItemsIntoSingle(input);\r\n    var dataType = EvmDataTypeFactory.getInstance().create(dataItem);\r\n    return dataType;\r\n}\r\nexports.create = create;\r\n/**\r\n * Convenience function to aggregate a single input or a set of inputs into a single DataItem.\r\n * An array of data items is grouped into a single tuple.\r\n * @param input A single data item; a set of data items; a signature.\r\n * @return A single data item corresponding to input.\r\n */\r\nfunction consolidateDataItemsIntoSingle(input) {\r\n    var dataItem;\r\n    if (_.isArray(input)) {\r\n        var dataItems = input;\r\n        dataItem = {\r\n            name: '',\r\n            type: 'tuple',\r\n            components: dataItems,\r\n        };\r\n    }\r\n    else {\r\n        dataItem = _.isString(input) ? signature_parser_1.generateDataItemFromSignature(input) : input;\r\n    }\r\n    return dataItem;\r\n}\r\n/**\r\n * Convenience function for creating a Method encoder from different inputs.\r\n * @param methodName name of method.\r\n * @param input A single data item; a set of data items; a signature; or an array of signatures (optional).\r\n * @param output A single data item; a set of data items; a signature; or an array of signatures (optional).\r\n * @return Method corresponding to input.\r\n */\r\nfunction createMethod(methodName, input, output) {\r\n    var methodInput = input === undefined ? [] : consolidateDataItemsIntoArray(input);\r\n    var methodOutput = output === undefined ? [] : consolidateDataItemsIntoArray(output);\r\n    var methodAbi = {\r\n        name: methodName,\r\n        inputs: methodInput,\r\n        outputs: methodOutput,\r\n        type: 'function',\r\n        // default fields not used by ABI\r\n        constant: false,\r\n        payable: false,\r\n        stateMutability: 'nonpayable',\r\n    };\r\n    var dataType = new Method(methodAbi);\r\n    return dataType;\r\n}\r\nexports.createMethod = createMethod;\r\n/**\r\n * Convenience function that aggregates a single input or a set of inputs into an array of DataItems.\r\n * @param input A single data item; a set of data items; a signature; or an array of signatures.\r\n * @return Array of data items corresponding to input.\r\n */\r\nfunction consolidateDataItemsIntoArray(input) {\r\n    var dataItems;\r\n    if (_.isArray(input) && _.isEmpty(input)) {\r\n        dataItems = [];\r\n    }\r\n    else if (_.isArray(input) && _.isString(input[0])) {\r\n        dataItems = [];\r\n        _.each(input, function (signature) {\r\n            var dataItem = signature_parser_1.generateDataItemFromSignature(signature);\r\n            dataItems.push(dataItem);\r\n        });\r\n    }\r\n    else if (_.isArray(input)) {\r\n        dataItems = input;\r\n    }\r\n    else if (typeof input === 'string') {\r\n        var dataItem = signature_parser_1.generateDataItemFromSignature(input);\r\n        dataItems = [dataItem];\r\n    }\r\n    else {\r\n        dataItems = [input];\r\n    }\r\n    return dataItems;\r\n}\r\n/* tslint:enable no-construct */\r\n//# sourceMappingURL=evm_data_type_factory.js.map"]},"metadata":{},"sourceType":"script"}