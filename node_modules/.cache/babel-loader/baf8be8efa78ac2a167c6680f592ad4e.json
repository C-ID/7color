{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst helpers_1 = require(\"./helpers\");\n\nconst env_1 = require(\"./lib/env\");\n\nconst browser_1 = require(\"./lib/browser\");\n\nconst node_1 = require(\"./lib/node\");\n\nconst fallback_1 = require(\"./lib/fallback\");\n\nfunction randomBytes(length) {\n  if (!helpers_1.isValidKeyLength(length)) {\n    throw new Error(`randomBytes - invalid key length: ${length}`);\n  }\n\n  let result;\n\n  if (env_1.isBrowser()) {\n    result = browser_1.browserRandomBytes(length);\n  } else if (env_1.isNode()) {\n    result = node_1.nodeRandomBytes(length);\n  } else {\n    result = fallback_1.fallbackRandomBytes(length);\n  }\n\n  return result;\n}\n\nexports.randomBytes = randomBytes;","map":{"version":3,"sources":["../../src/random.ts"],"names":[],"mappings":";;;;;;AAAA,MAAA,SAAA,GAAA,OAAA,CAAA,WAAA,CAAA;;AAEA,MAAA,KAAA,GAAA,OAAA,CAAA,WAAA,CAAA;;AACA,MAAA,SAAA,GAAA,OAAA,CAAA,eAAA,CAAA;;AACA,MAAA,MAAA,GAAA,OAAA,CAAA,YAAA,CAAA;;AACA,MAAA,UAAA,GAAA,OAAA,CAAA,gBAAA,CAAA;;AAEA,SAAgB,WAAhB,CAA4B,MAA5B,EAA0C;AACxC,MAAI,CAAC,SAAA,CAAA,gBAAA,CAAiB,MAAjB,CAAL,EAA+B;AAC7B,UAAM,IAAI,KAAJ,CAAU,qCAAqC,MAAM,EAArD,CAAN;AACD;;AACD,MAAI,MAAJ;;AACA,MAAI,KAAA,CAAA,SAAA,EAAJ,EAAiB;AACf,IAAA,MAAM,GAAG,SAAA,CAAA,kBAAA,CAAmB,MAAnB,CAAT;AACD,GAFD,MAEO,IAAI,KAAA,CAAA,MAAA,EAAJ,EAAc;AACnB,IAAA,MAAM,GAAG,MAAA,CAAA,eAAA,CAAgB,MAAhB,CAAT;AACD,GAFM,MAEA;AACL,IAAA,MAAM,GAAG,UAAA,CAAA,mBAAA,CAAoB,MAApB,CAAT;AACD;;AACD,SAAO,MAAP;AACD;;AAbD,OAAA,CAAA,WAAA,GAAA,WAAA","sourceRoot":"","sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst helpers_1 = require(\"./helpers\");\r\nconst env_1 = require(\"./lib/env\");\r\nconst browser_1 = require(\"./lib/browser\");\r\nconst node_1 = require(\"./lib/node\");\r\nconst fallback_1 = require(\"./lib/fallback\");\r\nfunction randomBytes(length) {\r\n    if (!helpers_1.isValidKeyLength(length)) {\r\n        throw new Error(`randomBytes - invalid key length: ${length}`);\r\n    }\r\n    let result;\r\n    if (env_1.isBrowser()) {\r\n        result = browser_1.browserRandomBytes(length);\r\n    }\r\n    else if (env_1.isNode()) {\r\n        result = node_1.nodeRandomBytes(length);\r\n    }\r\n    else {\r\n        result = fallback_1.fallbackRandomBytes(length);\r\n    }\r\n    return result;\r\n}\r\nexports.randomBytes = randomBytes;\r\n//# sourceMappingURL=random.js.map"]},"metadata":{},"sourceType":"script"}