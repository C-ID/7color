{"ast":null,"code":"import { InjectedConnector } from \"@web3-react/injected-connector\";\nimport { WalletConnectConnector } from \"@web3-react/walletconnect-connector\";\nimport { WalletLinkConnector } from \"@web3-react/walletlink-connector\";\nimport { LedgerConnector } from \"@web3-react/ledger-connector\";\nimport { TrezorConnector } from \"@web3-react/trezor-connector\";\nimport { FrameConnector } from \"@web3-react/frame-connector\";\nimport { FortmaticConnector } from \"@web3-react/fortmatic-connector\";\nimport { PortisConnector } from \"@web3-react/portis-connector\";\nimport { SquarelinkConnector } from \"@web3-react/squarelink-connector\";\nimport { TorusConnector } from \"@web3-react/torus-connector\";\nimport { AuthereumConnector } from \"@web3-react/authereum-connector\";\nconst POLLING_INTERVAL = 12000;\nconst RPC_URLS = {\n  1: \"https://mainnet.infura.io/v3/a6ceb4efc72f42e588718c4bcb49919c\",\n  4: \"https://ropsten.infura.io/v3/a6ceb4efc72f42e588718c4bcb49919c\"\n};\nexport const injected = new InjectedConnector({\n  supportedChainIds: [1, 3, 4, 5, 42]\n});\nexport const walletconnect = new WalletConnectConnector({\n  rpc: {\n    1: RPC_URLS[1]\n  },\n  bridge: \"https://bridge.walletconnect.org\",\n  qrcode: true,\n  pollingInterval: POLLING_INTERVAL\n});\nexport const walletlink = new WalletLinkConnector({\n  url: RPC_URLS[1],\n  appName: \"iearn.financaae\"\n});\nexport const ledger = new LedgerConnector({\n  chainId: 1,\n  url: RPC_URLS[1],\n  pollingInterval: POLLING_INTERVAL\n});\nexport const trezor = new TrezorConnector({\n  chainId: 1,\n  url: RPC_URLS[1],\n  pollingInterval: POLLING_INTERVAL,\n  manifestEmail: \"dummy@abc.xyz\",\n  manifestAppUrl: \"https://8rg3h.csb.app/\"\n});\nexport const frame = new FrameConnector({\n  supportedChainIds: [1]\n});\nexport const fortmatic = new FortmaticConnector({\n  apiKey: \"pk_live_F95FEECB1BE324B5\",\n  chainId: 1\n});\nexport const portis = new PortisConnector({\n  dAppId: \"5dea304b-33ed-48bd-8f00-0076a2546b60\",\n  networks: [1, 100]\n});\nexport const squarelink = new SquarelinkConnector({\n  clientId: \"5f2a2233db82b06b24f9\",\n  networks: [1, 100]\n});\nexport const torus = new TorusConnector({\n  chainId: 1\n});\nexport const authereum = new AuthereumConnector({\n  chainId: 1\n});","map":{"version":3,"sources":["F:/7color/src/stores/connectors.jsx"],"names":["InjectedConnector","WalletConnectConnector","WalletLinkConnector","LedgerConnector","TrezorConnector","FrameConnector","FortmaticConnector","PortisConnector","SquarelinkConnector","TorusConnector","AuthereumConnector","POLLING_INTERVAL","RPC_URLS","injected","supportedChainIds","walletconnect","rpc","bridge","qrcode","pollingInterval","walletlink","url","appName","ledger","chainId","trezor","manifestEmail","manifestAppUrl","frame","fortmatic","apiKey","portis","dAppId","networks","squarelink","clientId","torus","authereum"],"mappings":"AAAA,SAASA,iBAAT,QAAkC,gCAAlC;AACA,SAASC,sBAAT,QAAuC,qCAAvC;AACA,SAASC,mBAAT,QAAoC,kCAApC;AACA,SAASC,eAAT,QAAgC,8BAAhC;AACA,SAASC,eAAT,QAAgC,8BAAhC;AACA,SAASC,cAAT,QAA+B,6BAA/B;AACA,SAASC,kBAAT,QAAmC,iCAAnC;AACA,SAASC,eAAT,QAAgC,8BAAhC;AACA,SAASC,mBAAT,QAAoC,kCAApC;AACA,SAASC,cAAT,QAA+B,6BAA/B;AACA,SAASC,kBAAT,QAAmC,iCAAnC;AAEA,MAAMC,gBAAgB,GAAG,KAAzB;AACA,MAAMC,QAAQ,GAAG;AACf,KAAG,+DADY;AAEf,KAAG;AAFY,CAAjB;AAKA,OAAO,MAAMC,QAAQ,GAAG,IAAIb,iBAAJ,CAAsB;AAC5Cc,EAAAA,iBAAiB,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,EAAb;AADyB,CAAtB,CAAjB;AAIP,OAAO,MAAMC,aAAa,GAAG,IAAId,sBAAJ,CAA2B;AACtDe,EAAAA,GAAG,EAAE;AAAE,OAAGJ,QAAQ,CAAC,CAAD;AAAb,GADiD;AAEtDK,EAAAA,MAAM,EAAE,kCAF8C;AAGtDC,EAAAA,MAAM,EAAE,IAH8C;AAItDC,EAAAA,eAAe,EAAER;AAJqC,CAA3B,CAAtB;AAOP,OAAO,MAAMS,UAAU,GAAG,IAAIlB,mBAAJ,CAAwB;AAChDmB,EAAAA,GAAG,EAAET,QAAQ,CAAC,CAAD,CADmC;AAEhDU,EAAAA,OAAO,EAAE;AAFuC,CAAxB,CAAnB;AAKP,OAAO,MAAMC,MAAM,GAAG,IAAIpB,eAAJ,CAAoB;AACxCqB,EAAAA,OAAO,EAAE,CAD+B;AAExCH,EAAAA,GAAG,EAAET,QAAQ,CAAC,CAAD,CAF2B;AAGxCO,EAAAA,eAAe,EAAER;AAHuB,CAApB,CAAf;AAMP,OAAO,MAAMc,MAAM,GAAG,IAAIrB,eAAJ,CAAoB;AACxCoB,EAAAA,OAAO,EAAE,CAD+B;AAExCH,EAAAA,GAAG,EAAET,QAAQ,CAAC,CAAD,CAF2B;AAGxCO,EAAAA,eAAe,EAAER,gBAHuB;AAIxCe,EAAAA,aAAa,EAAE,eAJyB;AAKxCC,EAAAA,cAAc,EAAE;AALwB,CAApB,CAAf;AAQP,OAAO,MAAMC,KAAK,GAAG,IAAIvB,cAAJ,CAAmB;AAAES,EAAAA,iBAAiB,EAAE,CAAC,CAAD;AAArB,CAAnB,CAAd;AAEP,OAAO,MAAMe,SAAS,GAAG,IAAIvB,kBAAJ,CAAuB;AAC9CwB,EAAAA,MAAM,EAAE,0BADsC;AAE9CN,EAAAA,OAAO,EAAE;AAFqC,CAAvB,CAAlB;AAKP,OAAO,MAAMO,MAAM,GAAG,IAAIxB,eAAJ,CAAoB;AACxCyB,EAAAA,MAAM,EAAE,sCADgC;AAExCC,EAAAA,QAAQ,EAAE,CAAC,CAAD,EAAI,GAAJ;AAF8B,CAApB,CAAf;AAKP,OAAO,MAAMC,UAAU,GAAG,IAAI1B,mBAAJ,CAAwB;AAChD2B,EAAAA,QAAQ,EAAE,sBADsC;AAEhDF,EAAAA,QAAQ,EAAE,CAAC,CAAD,EAAI,GAAJ;AAFsC,CAAxB,CAAnB;AAKP,OAAO,MAAMG,KAAK,GAAG,IAAI3B,cAAJ,CAAmB;AAAEe,EAAAA,OAAO,EAAE;AAAX,CAAnB,CAAd;AAEP,OAAO,MAAMa,SAAS,GAAG,IAAI3B,kBAAJ,CAAuB;AAAEc,EAAAA,OAAO,EAAE;AAAX,CAAvB,CAAlB","sourcesContent":["import { InjectedConnector } from \"@web3-react/injected-connector\";\r\nimport { WalletConnectConnector } from \"@web3-react/walletconnect-connector\";\r\nimport { WalletLinkConnector } from \"@web3-react/walletlink-connector\";\r\nimport { LedgerConnector } from \"@web3-react/ledger-connector\";\r\nimport { TrezorConnector } from \"@web3-react/trezor-connector\";\r\nimport { FrameConnector } from \"@web3-react/frame-connector\";\r\nimport { FortmaticConnector } from \"@web3-react/fortmatic-connector\";\r\nimport { PortisConnector } from \"@web3-react/portis-connector\";\r\nimport { SquarelinkConnector } from \"@web3-react/squarelink-connector\";\r\nimport { TorusConnector } from \"@web3-react/torus-connector\";\r\nimport { AuthereumConnector } from \"@web3-react/authereum-connector\";\r\n\r\nconst POLLING_INTERVAL = 12000;\r\nconst RPC_URLS = {\r\n  1: \"https://mainnet.infura.io/v3/a6ceb4efc72f42e588718c4bcb49919c\",\r\n  4: \"https://ropsten.infura.io/v3/a6ceb4efc72f42e588718c4bcb49919c\"\r\n};\r\n\r\nexport const injected = new InjectedConnector({\r\n  supportedChainIds: [1, 3, 4, 5, 42]\r\n});\r\n\r\nexport const walletconnect = new WalletConnectConnector({\r\n  rpc: { 1: RPC_URLS[1]},\r\n  bridge: \"https://bridge.walletconnect.org\",\r\n  qrcode: true,\r\n  pollingInterval: POLLING_INTERVAL\r\n});\r\n\r\nexport const walletlink = new WalletLinkConnector({\r\n  url: RPC_URLS[1],\r\n  appName: \"iearn.financaae\"\r\n});\r\n\r\nexport const ledger = new LedgerConnector({\r\n  chainId: 1,\r\n  url: RPC_URLS[1],\r\n  pollingInterval: POLLING_INTERVAL\r\n});\r\n\r\nexport const trezor = new TrezorConnector({\r\n  chainId: 1,\r\n  url: RPC_URLS[1],\r\n  pollingInterval: POLLING_INTERVAL,\r\n  manifestEmail: \"dummy@abc.xyz\",\r\n  manifestAppUrl: \"https://8rg3h.csb.app/\"\r\n});\r\n\r\nexport const frame = new FrameConnector({ supportedChainIds: [1] });\r\n\r\nexport const fortmatic = new FortmaticConnector({\r\n  apiKey: \"pk_live_F95FEECB1BE324B5\",\r\n  chainId: 1\r\n});\r\n\r\nexport const portis = new PortisConnector({\r\n  dAppId: \"5dea304b-33ed-48bd-8f00-0076a2546b60\",\r\n  networks: [1, 100]\r\n});\r\n\r\nexport const squarelink = new SquarelinkConnector({\r\n  clientId: \"5f2a2233db82b06b24f9\",\r\n  networks: [1, 100]\r\n});\r\n\r\nexport const torus = new TorusConnector({ chainId: 1 });\r\n\r\nexport const authereum = new AuthereumConnector({ chainId: 1 });\r\n"]},"metadata":{},"sourceType":"module"}