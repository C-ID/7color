{"ast":null,"code":"\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst penpal_1 = __importDefault(require(\"penpal\"));\n\nconst eventemitter3_1 = __importDefault(require(\"eventemitter3\"));\n\nconst is_buffer_1 = __importDefault(require(\"is-buffer\"));\n\nconst version_1 = __importDefault(require(\"./version\"));\n\nconst AuthereumProvider_1 = __importDefault(require(\"./AuthereumProvider\"));\n\nconst StarkWareProvider_1 = __importDefault(require(\"./StarkWareProvider\"));\n\nconst config_1 = require(\"./config\");\n\nconst utils_1 = require(\"./utils\"); // Serialize object for postMessage to iframe.\n// Converts references to values.\n\n\nconst serializeMessageObj = obj => {\n  const tx = {};\n\n  for (let k in obj) {\n    let v = obj[k];\n\n    if (typeof v === 'object' && v.toString === 'function') {\n      v = v.toString('hex');\n    }\n\n    tx[k] = v;\n  }\n\n  return tx;\n};\n\nconst defaultIframeStyle = {\n  width: 0,\n  height: 0,\n  top: 0,\n  left: 0,\n  zIndex: 1\n};\n\nconst noop = () => {// noop\n}; // This is a placeholder notify object stub until notifier script url is\n// injected into page after iframe is loaded.\n\n\nconst defaultNotifier = {\n  notify: (type, message) => {\n    console.debug(type, message);\n    return {\n      dismiss: noop\n    };\n  }\n};\n\nconst constructIframe = input => {\n  const {\n    id,\n    url,\n    isPreload,\n    disableGoogleAnalytics\n  } = input;\n  let parentUrl = window.location.href;\n\n  try {\n    parentUrl = parent.document.URL;\n  } catch (err) {// noop\n  }\n\n  const srcUrl = utils_1.updateQueryParams({\n    url: parentUrl,\n    isPreload,\n    disableGoogleAnalytics\n  }, url);\n  const iframe = document.createElement('iframe');\n  iframe.id = id;\n  iframe.name = id.replace(/--.*/, '');\n  iframe.title = id;\n  iframe.src = srcUrl;\n\n  if (['Safari', 'Firefox'].includes(utils_1.browserInfo().browser)) {\n    iframe.setAttribute('sandbox', 'allow-storage-access-by-user-activation allow-scripts allow-same-origin');\n  }\n\n  iframe.style.position = 'fixed';\n  iframe.style.bottom = '0';\n  iframe.style.right = '0';\n  iframe.style.width = '0';\n  iframe.style.height = '0';\n  iframe.style.border = '0';\n  iframe.style.background = 'transparent';\n  iframe.style.zIndex = `${defaultIframeStyle.zIndex}`;\n  iframe.setAttribute('frameborder', '0');\n  iframe.setAttribute('scrolling', 'no');\n  return iframe;\n};\n\nconst onDomReady = () => {\n  return new Promise(resolve => {\n    if (typeof window !== 'undefined') {\n      if (document.readyState !== 'loading') {\n        resolve();\n      } else {\n        document.addEventListener('DOMContentLoaded', () => resolve());\n      }\n    }\n  });\n};\n\nclass Authereum extends eventemitter3_1.default {\n  constructor(config) {\n    super();\n    this._debug = !!utils_1.getQueryParamValue('debug');\n    this._notifier = defaultNotifier;\n    this._cacheReady = false;\n    this._iframeReady = false;\n    this._configReady = false;\n    this._iframeConnecting = null;\n    this._readyEmitted = false;\n    this._widgetEnabled = false;\n    this._iframeStyle = defaultIframeStyle;\n    this._notificationIframeStyle = defaultIframeStyle;\n    this._blockedPopupRedirect = true;\n    this._forceRedirect = false;\n    this._heartbeatStarted = false;\n    this._backoffTimeout = 1;\n    this._userConfig = null;\n    this._asymmetricEncryptionKey = null;\n    this._authereumQueryParams = {};\n    this._injectedElements = [];\n    this._notificationsMap = {};\n    this._destroyed = false;\n    this._starkProvider = null;\n    this._isPreload = false;\n    this._disableGoogleAnalytics = false;\n    this._eventListeners = []; // NOTE: keep this sync\n\n    this._init = config => {\n      this._initConfig(config);\n\n      this._iframeStyle = {\n        width: 0,\n        height: 0,\n        top: 0,\n        left: 0,\n        zIndex: 0\n      };\n      this._provider = new AuthereumProvider_1.default(this);\n\n      this._connectToChildIframe().catch(() => {\n        this._startHeartbeat(true);\n      }).catch(err => {\n        console.warn('ping error:', err.message);\n      });\n\n      this._setupCache().catch(noop);\n\n      this._cacheAuthereumQueryParams();\n\n      this._setupSigningKey().catch(noop);\n\n      this._setupResizeListener();\n\n      this._setupFocusListener();\n\n      this._setupActionKeyListener();\n\n      this._emitReadyEvent();\n    }; // NOTE: keep this sync\n\n\n    this._initConfig = config => {\n      if (typeof config === 'string') {\n        let network = config;\n        this._networkName = (network || '').trim().toLowerCase();\n\n        if (['mainnet', 'ropsten', 'rinkeby', 'kovan', 'goerli'].includes(this._networkName)) {\n          this._xsUri = config_1.defaultConfig.xsUri(this._networkName);\n        } else if (config === 'localhost') {\n          this._xsUri = 'http://localhost:3002';\n          this._networkName = 'kovan';\n        } else {\n          throw new Error('Unsupported network');\n        }\n      } else {\n        config = config || {};\n        this._networkName = config.networkName || 'mainnet';\n        this._xsUri = config.xsUri || config_1.defaultConfig.xsUri(this._networkName);\n        this._apiKey = config.apiKey;\n      }\n\n      if (config.redirectUri) {\n        this._redirectUri = config.redirectUri;\n      } else {\n        this._redirectUri = window.location.href;\n      }\n\n      this._redirectUri = this._redirectUri || window.location.href;\n    }; // NOTE: keep this sync\n\n\n    this._setConfig = config => {\n      if (typeof this._userConfig === 'string') {\n        let network = this._userConfig;\n        this._networkName = (network || '').trim().toLowerCase();\n        this._userConfig = {\n          networkName: this._networkName,\n          xsUri: config_1.defaultConfig.xsUri(this._networkName)\n        };\n      }\n\n      const {\n        apiKey,\n        apiUri,\n        rpcUri,\n        webUri,\n        notifierUri,\n        networkName,\n        networkId,\n        disableNotifications,\n        blockedPopupRedirect,\n        forceRedirect\n      } = this._userConfig || {};\n\n      if (apiKey) {\n        this._apiKey = apiKey;\n      } // userConfig overrides regular config\n\n\n      if (apiUri) {\n        this._apiUri = apiUri;\n      } else if (config.apiUri) {\n        this._apiUri = config.apiUri;\n      } // userConfig overrides regular config\n\n\n      if (rpcUri) {\n        this._rpcUri = rpcUri;\n      } else if (config.rpcUri) {\n        this._rpcUri = config.rpcUri;\n      } // userConfig overrides regular config\n\n\n      if (webUri) {\n        this._webUri = webUri;\n      } else if (config.webUri) {\n        this._webUri = config.webUri;\n      } // userConfig overrides regular config\n\n\n      if (notifierUri) {\n        this._notifierUri = notifierUri;\n      } else if (config.notifierUri) {\n        this._notifierUri = config.notifierUri;\n      } // userConfig overrides regular config\n\n\n      if (networkName) {\n        this._networkName = networkName;\n      } else if (config.networkName) {\n        this._networkName = config.networkName;\n      } // userConfig overrides regular config\n\n\n      if (networkId) {\n        this._networkId = networkId;\n      } else if (config.networkId) {\n        this._networkId = config.networkId;\n      } // userConfig overrides regular config\n\n\n      if (typeof disableNotifications === 'boolean') {\n        this._disableNotifications = disableNotifications;\n      } else if (typeof config.disableNotifications === 'boolean') {\n        this._disableNotifications = config.disableNotifications;\n      } // userConfig overrides regular config\n\n\n      if (typeof blockedPopupRedirect === 'boolean') {\n        this._blockedPopupRedirect = blockedPopupRedirect;\n      } else if (typeof config.blockedPopupRedirect === 'boolean') {\n        this._blockedPopupRedirect = config.blockedPopupRedirect;\n      } // userConfig overrides regular config\n\n\n      if (typeof forceRedirect === 'boolean') {\n        this._forceRedirect = forceRedirect;\n      } else if (typeof config.forceRedirect === 'boolean') {\n        this._forceRedirect = config.forceRedirect;\n      }\n    };\n\n    this._setupCache = () => __awaiter(this, void 0, void 0, function* () {\n      yield Promise.all([this._cacheLoginKeyAddress(), this._cacheIsAuthenticated(), this._cacheAccountAddress()]);\n      this._cacheReady = true;\n    });\n\n    this._handleWindowFocus = () => {\n      if (this._destroyed) {\n        return;\n      }\n\n      if (!this._bodyContainsIframe()) {\n        return;\n      }\n\n      return this._postMessageToChild({\n        method: 'onWindowFocus'\n      });\n    };\n\n    this._resetCache = () => __awaiter(this, void 0, void 0, function* () {\n      return this._setupCache();\n    });\n\n    this._injectScript = (sourceUrl, id = '') => __awaiter(this, void 0, void 0, function* () {\n      yield this._tilDomReady();\n      return new Promise((resolve, reject) => {\n        if (!sourceUrl) {\n          throw new Error('sourceUrl is required');\n        }\n\n        if (document.getElementById(id)) {\n          resolve();\n          return;\n        }\n\n        const script = document.createElement('script');\n        script.id = id;\n        script.type = 'text/javascript';\n        script.async = true;\n\n        script.onload = () => {\n          resolve();\n        };\n\n        script.onerror = err => {\n          reject(err);\n        };\n\n        script.src = sourceUrl;\n\n        this._injectedElements.push(script);\n\n        document.getElementsByTagName('head')[0].appendChild(script);\n      });\n    });\n\n    this._setupResizeListener = () => __awaiter(this, void 0, void 0, function* () {\n      this.addEventListener('resize', this._handleResizeThrottled, false);\n      this.addEventListener('resize', this._handleResizeDebounced, false);\n    });\n\n    this._handleActionKeyPress = event => {\n      if (this._destroyed) {\n        return;\n      }\n\n      if (!this._bodyContainsIframe()) {\n        return;\n      }\n\n      let keyName = '';\n\n      if (event.key === 'Escape' || event.key === 'Esc' || event.keyCode === 27) {\n        keyName = 'escape';\n      } else if (event.key === 'Enter' || event.keyCode === 13) {\n        keyName = 'enter';\n      } else if (event.key === 'ArrowLeft' || event.keyCode === 37) {\n        keyName = 'left';\n      } else if (event.key === 'ArrowUp' || event.keyCode === 38) {\n        keyName = 'up';\n      } else if (event.key === 'ArrowRight' || event.keyCode === 39) {\n        keyName = 'right';\n      } else if (event.key === 'ArrowDown' || event.keyCode === 40) {\n        keyName = 'down';\n      }\n\n      if (keyName) {\n        return this._postMessageToChild({\n          method: 'actionKeyPress',\n          params: keyName\n        });\n      }\n    };\n\n    this._handleResize = event => __awaiter(this, void 0, void 0, function* () {\n      if (this._destroyed) {\n        return;\n      }\n\n      if (!this._bodyContainsIframe()) {\n        return;\n      }\n\n      const size = yield this._getWindowSize();\n      return this._postMessageToChild({\n        method: 'onResize',\n        params: size\n      });\n    });\n\n    this._handleResizeThrottled = utils_1.throttle(event => {\n      return this._handleResize(event);\n    }, 10);\n    this._handleResizeDebounced = utils_1.debounce(event => {\n      return this._handleResize(event);\n    }, 10);\n\n    this._cacheLoginKeyAddress = () => __awaiter(this, void 0, void 0, function* () {\n      const loginKey = yield this._postMessageToChild({\n        method: 'getOrCreateLoginKey'\n      });\n      this._cachedLoginKeyAddress = loginKey.publicAddress;\n    });\n\n    this._cacheAccountAddress = () => __awaiter(this, void 0, void 0, function* () {\n      const accountAddress = yield this._postMessageToChild({\n        method: 'getAccountAddress'\n      });\n      this._cachedAccountAddress = accountAddress;\n    });\n\n    this._cacheIsAuthenticated = () => __awaiter(this, void 0, void 0, function* () {\n      const isAuthenticated = yield this._postMessageToChild({\n        method: 'isAuthenticated'\n      });\n      this._cachedIsAuthenticated = isAuthenticated;\n    }); // NOTE: to prevent pop-ups from being blocked, there must be no awaits from\n    // click to window.open, meaning value lookups must be cached before the\n    // login method is called.\n\n\n    this.login = utils_1.throttle(() => __awaiter(this, void 0, void 0, function* () {\n      const isIframeReady = this._iframeReady && this._cacheReady;\n      const isConfigReady = this._configReady; // these are false when dapp calls login immediately on page load\n      // so we're forced to wait here.\n\n      if (!(isIframeReady && isConfigReady)) {\n        yield this._tilConfigReady();\n        yield this._tilReady();\n      }\n\n      if (!this._cachedIsAuthenticated) {\n        // NOTE: if not logged in to dapp, then proceed to login\n        yield this._signLoginKeyRequest(this._cachedLoginKeyAddress);\n        return this.getAuthenticatedAccount();\n      } else {\n        // only show one already logged in notification at a time\n        if (!this._notificationsMap['loggedIn']) {\n          this._postMessageToChild({\n            method: 'notification',\n            params: {\n              type: 'success',\n              message: 'You are logged into Authereum',\n              timeout: 5e3\n            }\n          }).catch(noop);\n\n          this._notificationsMap['loggedIn'] = true;\n          setTimeout(() => {\n            this._notificationsMap['loggedIn'] = null;\n          }, 5e3);\n        }\n      } // await first\n\n\n      const account = yield this.getAuthenticatedAccount();\n      return account;\n    }), 250);\n\n    this.authenticate = () => __awaiter(this, void 0, void 0, function* () {\n      console.warn('Deprecation notice: `authereum.authenticate()` is deprecated. Use `authereum.login()` instead.');\n      return this.login();\n    });\n\n    this.isAuthenticated = () => __awaiter(this, void 0, void 0, function* () {\n      return this._handleError(this._postMessageToChild({\n        method: 'isAuthenticated'\n      }));\n    });\n\n    this.logout = () => __awaiter(this, void 0, void 0, function* () {\n      const res = yield this._postMessageToChild({\n        method: 'logout'\n      });\n      yield this._resetCache();\n      this.emit('logout', {});\n      return res;\n    });\n\n    this.getAuthenticatedAccount = () => __awaiter(this, void 0, void 0, function* () {\n      return this._handleError(this._postMessageToChild({\n        method: 'getAuthenticatedAccount'\n      }));\n    });\n\n    this.getDappKey = () => {\n      return this._handleError(this._postMessageToChild({\n        method: 'getLoginKey'\n      }));\n    };\n\n    this.getLoginKey = () => {\n      console.warn('Deprecation notice: `authereum.getLoginKey()` is deprecated. Use `authereum.getDappKey()` instead.');\n      return this.getDappKey();\n    };\n\n    this.signMessage = utils_1.throttle((message, options = {}) => __awaiter(this, void 0, void 0, function* () {\n      return this._handleError(this._postMessageToChild({\n        method: 'signMessage',\n        params: [message, options]\n      }));\n    }), 250);\n    this.signPersonalMessage = utils_1.throttle(message => __awaiter(this, void 0, void 0, function* () {\n      return this._handleError(this._postMessageToChild({\n        method: 'signMessage',\n        params: [message, {\n          personal: true\n        }]\n      }));\n    }), 250);\n    this.signWithDappKey = utils_1.throttle(message => __awaiter(this, void 0, void 0, function* () {\n      console.warn('Deprecation notice: `authereum.signWithDappKey()` is deprecated. Use `authereum.signMess()` instead.');\n      return this.signMessage(message);\n    }), 250);\n    this.signWithLoginKey = utils_1.throttle(message => __awaiter(this, void 0, void 0, function* () {\n      console.warn('Deprecation notice: `authereum.signWithLoginKey()` is deprecated. Use `authereum.signWithDappKey()` instead.');\n      return this.signWithDappKey(message);\n    }), 250);\n    this.signTypedMessage = utils_1.throttle((message, options = {}) => __awaiter(this, void 0, void 0, function* () {\n      console.warn('Deprecation notice: `authereum.signTypedMessage()` is deprecated. Use `authereum.signMessage()` instead.');\n      return this.signMessage(message, options);\n    }), 250);\n    this.signTypedMessageWithDappKey = utils_1.throttle(message => __awaiter(this, void 0, void 0, function* () {\n      console.warn('Deprecation notice: `authereum.signTypedMessageWithDappKey()` is deprecated. Use `authereum.signMessage()` instead.');\n      return this.signTypedMessage(message);\n    }), 250);\n    this.signMessageWithAdminKey = utils_1.throttle(message => __awaiter(this, void 0, void 0, function* () {\n      console.warn('Deprecation notice: `authereum.signMessageWithAdminKey()` is deprecated. Use `authereum.signMessageWithSigningKey()` instead.');\n      return null;\n    }), 250);\n    this.signMessageWithSigningKey = utils_1.throttle((message, options = {}) => __awaiter(this, void 0, void 0, function* () {\n      return this._handleError(this._postMessageToChild({\n        method: 'signMessageWithSigningKey',\n        params: [message, options]\n      }));\n    }), 250);\n\n    this.getSigningKeyAddress = message => __awaiter(this, void 0, void 0, function* () {\n      return this._handleError(this._postMessageToChild({\n        method: 'getSigningKeyAddress'\n      }));\n    });\n\n    this.getLoginKeyAuthSignature = () => __awaiter(this, void 0, void 0, function* () {\n      return this._handleError(this._postMessageToChild({\n        method: 'getLoginKeyAuthSignature'\n      }));\n    });\n\n    this.getLoginKeyRestrictionsData = () => __awaiter(this, void 0, void 0, function* () {\n      return this._handleError(this._postMessageToChild({\n        method: 'getLoginKeyRestrictionsData'\n      }));\n    });\n\n    this.getSigningKeyAuthSignature = () => __awaiter(this, void 0, void 0, function* () {\n      return this._handleError(this._postMessageToChild({\n        method: 'getSigningKeyAuthSignature'\n      }));\n    });\n\n    this.getAccountAddress = () => __awaiter(this, void 0, void 0, function* () {\n      // required so it waits for login key to be set\n      yield this._tilReady();\n      return this._handleError(this._postMessageToChild({\n        method: 'getAccountAddress'\n      }));\n    });\n\n    this.getBalance = () => __awaiter(this, void 0, void 0, function* () {\n      return this._handleError(this._postMessageToChild({\n        method: 'getBalance'\n      }));\n    });\n\n    this.getRpcUri = () => __awaiter(this, void 0, void 0, function* () {\n      yield this._tilConfigReady();\n      return this._rpcUri;\n    });\n\n    this.getNetworkId = () => __awaiter(this, void 0, void 0, function* () {\n      return this._handleError(this._postMessageToChild({\n        method: 'getNetworkId'\n      }));\n    });\n\n    this.getNetworkName = () => __awaiter(this, void 0, void 0, function* () {\n      return this._handleError(this._postMessageToChild({\n        method: 'getNetworkName'\n      }));\n    });\n\n    this.getCachedNetworkName = () => {\n      return this._networkName;\n    };\n\n    this.getProvider = () => {\n      return this._provider;\n    };\n\n    this.getStarkProvider = () => {\n      return this._starkProvider;\n    };\n\n    this._handleError = promise => __awaiter(this, void 0, void 0, function* () {\n      return promise.catch(err => {\n        // NOTE: emit errors but don't throw notification here.\n        this.emit('error', err); // NOTE: rethrow error to let dapps handle error\n\n        throw err;\n      });\n    });\n\n    this.signTransaction = utils_1.throttle(tx => __awaiter(this, void 0, void 0, function* () {\n      yield this._tilReady();\n      return this._handleError(this._postMessageToChild({\n        method: 'signTransaction',\n        params: serializeMessageObj(tx)\n      }));\n    }), 250);\n    this.signTransactionWithLoginKey = utils_1.throttle(tx => __awaiter(this, void 0, void 0, function* () {\n      console.warn('Deprecation notice: `authereum.signTransactionWithLoginKey()` is deprecated. Use `authereum.signTransaction()` instead.');\n      return this.signTransaction(tx);\n    }), 250);\n    this.sendTransaction = utils_1.throttle(userTransaction => __awaiter(this, void 0, void 0, function* () {\n      yield this._tilReady();\n      return this._handleError(this._postMessageToChild({\n        method: 'sendTransaction',\n        params: serializeMessageObj(userTransaction)\n      }));\n    }), 250);\n    this.sendTransactionBatch = utils_1.throttle(userTransactions => __awaiter(this, void 0, void 0, function* () {\n      yield this._tilReady();\n      return this._handleError(this._postMessageToChild({\n        method: 'sendTransactionBatch',\n        params: userTransactions.map(serializeMessageObj)\n      }));\n    }), 250);\n    this.estimateGasBatch = utils_1.throttle(userTransactions => __awaiter(this, void 0, void 0, function* () {\n      yield this._tilReady();\n      return this._handleError(this._postMessageToChild({\n        method: 'estimateGasBatch',\n        params: userTransactions.map(serializeMessageObj)\n      }));\n    }), 250);\n\n    this.isReady = () => {\n      return this._iframeReady && this._cacheReady;\n    };\n\n    this.updateConfig = config => {\n      this._userConfig = config;\n\n      this._setConfig(config);\n    };\n\n    this.getConfig = () => {\n      return {\n        apiUri: this._apiUri,\n        rpcUri: this._rpcUri,\n        webUri: this._webUri,\n        xsUri: this._xsUri,\n        networkName: this._networkName,\n        networkId: this._networkId,\n        disableNotifications: this._disableNotifications\n      };\n    };\n\n    this.showWidget = (enabled = true) => __awaiter(this, void 0, void 0, function* () {\n      if (!enabled) {\n        this._widgetEnabled = false;\n        return this._postMessageToChild({\n          method: 'hideWidget'\n        });\n      }\n\n      this._widgetEnabled = true;\n      return this._postMessageToChild({\n        method: 'showWidget'\n      });\n    });\n\n    this.hideWidget = () => __awaiter(this, void 0, void 0, function* () {\n      this._widgetEnabled = false;\n      return this._postMessageToChild({\n        method: 'hideWidget'\n      });\n    });\n\n    this.widgetEnabled = () => {\n      return this._widgetEnabled;\n    };\n\n    this.addFunds = opts => {\n      return this._postMessageToChild({\n        method: 'addFunds',\n        params: opts\n      });\n    };\n\n    this._openUrl = (opts = {}) => {\n      const {\n        url,\n        newWindow\n      } = opts;\n\n      if (newWindow) {\n        window.open(url, '_blank');\n      } else {\n        window.location.href = url;\n      }\n    };\n\n    this._tilIframeReady = () => __awaiter(this, void 0, void 0, function* () {\n      if (!this._iframeReady) {\n        yield utils_1.wait(100);\n        return this._tilIframeReady();\n      }\n\n      yield utils_1.wait(100);\n      return true;\n    });\n\n    this._tilConfigReady = () => __awaiter(this, void 0, void 0, function* () {\n      if (!this._configReady) {\n        yield utils_1.wait(100);\n        return this._tilConfigReady();\n      }\n\n      yield utils_1.wait(100);\n      return true;\n    });\n\n    this._tilReady = () => __awaiter(this, void 0, void 0, function* () {\n      if (!this.isReady()) {\n        yield utils_1.wait(100);\n        return this._tilReady();\n      }\n\n      yield utils_1.wait(100);\n      return true;\n    });\n\n    this._emitReadyEvent = () => __awaiter(this, void 0, void 0, function* () {\n      yield this._tilReady();\n      if (this._readyEmitted) return;\n      this._readyEmitted = true;\n      this.emit('ready', {});\n    });\n\n    this._connectToChildIframe = () => __awaiter(this, void 0, void 0, function* () {\n      if (this._iframeConnecting) {\n        return this._iframeConnecting;\n      }\n\n      this._iframeReady = false;\n      this._iframeConnecting = true;\n      const iframe = yield this._getOrCreateMainIframe();\n      this._iframeConnection = penpal_1.default.connectToChild({\n        iframe,\n        timeout: 60e3,\n        methods: {\n          // NOTE: the postMessage penpal method should be the only method that\n          // exists.\n          postMessage: data => {\n            return this._handlePostMessage(data);\n          }\n        }\n      });\n      this._iframeConnecting = new Promise((resolve, reject) => {\n        let timedout = false;\n        const timer = setTimeout(() => {\n          if (!this._iframeReady) {\n            timedout = true;\n            this._iframeConnecting = null;\n            reject(new Error('timedout'));\n          }\n        }, 6e3); // needs to be long enough for x-site to be fully loaded\n\n        this._iframeConnection.promise.then(child => {\n          clearTimeout(timer);\n\n          if (timedout) {\n            return;\n          }\n\n          this._iframeReady = true;\n          this._childIframeConnection = child;\n\n          this._startHeartbeat();\n\n          this._iframeConnecting = null;\n          resolve();\n        }).catch(err => {\n          clearTimeout(timer);\n\n          if (timedout) {\n            return;\n          }\n\n          reject(err);\n        });\n      });\n      return this._iframeConnecting;\n    });\n\n    this._startHeartbeat = (reconnect = false) => {\n      if (!this._heartbeatStarted) {\n        this._heartbeat(reconnect);\n\n        this._heartbeatStarted = true;\n      }\n    };\n\n    this._heartbeat = (reconnect = false) => __awaiter(this, void 0, void 0, function* () {\n      if (this._destroyed) {\n        return;\n      }\n\n      yield utils_1.wait(2e3);\n\n      try {\n        if (reconnect) {\n          yield this._connectToChildIframe();\n          this._backoffTimeout = 1;\n          return this._heartbeat();\n        }\n\n        yield this._ping();\n      } catch (err) {\n        // reconnect on destroyed connection error or ping timeout error\n        if (/destroy|timedout/gi.test(err.message)) {\n          yield utils_1.wait(this._backoffTimeout * 1e3); // exponential backoff\n\n          this._backoffTimeout = this._backoffTimeout << 1;\n          return this._heartbeat(true);\n        }\n      }\n\n      return this._heartbeat();\n    });\n\n    this._ping = () => __awaiter(this, void 0, void 0, function* () {\n      if (this._destroyed) {\n        console.warn('Authereum instance destroyed. Message not posted to child.');\n        return;\n      }\n\n      return new Promise((resolve, reject) => {\n        let timedout = false;\n        const timer = setTimeout(() => {\n          timedout = true;\n        }, 5e3);\n\n        this._postMessageToChild({\n          method: 'ping'\n        }).then(pong => {\n          clearTimeout(timer);\n\n          if (timedout) {\n            reject(new Error('timedout'));\n            return;\n          }\n\n          if (pong !== 'pong') {\n            reject(new Error('Invalid response'));\n            return;\n          }\n\n          resolve(pong);\n        }).catch(err => {\n          reject(err);\n        });\n      });\n    });\n\n    this._constructIframe = input => {\n      const iframe = constructIframe(Object.assign(Object.assign({}, input), {\n        isPreload: this._isPreload,\n        disableGoogleAnalytics: this._disableGoogleAnalytics\n      }));\n\n      if (this._debug) {\n        iframe.style.outline = '1px solid red';\n      }\n\n      this._injectedElements.push(iframe);\n\n      return iframe;\n    };\n\n    this._getConfigFromChild = () => __awaiter(this, void 0, void 0, function* () {\n      return this._postMessageToChild({\n        method: 'getConfig'\n      });\n    });\n\n    this._postVersionToChild = () => __awaiter(this, void 0, void 0, function* () {\n      return this._postMessageToChild({\n        method: 'version',\n        params: this.version()\n      });\n    });\n\n    this._postConfigToChild = () => __awaiter(this, void 0, void 0, function* () {\n      return this._postMessageToChild({\n        method: 'config',\n        params: {\n          apiKey: this._apiKey,\n          disableNotifications: this._disableNotifications\n        }\n      });\n    });\n\n    this._loadAsymmetricEncryptionKeyFromChild = () => __awaiter(this, void 0, void 0, function* () {\n      this._asymmetricEncryptionKey = yield this._postMessageToChild({\n        method: 'getAsymmetricEncryptionKey'\n      });\n    });\n\n    this._postMessageToChild = payload => __awaiter(this, void 0, void 0, function* () {\n      yield this._tilIframeReady();\n\n      if (this._destroyed) {\n        throw new Error('Authereum instance destroyed.');\n      }\n\n      if (!this._bodyContainsIframe()) {\n        this._destroyed = true;\n\n        this._teardownEventListeners(); // ignore destroy call to already destroyed iframe\n\n\n        if (payload.method === 'destroy') {\n          return;\n        }\n\n        throw new Error('Authereum instance or iframe destroyed.');\n      }\n\n      return this._handleError(this._childIframeConnection.postMessage(payload));\n    });\n\n    this._handleChildLogoutEvent = () => __awaiter(this, void 0, void 0, function* () {\n      yield this._resetCache();\n      this.emit('logout', {});\n    });\n\n    this._handleChildDappKeyExpired = loginKeyAddress => __awaiter(this, void 0, void 0, function* () {\n      if (loginKeyAddress === this._cachedLoginKeyAddress) {\n        yield this._resetCache();\n        this.emit('dappKeyExpired', loginKeyAddress);\n        this.emit('logout');\n      }\n    });\n\n    this._handlePostMessage = data => {\n      try {\n        const {\n          method,\n          params\n        } = data;\n\n        switch (method) {\n          case 'onError':\n            const err = params;\n            this.emit('error', err);\n\n            this._notifier.notify({\n              type: 'error',\n              message: err.message\n            });\n\n            return;\n\n          case 'onLogout':\n            return this._handleChildLogoutEvent();\n\n          case 'onDappKeyExpired':\n            return this._handleChildDappKeyExpired(params);\n\n          case 'login':\n            return this.login();\n\n          case 'setWidgetPosition':\n            // const position = params\n            // const { x, y } = position\n            // this.iframeStyle.left = x\n            // this.iframeStyle.top = y\n            // this._refreshWidget()\n            return;\n\n          case 'setWidgetSize':\n            {\n              const size = params;\n              const {\n                width,\n                height\n              } = size;\n              this._iframeStyle.width = width;\n              this._iframeStyle.height = height;\n              return this._refreshWidget();\n            }\n\n          case 'setWidgetStyle':\n            {\n              const style = params;\n\n              for (let key in style) {\n                this._iframeStyle[key] = style[key];\n              }\n\n              return this._refreshWidget();\n            }\n\n          case 'setNotificationWidgetSize':\n            {\n              const size = params;\n              const {\n                width,\n                height\n              } = size;\n              this._notificationIframeStyle.width = width;\n              this._notificationIframeStyle.height = height;\n              return this._refreshNotificationWidget();\n            }\n\n          case 'setNotificationWidgetStyle':\n            {\n              const style = params;\n\n              for (let key in style) {\n                this._notificationIframeStyle[key] = style[key];\n              }\n\n              return this._refreshNotificationWidget();\n            }\n\n          case 'getWindowSize':\n            return this._getWindowSize();\n\n          case 'hideWidget':\n            return this.hideWidget();\n\n          case 'log':\n            return this._handlePostMessageLog(params);\n\n          case 'openUrl':\n            return this._openUrl(params);\n\n          default:\n            break;\n        }\n      } catch (err) {// noop\n      }\n    };\n\n    this._handlePostMessageLog = data => {\n      if (this._isPreload) {\n        return;\n      }\n\n      let {\n        type,\n        message\n      } = data;\n\n      if (!type) {\n        type = 'log';\n      }\n\n      console[type](message);\n    };\n\n    this._getWindowSize = () => {\n      return {\n        width: this._getWindowWidth(),\n        height: this._getWindowHeight()\n      };\n    };\n\n    this._getWindowWidth = () => {\n      return window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;\n    };\n\n    this._getWindowHeight = () => {\n      return window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight;\n    }; // public _setIframePositionTop = (y: number) => {\n    // if (!this._iframe) return\n    // this._iframe.style.top = `${y}px`\n    // }\n\n\n    this._setIframePositionLeft = x => {\n      if (!this._iframe) return;\n      this._iframe.style.left = `${x}px`;\n    };\n\n    this._setIframeWidth = width => {\n      if (!this._iframe) return;\n      this._iframe.style.width = `${width}px`;\n    };\n\n    this._setIframeHeight = height => {\n      if (!this._iframe) return;\n      this._iframe.style.height = `${height}px`;\n    };\n\n    this._refreshWidget = () => {\n      const {\n        top,\n        left,\n        width,\n        height,\n        zIndex\n      } = this._iframeStyle;\n      if (this._isPreload) return;\n      if (!this._iframe) return; // this._setIframePositionTop(top)\n      // this._setIframePositionLeft(left)\n\n      this._setIframeWidth(width);\n\n      this._setIframeHeight(height);\n\n      this._iframe.style.zIndex = `${zIndex || 0}`;\n    };\n\n    this._refreshNotificationWidget = () => {\n      const {\n        top,\n        left,\n        width,\n        height,\n        zIndex\n      } = this._notificationIframeStyle;\n      if (this._isPreload) return;\n      this._notificationIframe.style.width = `${width}px`;\n      this._notificationIframe.style.height = `${height}px`;\n      this._notificationIframe.style.zIndex = `${zIndex || 0}`;\n    };\n\n    this._loginKeyExists = () => __awaiter(this, void 0, void 0, function* () {\n      return !!(yield this.getLoginKey());\n    });\n\n    this._accountAddressExists = () => __awaiter(this, void 0, void 0, function* () {\n      return !!(yield this.getAccountAddress());\n    });\n\n    this._getAccountAdminKeyNonce = () => __awaiter(this, void 0, void 0, function* () {\n      return this._handleError(this._postMessageToChild({\n        method: 'getAccountAuthKeyNonce'\n      }));\n    });\n\n    this._getAccountAuthKeyNonce = () => __awaiter(this, void 0, void 0, function* () {\n      console.warn('Deprecation notice: `authereum._getAccountAuthKeyNonce()` is deprecated. Use `authereum._getAccountAdminKeyNonce()` instead.');\n      return this._getAccountAdminKeyNonce();\n    });\n\n    this._executeLoginKeyMetaTx = tx => __awaiter(this, void 0, void 0, function* () {\n      return this._handleError(this._postMessageToChild({\n        method: 'executeLoginKeyMetaTx',\n        params: serializeMessageObj(tx)\n      }));\n    });\n\n    this._loadLoginKey = loginKey => __awaiter(this, void 0, void 0, function* () {\n      yield this._tilReady();\n      return this._handleError(this._postMessageToChild({\n        method: 'loadLoginKey',\n        params: loginKey\n      }));\n    });\n\n    this._getOrCreateLoginKey = () => __awaiter(this, void 0, void 0, function* () {\n      yield this._tilReady();\n      return this._handleError(this._postMessageToChild({\n        method: 'getOrCreateLoginKey'\n      }));\n    });\n\n    this._getAuthenticateUri = loginKeyAddress => {\n      const encryptionKey = this._asymmetricEncryptionKey;\n      const date = new Date();\n      date.setDate(date.getDate() + 30); // expire in 30 days\n\n      const expiresAt = date.getTime() / 1e3 | 0; // NOTE: slk = sign login key\n\n      return this._webUri + '/?slk=' + encodeURIComponent(JSON.stringify({\n        loginKey: {\n          publicAddress: loginKeyAddress,\n          expiresAt\n        },\n        encryptionKey\n      })) + '&redirect_uri=' + this._redirectUri;\n    };\n\n    this._getSignWithAdminKeyUri = message => {\n      if (is_buffer_1.default(message)) {\n        message = `0x${message.toString('hex')}`;\n      } // NOTE: sm = sign message\n\n\n      return this._webUri + '/?sm=' + encodeURIComponent(JSON.stringify({\n        message\n      })) + '&redirect_uri=' + this._redirectUri;\n    };\n\n    this._openPopupOrRedirect = url => __awaiter(this, void 0, void 0, function* () {\n      this.emit('openPopup', {});\n\n      if (this._forceRedirect) {\n        window.location.href = url;\n        return;\n      }\n\n      let child = this._getAuthereumPopupWindow(url);\n\n      let isBlocked = this._isAuthereumPopupBlocked(child);\n\n      if (isBlocked && !this._blockedPopupRedirect) {\n        const err = new Error('Disable popup blocker and try again');\n\n        this._notifier.notify({\n          type: 'error',\n          message: err.message,\n          timeout: 5000\n        });\n\n        throw err;\n      } else if (isBlocked) {\n        this.emit('popupBlocked');\n        const shouldShowPopupOrRedirect = yield this._showConfirmPopupOrRedirectModal();\n\n        if (!shouldShowPopupOrRedirect) {\n          const errMessage = 'Popup or redirect rejected';\n          this.emit('error', errMessage);\n          throw new Error(errMessage);\n        } // Try to bring up a user-initiated popup. If this fails\n        // fallback to a redirect\n\n\n        child = this._getAuthereumPopupWindow(url);\n        isBlocked = this._isAuthereumPopupBlocked(child);\n\n        if (isBlocked) {\n          window.location.href = url;\n          return;\n        }\n      }\n\n      child.focus();\n      return new Promise((resolve, reject) => {\n        const interval = setInterval(() => __awaiter(this, void 0, void 0, function* () {\n          if (child.closed) {\n            cleanUp();\n            const err = new Error('Window closed');\n            this.emit('error', err);\n            this.emit('closePopup', {});\n            reject(err);\n          }\n        }), 250);\n        const timeout = setTimeout(() => {\n          cleanUp();\n          child.close();\n          doneWithError(new Error('Timedout'));\n        }, 10 * 60 * 1000);\n\n        const cleanUp = () => {\n          clearInterval(interval);\n          clearTimeout(timeout);\n          this.emit('closePopup', {});\n        };\n\n        const doneWithError = err => {\n          cleanUp();\n          this.emit('error', err);\n          reject(err);\n        };\n\n        const done = (result = {}) => {\n          cleanUp();\n          resolve(result);\n        };\n\n        const handleParentMessageEvent = event => __awaiter(this, void 0, void 0, function* () {\n          if (event.origin.includes(this._webUri)) {\n            // this event tells parent to close child popup\n            if (event.data.close) {\n              child.close();\n              done();\n            }\n\n            if (event.data.login) {\n              done({\n                success: true\n              });\n              this.emit('login', {});\n              this._cachedIsAuthenticated = true;\n\n              if (event.data.encryptedSigningKey) {\n                yield this._loadSigningKey(event.data.encryptedSigningKey);\n              }\n\n              this._logAnalyticsEvent({\n                eventType: 'logged_in_dapp',\n                properties: {\n                  dapp_url: window.location.href\n                }\n              });\n\n              if (this._redirectUri !== window.location.href) {\n                window.location.href = this._redirectUri;\n              }\n            }\n\n            if (event.data.result) {\n              done(event.data.result);\n\n              if (this._redirectUri !== window.location.href) {\n                window.location.href = this._redirectUri;\n              }\n            }\n\n            if (event.data.error) {\n              doneWithError(new Error(event.data.error));\n\n              if (this._redirectUri !== window.location.href) {\n                window.location.href = this._redirectUri;\n              }\n            }\n          }\n        });\n\n        this.addEventListener('message', handleParentMessageEvent, false);\n      });\n    });\n\n    this.addEventListener = (type, listener, useCapture = false) => {\n      window.addEventListener(type, listener, useCapture);\n\n      this._eventListeners.push({\n        type,\n        listener,\n        useCapture\n      });\n    };\n\n    this._showConfirmPopupOrRedirectModal = () => {\n      return this._handleError(this._postMessageToChild({\n        method: 'showConfirmPopupOrRedirectModal'\n      }));\n    };\n\n    this._signLoginKeyRequest = publicAddress => __awaiter(this, void 0, void 0, function* () {\n      const url = this._getAuthenticateUri(publicAddress);\n\n      return this._openPopupOrRedirect(url);\n    });\n\n    this._tilDomReady = () => __awaiter(this, void 0, void 0, function* () {\n      return onDomReady();\n    }); // keep both static and normal version methods\n\n\n    this.version = () => {\n      return version_1.default;\n    };\n\n    this.isAuthenticatedSync = () => {\n      return this._cachedIsAuthenticated;\n    };\n\n    this.getTransactionReceipt = txHash => {\n      return this._handleError(this._postMessageToChild({\n        method: 'getTransactionReceipt',\n        params: txHash\n      }));\n    };\n\n    this.waitForTransactionReceipt = txHash => {\n      return this._handleError(this._postMessageToChild({\n        method: 'waitForTransactionReceipt',\n        params: txHash\n      }));\n    };\n\n    this.hasRecoveryEnabled = () => {\n      return this._handleError(this._postMessageToChild({\n        method: 'hasRecoveryEnabled'\n      }));\n    };\n\n    this.isContractDeployed = accountAddress => {\n      return this._handleError(this._postMessageToChild({\n        method: 'isContractDeployed',\n        params: accountAddress\n      }));\n    };\n\n    this._loadSigningKey = signingKey => __awaiter(this, void 0, void 0, function* () {\n      if (this._destroyed) {\n        console.warn('Authereum instance destroyed. Message not posted to child.');\n        return;\n      }\n\n      return this._postMessageToChild({\n        method: 'loadSigningKey',\n        params: signingKey\n      });\n    });\n\n    this._logAnalyticsEvent = input => __awaiter(this, void 0, void 0, function* () {\n      if (this._destroyed) {\n        console.warn('Authereum instance destroyed. Message not posted to child.');\n        return;\n      }\n\n      return this._postMessageToChild({\n        method: 'logAnalyticsEvent',\n        params: input\n      });\n    });\n\n    this._setupSigningKey = () => __awaiter(this, void 0, void 0, function* () {\n      yield this._tilReady();\n      const encryptedSigningKey = this._authereumQueryParams['encryptedSigningKey'];\n\n      if (encryptedSigningKey) {\n        const success = yield this._loadSigningKey(encryptedSigningKey);\n\n        if (success) {\n          try {\n            localStorage.removeItem('_authereum');\n          } catch (err) {// noop\n          }\n        }\n      }\n    });\n\n    this._cacheAuthereumQueryParams = () => __awaiter(this, void 0, void 0, function* () {\n      try {\n        const param = utils_1.getQueryParamValue('_authereum');\n\n        if (param) {\n          this._authereumQueryParams = JSON.parse(param);\n\n          try {\n            localStorage.setItem('_authereum', btoa(JSON.stringify(this._authereumQueryParams)));\n          } catch (err) {// noop\n          }\n\n          const newUrl = utils_1.removeQueryParam('_authereum');\n          utils_1.replaceWindowUrl(newUrl);\n        } else {\n          try {\n            // load from local storage cache if exists.\n            // this local storage is cleared after connection.\n            let cached = localStorage.getItem('_authereum');\n\n            if (cached) {\n              this._authereumQueryParams = JSON.parse(atob(cached));\n            }\n          } catch (err) {// noop\n          }\n        }\n      } catch (err) {// noop\n      }\n    });\n\n    this.destroy = () => __awaiter(this, void 0, void 0, function* () {\n      if (this._destroyed) {\n        console.warn('Authereum instance already destroyed.');\n        return true;\n      }\n\n      try {\n        if (this._iframeReady && this._bodyContainsIframe()) {\n          yield this._postMessageToChild({\n            method: 'destroy'\n          });\n        }\n      } catch (err) {\n        console.warn(err);\n      }\n\n      for (let i = 0; i < this._injectedElements.length; i++) {\n        const element = this._injectedElements[i];\n\n        try {\n          element.remove();\n        } catch (err) {\n          console.error(err);\n        }\n      }\n      /*\n      const elements = document.querySelectorAll('[id*=\"authereum\"]')\n      for (let i = 0; i < elements.length; i++) {\n        const element = elements[i]\n        try {\n          element.remove()\n        } catch (err) {\n          console.error(err)\n        }\n      }\n      */\n\n\n      this._iframeReady = false;\n      this._destroyed = true;\n      console.warn('Authereum instance destroyed.');\n\n      this._teardownEventListeners();\n\n      this.emit('destroy', {});\n      return true;\n    });\n\n    this.isDestroyed = () => {\n      return this._destroyed;\n    };\n\n    this.getAddressQrCodeDataUri = address => __awaiter(this, void 0, void 0, function* () {\n      return this._postMessageToChild({\n        method: 'getAddressQrCodeDataUri',\n        params: {\n          address\n        }\n      });\n    });\n\n    this._loadNotificationsIframe = url => __awaiter(this, void 0, void 0, function* () {\n      const id = 'authereum__x-notification-iframe';\n      let el = document.getElementById(id);\n\n      if (el && el.src === url) {\n        this._notificationIframe = el;\n      } else {\n        if (el) {\n          el.remove();\n        }\n\n        this._notificationIframe = this._constructIframe({\n          id,\n          url\n        });\n        this._notificationIframe.style.top = '0';\n        this._notificationIframe.style.right = '0';\n        yield this._tilDomReady();\n        el = document.getElementById(id);\n\n        if (el) {\n          el.remove();\n        }\n\n        document.body.appendChild(this._notificationIframe);\n      }\n    });\n\n    this._setDebug = enabled => __awaiter(this, void 0, void 0, function* () {\n      this._debug = enabled;\n\n      if (this._debug) {\n        this._iframe.style.outline = '1px solid red';\n        this._notificationIframe.style.outline = '1px solid red';\n      } else {\n        this._iframe.style.outline = '0';\n        this._notificationIframe.style.outline = '0';\n      }\n    });\n\n    this._userConfig = config;\n\n    if (config instanceof Object) {\n      this._isPreload = !!config.isPreload;\n      this._disableGoogleAnalytics = !!config.disableGoogleAnalytics;\n    }\n\n    const merged = this._checkCachedInstance(config);\n\n    if (merged) {\n      return merged;\n    }\n\n    this._init(config);\n\n    this._starkProvider = new StarkWareProvider_1.default(this);\n\n    if (window._authereumInstances) {\n      window._authereumInstances.push(this);\n    }\n  }\n\n  _checkCachedInstance(config) {\n    let cachedInstance = null;\n\n    if (Array.isArray(window._authereumInstances)) {\n      if (window._authereumInstances.length) {\n        cachedInstance = window._authereumInstances.pop();\n      }\n    } // checks if preloaded cached iframe matches the same network as user created\n    // instance, and if so then merge the state to use preloaded iframe.\n\n\n    if (cachedInstance) {\n      if (cachedInstance.isReady()) {\n        if (typeof config === 'string') {\n          if (cachedInstance.getCachedNetworkName() === config) {\n            return this._merge(cachedInstance);\n          } else {\n            cachedInstance.destroy();\n            cachedInstance = null;\n          }\n        } else if (config instanceof Object) {\n          if (cachedInstance.getCachedNetworkName() === config.networkName && !config.xsUri) {\n            return this._merge(cachedInstance);\n          } else {\n            cachedInstance.destroy();\n            cachedInstance = null;\n          }\n        }\n      } else {\n        cachedInstance.destroy();\n        cachedInstance = null;\n      }\n    }\n  } // this merges an authereum instance with this one\n  // by copying all properties and connected iframes.\n\n\n  _merge(instance) {\n    this._debug = instance._debug;\n    this._apiKey = instance._apiKey;\n    this._apiUri = instance._apiUri;\n    this._rpcUri = instance._rpcUri;\n    this._webUri = instance._webUri;\n    this._xsUri = instance._xsUri;\n    this._notifierUri = instance._notifierUri;\n    this._networkName = instance._networkName;\n    this._networkId = instance._networkId;\n    this._redirectUri = instance._redirectUri;\n    this._iframeConnection = instance._iframeConnection;\n    this._childIframeConnection = instance._childIframeConnection;\n    this._iframe = instance._iframe;\n    this._notificationIframe = instance._notificationIframe;\n    this._cacheReady = instance._cacheReady;\n    this._cachedLoginKeyAddress = instance._cachedLoginKeyAddress;\n    this._cachedAccountAddress = instance._cachedAccountAddress;\n    this._cachedIsAuthenticated = instance._cachedIsAuthenticated;\n    this._iframeReady = instance._iframeReady;\n    this._configReady = instance._configReady;\n    this._iframeStyle = instance._iframeStyle;\n    this._notificationIframeStyle = instance._notificationIframeStyle;\n    this._heartbeatStarted = instance._heartbeatStarted;\n    this._backoffTimeout = instance._backoffTimeout;\n    this._asymmetricEncryptionKey = instance._asymmetricEncryptionKey;\n    this._authereumQueryParams = instance._authereumQueryParams;\n    this._injectedElements = instance._injectedElements;\n    this._notificationsMap = instance._notificationsMap;\n    instance._handlePostMessage = this._handlePostMessage.bind(instance);\n\n    this._initConfig(this._userConfig);\n\n    this._cacheLoginKeyAddress();\n\n    this._getConfigFromChild().then(config => {\n      this._setConfig(config);\n\n      this._postConfigToChild().catch(noop);\n\n      this.emit('iframeReady', {});\n    }).catch(noop);\n\n    this._emitReadyEvent();\n\n    this._provider = new AuthereumProvider_1.default(this);\n\n    this._refreshWidget();\n\n    return this;\n  }\n\n  _setupFocusListener() {\n    this.addEventListener('focus', this._handleWindowFocus, false);\n  }\n\n  _setupActionKeyListener() {\n    this.addEventListener('keydown', this._handleActionKeyPress, false);\n  }\n\n  _teardownEventListeners() {\n    for (let i = 0; i < this._eventListeners.length; i++) {\n      const {\n        type,\n        listener,\n        useCapture\n      } = this._eventListeners[i];\n      window.removeEventListener(type, listener, useCapture);\n    }\n  }\n\n  _getOrCreateMainIframe() {\n    return __awaiter(this, void 0, void 0, function* () {\n      if (this._iframe) {\n        if (this._iframeConnection) {\n          this._iframeConnection.destroy();\n        }\n\n        this._iframe.remove();\n      }\n\n      return new Promise(resolve => __awaiter(this, void 0, void 0, function* () {\n        const id = 'authereum__x-iframe';\n        let el = document.getElementById(id);\n\n        if (el && el.src === this._xsUri) {\n          this._iframe = el;\n        } else {\n          this._iframe = this._constructIframe({\n            id,\n            url: this._xsUri\n          });\n          let notificationIframeUrl = `${this._xsUri.replace(/\\/$/, '')}/notifications`;\n\n          this._loadNotificationsIframe(notificationIframeUrl).catch(noop);\n\n          resolve(this._iframe);\n          yield this._tilDomReady();\n          el = document.getElementById(id);\n\n          if (el) {\n            el.remove();\n          }\n\n          document.body.appendChild(this._iframe);\n\n          this._iframe.onload = () => {\n            this._postVersionToChild().catch(noop);\n\n            this._loadAsymmetricEncryptionKeyFromChild().catch(noop);\n\n            this._getConfigFromChild().then(config => {\n              if (notificationIframeUrl !== config.notifierIframeUri) {\n                this._loadNotificationsIframe(config.notifierIframeUri);\n              }\n\n              this._setConfig(config);\n\n              this._postConfigToChild().catch(noop);\n\n              this._configReady = true;\n              this.emit('iframeReady', {});\n            }).catch(noop);\n          };\n        }\n      }));\n    });\n  }\n\n  _bodyContainsIframe() {\n    return document.body.contains(this._iframe);\n  }\n\n  _getAuthereumPopupWindow(url) {\n    return window.open(url, 'Authereum', `toolbar=no,\n      location=no,\n      status=no,\n      menubar=no,\n      scrollbars=no,\n      resizable=no,\n      width=470,\n      height=640`);\n  }\n\n  _isAuthereumPopupBlocked(child) {\n    return child === null || child === undefined;\n  }\n\n  isPreload() {\n    return this._isPreload;\n  }\n\n}\n\nexports.default = Authereum; // keep both static and normal version methods\n\nAuthereum.version = () => {\n  return version_1.default;\n};\n\nif (typeof window !== 'undefined') {\n  window.Authereum = Authereum;\n  window._authereumInstances = []; // disable preloading if param set for debugging\n  // if (!getQueryParamValue('debug_disable_preload')) {\n\n  if (utils_1.getQueryParamValue('authereum_debug')) {\n    // preload instance in order to avoid async calls between\n    // user action and login call.\n    let cachedNetwork = 'mainnet';\n    const networks = ['kovan', 'goerli', 'rinkeby', 'ropsten'];\n\n    for (let i = 0; i < networks.length; i++) {\n      // assuming which network to preload\n      if (window.location.href.includes(networks[i])) {\n        cachedNetwork = networks[i];\n        break;\n      }\n    }\n\n    const cachedInstance = new Authereum({\n      networkName: cachedNetwork,\n      isPreload: true\n    });\n\n    window._authereumInstances.push(cachedInstance);\n  }\n}","map":{"version":3,"sources":["D:/proj/7color/node_modules/authereum/dist/AuthereumSDK.js"],"names":["__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","__importDefault","mod","__esModule","Object","defineProperty","exports","penpal_1","require","eventemitter3_1","is_buffer_1","version_1","AuthereumProvider_1","StarkWareProvider_1","config_1","utils_1","serializeMessageObj","obj","tx","k","v","toString","defaultIframeStyle","width","height","top","left","zIndex","noop","defaultNotifier","notify","type","message","console","debug","dismiss","constructIframe","input","id","url","isPreload","disableGoogleAnalytics","parentUrl","window","location","href","parent","document","URL","err","srcUrl","updateQueryParams","iframe","createElement","name","replace","title","src","includes","browserInfo","browser","setAttribute","style","position","bottom","right","border","background","onDomReady","readyState","addEventListener","Authereum","default","constructor","config","_debug","getQueryParamValue","_notifier","_cacheReady","_iframeReady","_configReady","_iframeConnecting","_readyEmitted","_widgetEnabled","_iframeStyle","_notificationIframeStyle","_blockedPopupRedirect","_forceRedirect","_heartbeatStarted","_backoffTimeout","_userConfig","_asymmetricEncryptionKey","_authereumQueryParams","_injectedElements","_notificationsMap","_destroyed","_starkProvider","_isPreload","_disableGoogleAnalytics","_eventListeners","_init","_initConfig","_provider","_connectToChildIframe","catch","_startHeartbeat","warn","_setupCache","_cacheAuthereumQueryParams","_setupSigningKey","_setupResizeListener","_setupFocusListener","_setupActionKeyListener","_emitReadyEvent","network","_networkName","trim","toLowerCase","_xsUri","defaultConfig","xsUri","Error","networkName","_apiKey","apiKey","redirectUri","_redirectUri","_setConfig","apiUri","rpcUri","webUri","notifierUri","networkId","disableNotifications","blockedPopupRedirect","forceRedirect","_apiUri","_rpcUri","_webUri","_notifierUri","_networkId","_disableNotifications","all","_cacheLoginKeyAddress","_cacheIsAuthenticated","_cacheAccountAddress","_handleWindowFocus","_bodyContainsIframe","_postMessageToChild","method","_resetCache","_injectScript","sourceUrl","_tilDomReady","getElementById","script","async","onload","onerror","push","getElementsByTagName","appendChild","_handleResizeThrottled","_handleResizeDebounced","_handleActionKeyPress","event","keyName","key","keyCode","params","_handleResize","size","_getWindowSize","throttle","debounce","loginKey","_cachedLoginKeyAddress","publicAddress","accountAddress","_cachedAccountAddress","isAuthenticated","_cachedIsAuthenticated","login","isIframeReady","isConfigReady","_tilConfigReady","_tilReady","_signLoginKeyRequest","getAuthenticatedAccount","timeout","setTimeout","account","authenticate","_handleError","logout","res","emit","getDappKey","getLoginKey","signMessage","options","signPersonalMessage","personal","signWithDappKey","signWithLoginKey","signTypedMessage","signTypedMessageWithDappKey","signMessageWithAdminKey","signMessageWithSigningKey","getSigningKeyAddress","getLoginKeyAuthSignature","getLoginKeyRestrictionsData","getSigningKeyAuthSignature","getAccountAddress","getBalance","getRpcUri","getNetworkId","getNetworkName","getCachedNetworkName","getProvider","getStarkProvider","promise","signTransaction","signTransactionWithLoginKey","sendTransaction","userTransaction","sendTransactionBatch","userTransactions","map","estimateGasBatch","isReady","updateConfig","getConfig","showWidget","enabled","hideWidget","widgetEnabled","addFunds","opts","_openUrl","newWindow","open","_tilIframeReady","wait","_getOrCreateMainIframe","_iframeConnection","connectToChild","methods","postMessage","data","_handlePostMessage","timedout","timer","child","clearTimeout","_childIframeConnection","reconnect","_heartbeat","_ping","test","pong","_constructIframe","assign","outline","_getConfigFromChild","_postVersionToChild","version","_postConfigToChild","_loadAsymmetricEncryptionKeyFromChild","payload","_teardownEventListeners","_handleChildLogoutEvent","_handleChildDappKeyExpired","loginKeyAddress","_refreshWidget","_refreshNotificationWidget","_handlePostMessageLog","_getWindowWidth","_getWindowHeight","innerWidth","documentElement","clientWidth","body","innerHeight","clientHeight","_setIframePositionLeft","x","_iframe","_setIframeWidth","_setIframeHeight","_notificationIframe","_loginKeyExists","_accountAddressExists","_getAccountAdminKeyNonce","_getAccountAuthKeyNonce","_executeLoginKeyMetaTx","_loadLoginKey","_getOrCreateLoginKey","_getAuthenticateUri","encryptionKey","date","Date","setDate","getDate","expiresAt","getTime","encodeURIComponent","JSON","stringify","_getSignWithAdminKeyUri","_openPopupOrRedirect","_getAuthereumPopupWindow","isBlocked","_isAuthereumPopupBlocked","shouldShowPopupOrRedirect","_showConfirmPopupOrRedirectModal","errMessage","focus","interval","setInterval","closed","cleanUp","close","doneWithError","clearInterval","handleParentMessageEvent","origin","success","encryptedSigningKey","_loadSigningKey","_logAnalyticsEvent","eventType","properties","dapp_url","error","listener","useCapture","isAuthenticatedSync","getTransactionReceipt","txHash","waitForTransactionReceipt","hasRecoveryEnabled","isContractDeployed","signingKey","localStorage","removeItem","param","parse","setItem","btoa","newUrl","removeQueryParam","replaceWindowUrl","cached","getItem","atob","destroy","i","length","element","remove","isDestroyed","getAddressQrCodeDataUri","address","_loadNotificationsIframe","el","_setDebug","merged","_checkCachedInstance","_authereumInstances","cachedInstance","Array","isArray","pop","_merge","instance","bind","removeEventListener","notificationIframeUrl","notifierIframeUri","contains","undefined","cachedNetwork","networks"],"mappings":"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","sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst penpal_1 = __importDefault(require(\"penpal\"));\nconst eventemitter3_1 = __importDefault(require(\"eventemitter3\"));\nconst is_buffer_1 = __importDefault(require(\"is-buffer\"));\nconst version_1 = __importDefault(require(\"./version\"));\nconst AuthereumProvider_1 = __importDefault(require(\"./AuthereumProvider\"));\nconst StarkWareProvider_1 = __importDefault(require(\"./StarkWareProvider\"));\nconst config_1 = require(\"./config\");\nconst utils_1 = require(\"./utils\");\n// Serialize object for postMessage to iframe.\n// Converts references to values.\nconst serializeMessageObj = (obj) => {\n    const tx = {};\n    for (let k in obj) {\n        let v = obj[k];\n        if (typeof v === 'object' && v.toString === 'function') {\n            v = v.toString('hex');\n        }\n        tx[k] = v;\n    }\n    return tx;\n};\nconst defaultIframeStyle = {\n    width: 0,\n    height: 0,\n    top: 0,\n    left: 0,\n    zIndex: 1\n};\nconst noop = () => {\n    // noop\n};\n// This is a placeholder notify object stub until notifier script url is\n// injected into page after iframe is loaded.\nconst defaultNotifier = {\n    notify: (type, message) => {\n        console.debug(type, message);\n        return {\n            dismiss: noop\n        };\n    }\n};\nconst constructIframe = (input) => {\n    const { id, url, isPreload, disableGoogleAnalytics } = input;\n    let parentUrl = window.location.href;\n    try {\n        parentUrl = parent.document.URL;\n    }\n    catch (err) {\n        // noop\n    }\n    const srcUrl = utils_1.updateQueryParams({\n        url: parentUrl,\n        isPreload,\n        disableGoogleAnalytics\n    }, url);\n    const iframe = document.createElement('iframe');\n    iframe.id = id;\n    iframe.name = id.replace(/--.*/, '');\n    iframe.title = id;\n    iframe.src = srcUrl;\n    if (['Safari', 'Firefox'].includes(utils_1.browserInfo().browser)) {\n        iframe.setAttribute('sandbox', 'allow-storage-access-by-user-activation allow-scripts allow-same-origin');\n    }\n    iframe.style.position = 'fixed';\n    iframe.style.bottom = '0';\n    iframe.style.right = '0';\n    iframe.style.width = '0';\n    iframe.style.height = '0';\n    iframe.style.border = '0';\n    iframe.style.background = 'transparent';\n    iframe.style.zIndex = `${defaultIframeStyle.zIndex}`;\n    iframe.setAttribute('frameborder', '0');\n    iframe.setAttribute('scrolling', 'no');\n    return iframe;\n};\nconst onDomReady = () => {\n    return new Promise((resolve) => {\n        if (typeof window !== 'undefined') {\n            if (document.readyState !== 'loading') {\n                resolve();\n            }\n            else {\n                document.addEventListener('DOMContentLoaded', () => resolve());\n            }\n        }\n    });\n};\nclass Authereum extends eventemitter3_1.default {\n    constructor(config) {\n        super();\n        this._debug = !!utils_1.getQueryParamValue('debug');\n        this._notifier = defaultNotifier;\n        this._cacheReady = false;\n        this._iframeReady = false;\n        this._configReady = false;\n        this._iframeConnecting = null;\n        this._readyEmitted = false;\n        this._widgetEnabled = false;\n        this._iframeStyle = defaultIframeStyle;\n        this._notificationIframeStyle = defaultIframeStyle;\n        this._blockedPopupRedirect = true;\n        this._forceRedirect = false;\n        this._heartbeatStarted = false;\n        this._backoffTimeout = 1;\n        this._userConfig = null;\n        this._asymmetricEncryptionKey = null;\n        this._authereumQueryParams = {};\n        this._injectedElements = [];\n        this._notificationsMap = {};\n        this._destroyed = false;\n        this._starkProvider = null;\n        this._isPreload = false;\n        this._disableGoogleAnalytics = false;\n        this._eventListeners = [];\n        // NOTE: keep this sync\n        this._init = (config) => {\n            this._initConfig(config);\n            this._iframeStyle = {\n                width: 0,\n                height: 0,\n                top: 0,\n                left: 0,\n                zIndex: 0\n            };\n            this._provider = new AuthereumProvider_1.default(this);\n            this._connectToChildIframe()\n                .catch(() => {\n                this._startHeartbeat(true);\n            })\n                .catch((err) => {\n                console.warn('ping error:', err.message);\n            });\n            this._setupCache().catch(noop);\n            this._cacheAuthereumQueryParams();\n            this._setupSigningKey().catch(noop);\n            this._setupResizeListener();\n            this._setupFocusListener();\n            this._setupActionKeyListener();\n            this._emitReadyEvent();\n        };\n        // NOTE: keep this sync\n        this._initConfig = (config) => {\n            if (typeof config === 'string') {\n                let network = config;\n                this._networkName = (network || '').trim().toLowerCase();\n                if (['mainnet', 'ropsten', 'rinkeby', 'kovan', 'goerli'].includes(this._networkName)) {\n                    this._xsUri = config_1.defaultConfig.xsUri(this._networkName);\n                }\n                else if (config === 'localhost') {\n                    this._xsUri = 'http://localhost:3002';\n                    this._networkName = 'kovan';\n                }\n                else {\n                    throw new Error('Unsupported network');\n                }\n            }\n            else {\n                config = config || {};\n                this._networkName = config.networkName || 'mainnet';\n                this._xsUri = config.xsUri || config_1.defaultConfig.xsUri(this._networkName);\n                this._apiKey = config.apiKey;\n            }\n            if (config.redirectUri) {\n                this._redirectUri = config.redirectUri;\n            }\n            else {\n                this._redirectUri = window.location.href;\n            }\n            this._redirectUri = this._redirectUri || window.location.href;\n        };\n        // NOTE: keep this sync\n        this._setConfig = (config) => {\n            if (typeof this._userConfig === 'string') {\n                let network = this._userConfig;\n                this._networkName = (network || '').trim().toLowerCase();\n                this._userConfig = {\n                    networkName: this._networkName,\n                    xsUri: config_1.defaultConfig.xsUri(this._networkName)\n                };\n            }\n            const { apiKey, apiUri, rpcUri, webUri, notifierUri, networkName, networkId, disableNotifications, blockedPopupRedirect, forceRedirect } = this._userConfig || {};\n            if (apiKey) {\n                this._apiKey = apiKey;\n            }\n            // userConfig overrides regular config\n            if (apiUri) {\n                this._apiUri = apiUri;\n            }\n            else if (config.apiUri) {\n                this._apiUri = config.apiUri;\n            }\n            // userConfig overrides regular config\n            if (rpcUri) {\n                this._rpcUri = rpcUri;\n            }\n            else if (config.rpcUri) {\n                this._rpcUri = config.rpcUri;\n            }\n            // userConfig overrides regular config\n            if (webUri) {\n                this._webUri = webUri;\n            }\n            else if (config.webUri) {\n                this._webUri = config.webUri;\n            }\n            // userConfig overrides regular config\n            if (notifierUri) {\n                this._notifierUri = notifierUri;\n            }\n            else if (config.notifierUri) {\n                this._notifierUri = config.notifierUri;\n            }\n            // userConfig overrides regular config\n            if (networkName) {\n                this._networkName = networkName;\n            }\n            else if (config.networkName) {\n                this._networkName = config.networkName;\n            }\n            // userConfig overrides regular config\n            if (networkId) {\n                this._networkId = networkId;\n            }\n            else if (config.networkId) {\n                this._networkId = config.networkId;\n            }\n            // userConfig overrides regular config\n            if (typeof disableNotifications === 'boolean') {\n                this._disableNotifications = disableNotifications;\n            }\n            else if (typeof config.disableNotifications === 'boolean') {\n                this._disableNotifications = config.disableNotifications;\n            }\n            // userConfig overrides regular config\n            if (typeof blockedPopupRedirect === 'boolean') {\n                this._blockedPopupRedirect = blockedPopupRedirect;\n            }\n            else if (typeof config.blockedPopupRedirect === 'boolean') {\n                this._blockedPopupRedirect = config.blockedPopupRedirect;\n            }\n            // userConfig overrides regular config\n            if (typeof forceRedirect === 'boolean') {\n                this._forceRedirect = forceRedirect;\n            }\n            else if (typeof config.forceRedirect === 'boolean') {\n                this._forceRedirect = config.forceRedirect;\n            }\n        };\n        this._setupCache = () => __awaiter(this, void 0, void 0, function* () {\n            yield Promise.all([\n                this._cacheLoginKeyAddress(),\n                this._cacheIsAuthenticated(),\n                this._cacheAccountAddress()\n            ]);\n            this._cacheReady = true;\n        });\n        this._handleWindowFocus = () => {\n            if (this._destroyed) {\n                return;\n            }\n            if (!this._bodyContainsIframe()) {\n                return;\n            }\n            return this._postMessageToChild({\n                method: 'onWindowFocus'\n            });\n        };\n        this._resetCache = () => __awaiter(this, void 0, void 0, function* () {\n            return this._setupCache();\n        });\n        this._injectScript = (sourceUrl, id = '') => __awaiter(this, void 0, void 0, function* () {\n            yield this._tilDomReady();\n            return new Promise((resolve, reject) => {\n                if (!sourceUrl) {\n                    throw new Error('sourceUrl is required');\n                }\n                if (document.getElementById(id)) {\n                    resolve();\n                    return;\n                }\n                const script = document.createElement('script');\n                script.id = id;\n                script.type = 'text/javascript';\n                script.async = true;\n                script.onload = () => {\n                    resolve();\n                };\n                script.onerror = (err) => {\n                    reject(err);\n                };\n                script.src = sourceUrl;\n                this._injectedElements.push(script);\n                document.getElementsByTagName('head')[0].appendChild(script);\n            });\n        });\n        this._setupResizeListener = () => __awaiter(this, void 0, void 0, function* () {\n            this.addEventListener('resize', this._handleResizeThrottled, false);\n            this.addEventListener('resize', this._handleResizeDebounced, false);\n        });\n        this._handleActionKeyPress = (event) => {\n            if (this._destroyed) {\n                return;\n            }\n            if (!this._bodyContainsIframe()) {\n                return;\n            }\n            let keyName = '';\n            if (event.key === 'Escape' || event.key === 'Esc' || event.keyCode === 27) {\n                keyName = 'escape';\n            }\n            else if (event.key === 'Enter' || event.keyCode === 13) {\n                keyName = 'enter';\n            }\n            else if (event.key === 'ArrowLeft' || event.keyCode === 37) {\n                keyName = 'left';\n            }\n            else if (event.key === 'ArrowUp' || event.keyCode === 38) {\n                keyName = 'up';\n            }\n            else if (event.key === 'ArrowRight' || event.keyCode === 39) {\n                keyName = 'right';\n            }\n            else if (event.key === 'ArrowDown' || event.keyCode === 40) {\n                keyName = 'down';\n            }\n            if (keyName) {\n                return this._postMessageToChild({\n                    method: 'actionKeyPress',\n                    params: keyName\n                });\n            }\n        };\n        this._handleResize = (event) => __awaiter(this, void 0, void 0, function* () {\n            if (this._destroyed) {\n                return;\n            }\n            if (!this._bodyContainsIframe()) {\n                return;\n            }\n            const size = yield this._getWindowSize();\n            return this._postMessageToChild({\n                method: 'onResize',\n                params: size\n            });\n        });\n        this._handleResizeThrottled = utils_1.throttle((event) => {\n            return this._handleResize(event);\n        }, 10);\n        this._handleResizeDebounced = utils_1.debounce((event) => {\n            return this._handleResize(event);\n        }, 10);\n        this._cacheLoginKeyAddress = () => __awaiter(this, void 0, void 0, function* () {\n            const loginKey = yield this._postMessageToChild({\n                method: 'getOrCreateLoginKey'\n            });\n            this._cachedLoginKeyAddress = loginKey.publicAddress;\n        });\n        this._cacheAccountAddress = () => __awaiter(this, void 0, void 0, function* () {\n            const accountAddress = yield this._postMessageToChild({\n                method: 'getAccountAddress'\n            });\n            this._cachedAccountAddress = accountAddress;\n        });\n        this._cacheIsAuthenticated = () => __awaiter(this, void 0, void 0, function* () {\n            const isAuthenticated = yield this._postMessageToChild({\n                method: 'isAuthenticated'\n            });\n            this._cachedIsAuthenticated = isAuthenticated;\n        });\n        // NOTE: to prevent pop-ups from being blocked, there must be no awaits from\n        // click to window.open, meaning value lookups must be cached before the\n        // login method is called.\n        this.login = utils_1.throttle(() => __awaiter(this, void 0, void 0, function* () {\n            const isIframeReady = this._iframeReady && this._cacheReady;\n            const isConfigReady = this._configReady;\n            // these are false when dapp calls login immediately on page load\n            // so we're forced to wait here.\n            if (!(isIframeReady && isConfigReady)) {\n                yield this._tilConfigReady();\n                yield this._tilReady();\n            }\n            if (!this._cachedIsAuthenticated) {\n                // NOTE: if not logged in to dapp, then proceed to login\n                yield this._signLoginKeyRequest(this._cachedLoginKeyAddress);\n                return this.getAuthenticatedAccount();\n            }\n            else {\n                // only show one already logged in notification at a time\n                if (!this._notificationsMap['loggedIn']) {\n                    this._postMessageToChild({\n                        method: 'notification',\n                        params: {\n                            type: 'success',\n                            message: 'You are logged into Authereum',\n                            timeout: 5e3\n                        }\n                    })\n                        .catch(noop);\n                    this._notificationsMap['loggedIn'] = true;\n                    setTimeout(() => {\n                        this._notificationsMap['loggedIn'] = null;\n                    }, 5e3);\n                }\n            }\n            // await first\n            const account = yield this.getAuthenticatedAccount();\n            return account;\n        }), 250);\n        this.authenticate = () => __awaiter(this, void 0, void 0, function* () {\n            console.warn('Deprecation notice: `authereum.authenticate()` is deprecated. Use `authereum.login()` instead.');\n            return this.login();\n        });\n        this.isAuthenticated = () => __awaiter(this, void 0, void 0, function* () {\n            return this._handleError(this._postMessageToChild({\n                method: 'isAuthenticated'\n            }));\n        });\n        this.logout = () => __awaiter(this, void 0, void 0, function* () {\n            const res = yield this._postMessageToChild({\n                method: 'logout'\n            });\n            yield this._resetCache();\n            this.emit('logout', {});\n            return res;\n        });\n        this.getAuthenticatedAccount = () => __awaiter(this, void 0, void 0, function* () {\n            return this._handleError(this._postMessageToChild({\n                method: 'getAuthenticatedAccount'\n            }));\n        });\n        this.getDappKey = () => {\n            return this._handleError(this._postMessageToChild({\n                method: 'getLoginKey'\n            }));\n        };\n        this.getLoginKey = () => {\n            console.warn('Deprecation notice: `authereum.getLoginKey()` is deprecated. Use `authereum.getDappKey()` instead.');\n            return this.getDappKey();\n        };\n        this.signMessage = utils_1.throttle((message, options = {}) => __awaiter(this, void 0, void 0, function* () {\n            return this._handleError(this._postMessageToChild({\n                method: 'signMessage',\n                params: [message, options]\n            }));\n        }), 250);\n        this.signPersonalMessage = utils_1.throttle((message) => __awaiter(this, void 0, void 0, function* () {\n            return this._handleError(this._postMessageToChild({\n                method: 'signMessage',\n                params: [message, { personal: true }]\n            }));\n        }), 250);\n        this.signWithDappKey = utils_1.throttle((message) => __awaiter(this, void 0, void 0, function* () {\n            console.warn('Deprecation notice: `authereum.signWithDappKey()` is deprecated. Use `authereum.signMess()` instead.');\n            return this.signMessage(message);\n        }), 250);\n        this.signWithLoginKey = utils_1.throttle((message) => __awaiter(this, void 0, void 0, function* () {\n            console.warn('Deprecation notice: `authereum.signWithLoginKey()` is deprecated. Use `authereum.signWithDappKey()` instead.');\n            return this.signWithDappKey(message);\n        }), 250);\n        this.signTypedMessage = utils_1.throttle((message, options = {}) => __awaiter(this, void 0, void 0, function* () {\n            console.warn('Deprecation notice: `authereum.signTypedMessage()` is deprecated. Use `authereum.signMessage()` instead.');\n            return this.signMessage(message, options);\n        }), 250);\n        this.signTypedMessageWithDappKey = utils_1.throttle((message) => __awaiter(this, void 0, void 0, function* () {\n            console.warn('Deprecation notice: `authereum.signTypedMessageWithDappKey()` is deprecated. Use `authereum.signMessage()` instead.');\n            return this.signTypedMessage(message);\n        }), 250);\n        this.signMessageWithAdminKey = utils_1.throttle((message) => __awaiter(this, void 0, void 0, function* () {\n            console.warn('Deprecation notice: `authereum.signMessageWithAdminKey()` is deprecated. Use `authereum.signMessageWithSigningKey()` instead.');\n            return null;\n        }), 250);\n        this.signMessageWithSigningKey = utils_1.throttle((message, options = {}) => __awaiter(this, void 0, void 0, function* () {\n            return this._handleError(this._postMessageToChild({\n                method: 'signMessageWithSigningKey',\n                params: [message, options]\n            }));\n        }), 250);\n        this.getSigningKeyAddress = (message) => __awaiter(this, void 0, void 0, function* () {\n            return this._handleError(this._postMessageToChild({\n                method: 'getSigningKeyAddress'\n            }));\n        });\n        this.getLoginKeyAuthSignature = () => __awaiter(this, void 0, void 0, function* () {\n            return this._handleError(this._postMessageToChild({\n                method: 'getLoginKeyAuthSignature'\n            }));\n        });\n        this.getLoginKeyRestrictionsData = () => __awaiter(this, void 0, void 0, function* () {\n            return this._handleError(this._postMessageToChild({\n                method: 'getLoginKeyRestrictionsData'\n            }));\n        });\n        this.getSigningKeyAuthSignature = () => __awaiter(this, void 0, void 0, function* () {\n            return this._handleError(this._postMessageToChild({\n                method: 'getSigningKeyAuthSignature'\n            }));\n        });\n        this.getAccountAddress = () => __awaiter(this, void 0, void 0, function* () {\n            // required so it waits for login key to be set\n            yield this._tilReady();\n            return this._handleError(this._postMessageToChild({\n                method: 'getAccountAddress'\n            }));\n        });\n        this.getBalance = () => __awaiter(this, void 0, void 0, function* () {\n            return this._handleError(this._postMessageToChild({\n                method: 'getBalance'\n            }));\n        });\n        this.getRpcUri = () => __awaiter(this, void 0, void 0, function* () {\n            yield this._tilConfigReady();\n            return this._rpcUri;\n        });\n        this.getNetworkId = () => __awaiter(this, void 0, void 0, function* () {\n            return this._handleError(this._postMessageToChild({\n                method: 'getNetworkId'\n            }));\n        });\n        this.getNetworkName = () => __awaiter(this, void 0, void 0, function* () {\n            return this._handleError(this._postMessageToChild({\n                method: 'getNetworkName'\n            }));\n        });\n        this.getCachedNetworkName = () => {\n            return this._networkName;\n        };\n        this.getProvider = () => {\n            return this._provider;\n        };\n        this.getStarkProvider = () => {\n            return this._starkProvider;\n        };\n        this._handleError = (promise) => __awaiter(this, void 0, void 0, function* () {\n            return promise\n                .catch((err) => {\n                // NOTE: emit errors but don't throw notification here.\n                this.emit('error', err);\n                // NOTE: rethrow error to let dapps handle error\n                throw err;\n            });\n        });\n        this.signTransaction = utils_1.throttle((tx) => __awaiter(this, void 0, void 0, function* () {\n            yield this._tilReady();\n            return this._handleError(this._postMessageToChild({\n                method: 'signTransaction',\n                params: serializeMessageObj(tx)\n            }));\n        }), 250);\n        this.signTransactionWithLoginKey = utils_1.throttle((tx) => __awaiter(this, void 0, void 0, function* () {\n            console.warn('Deprecation notice: `authereum.signTransactionWithLoginKey()` is deprecated. Use `authereum.signTransaction()` instead.');\n            return this.signTransaction(tx);\n        }), 250);\n        this.sendTransaction = utils_1.throttle((userTransaction) => __awaiter(this, void 0, void 0, function* () {\n            yield this._tilReady();\n            return this._handleError(this._postMessageToChild({\n                method: 'sendTransaction',\n                params: serializeMessageObj(userTransaction)\n            }));\n        }), 250);\n        this.sendTransactionBatch = utils_1.throttle((userTransactions) => __awaiter(this, void 0, void 0, function* () {\n            yield this._tilReady();\n            return this._handleError(this._postMessageToChild({\n                method: 'sendTransactionBatch',\n                params: userTransactions.map(serializeMessageObj)\n            }));\n        }), 250);\n        this.estimateGasBatch = utils_1.throttle((userTransactions) => __awaiter(this, void 0, void 0, function* () {\n            yield this._tilReady();\n            return this._handleError(this._postMessageToChild({\n                method: 'estimateGasBatch',\n                params: userTransactions.map(serializeMessageObj)\n            }));\n        }), 250);\n        this.isReady = () => {\n            return this._iframeReady && this._cacheReady;\n        };\n        this.updateConfig = (config) => {\n            this._userConfig = config;\n            this._setConfig(config);\n        };\n        this.getConfig = () => {\n            return {\n                apiUri: this._apiUri,\n                rpcUri: this._rpcUri,\n                webUri: this._webUri,\n                xsUri: this._xsUri,\n                networkName: this._networkName,\n                networkId: this._networkId,\n                disableNotifications: this._disableNotifications\n            };\n        };\n        this.showWidget = (enabled = true) => __awaiter(this, void 0, void 0, function* () {\n            if (!enabled) {\n                this._widgetEnabled = false;\n                return this._postMessageToChild({\n                    method: 'hideWidget'\n                });\n            }\n            this._widgetEnabled = true;\n            return this._postMessageToChild({\n                method: 'showWidget'\n            });\n        });\n        this.hideWidget = () => __awaiter(this, void 0, void 0, function* () {\n            this._widgetEnabled = false;\n            return this._postMessageToChild({\n                method: 'hideWidget'\n            });\n        });\n        this.widgetEnabled = () => {\n            return this._widgetEnabled;\n        };\n        this.addFunds = (opts) => {\n            return this._postMessageToChild({\n                method: 'addFunds',\n                params: opts\n            });\n        };\n        this._openUrl = (opts = {}) => {\n            const { url, newWindow } = opts;\n            if (newWindow) {\n                window.open(url, '_blank');\n            }\n            else {\n                window.location.href = url;\n            }\n        };\n        this._tilIframeReady = () => __awaiter(this, void 0, void 0, function* () {\n            if (!this._iframeReady) {\n                yield utils_1.wait(100);\n                return this._tilIframeReady();\n            }\n            yield utils_1.wait(100);\n            return true;\n        });\n        this._tilConfigReady = () => __awaiter(this, void 0, void 0, function* () {\n            if (!this._configReady) {\n                yield utils_1.wait(100);\n                return this._tilConfigReady();\n            }\n            yield utils_1.wait(100);\n            return true;\n        });\n        this._tilReady = () => __awaiter(this, void 0, void 0, function* () {\n            if (!this.isReady()) {\n                yield utils_1.wait(100);\n                return this._tilReady();\n            }\n            yield utils_1.wait(100);\n            return true;\n        });\n        this._emitReadyEvent = () => __awaiter(this, void 0, void 0, function* () {\n            yield this._tilReady();\n            if (this._readyEmitted)\n                return;\n            this._readyEmitted = true;\n            this.emit('ready', {});\n        });\n        this._connectToChildIframe = () => __awaiter(this, void 0, void 0, function* () {\n            if (this._iframeConnecting) {\n                return this._iframeConnecting;\n            }\n            this._iframeReady = false;\n            this._iframeConnecting = true;\n            const iframe = yield this._getOrCreateMainIframe();\n            this._iframeConnection = penpal_1.default.connectToChild({\n                iframe,\n                timeout: 60e3,\n                methods: {\n                    // NOTE: the postMessage penpal method should be the only method that\n                    // exists.\n                    postMessage: (data) => {\n                        return this._handlePostMessage(data);\n                    }\n                }\n            });\n            this._iframeConnecting = new Promise((resolve, reject) => {\n                let timedout = false;\n                const timer = setTimeout(() => {\n                    if (!this._iframeReady) {\n                        timedout = true;\n                        this._iframeConnecting = null;\n                        reject(new Error('timedout'));\n                    }\n                }, 6e3); // needs to be long enough for x-site to be fully loaded\n                this._iframeConnection.promise.then((child) => {\n                    clearTimeout(timer);\n                    if (timedout) {\n                        return;\n                    }\n                    this._iframeReady = true;\n                    this._childIframeConnection = child;\n                    this._startHeartbeat();\n                    this._iframeConnecting = null;\n                    resolve();\n                })\n                    .catch((err) => {\n                    clearTimeout(timer);\n                    if (timedout) {\n                        return;\n                    }\n                    reject(err);\n                });\n            });\n            return this._iframeConnecting;\n        });\n        this._startHeartbeat = (reconnect = false) => {\n            if (!this._heartbeatStarted) {\n                this._heartbeat(reconnect);\n                this._heartbeatStarted = true;\n            }\n        };\n        this._heartbeat = (reconnect = false) => __awaiter(this, void 0, void 0, function* () {\n            if (this._destroyed) {\n                return;\n            }\n            yield utils_1.wait(2e3);\n            try {\n                if (reconnect) {\n                    yield this._connectToChildIframe();\n                    this._backoffTimeout = 1;\n                    return this._heartbeat();\n                }\n                yield this._ping();\n            }\n            catch (err) {\n                // reconnect on destroyed connection error or ping timeout error\n                if (/destroy|timedout/gi.test(err.message)) {\n                    yield utils_1.wait(this._backoffTimeout * 1e3);\n                    // exponential backoff\n                    this._backoffTimeout = this._backoffTimeout << 1;\n                    return this._heartbeat(true);\n                }\n            }\n            return this._heartbeat();\n        });\n        this._ping = () => __awaiter(this, void 0, void 0, function* () {\n            if (this._destroyed) {\n                console.warn('Authereum instance destroyed. Message not posted to child.');\n                return;\n            }\n            return new Promise((resolve, reject) => {\n                let timedout = false;\n                const timer = setTimeout(() => {\n                    timedout = true;\n                }, 5e3);\n                this._postMessageToChild({\n                    method: 'ping'\n                }).then((pong) => {\n                    clearTimeout(timer);\n                    if (timedout) {\n                        reject(new Error('timedout'));\n                        return;\n                    }\n                    if (pong !== 'pong') {\n                        reject(new Error('Invalid response'));\n                        return;\n                    }\n                    resolve(pong);\n                })\n                    .catch(err => {\n                    reject(err);\n                });\n            });\n        });\n        this._constructIframe = (input) => {\n            const iframe = constructIframe(Object.assign(Object.assign({}, input), { isPreload: this._isPreload, disableGoogleAnalytics: this._disableGoogleAnalytics }));\n            if (this._debug) {\n                iframe.style.outline = '1px solid red';\n            }\n            this._injectedElements.push(iframe);\n            return iframe;\n        };\n        this._getConfigFromChild = () => __awaiter(this, void 0, void 0, function* () {\n            return this._postMessageToChild({\n                method: 'getConfig'\n            });\n        });\n        this._postVersionToChild = () => __awaiter(this, void 0, void 0, function* () {\n            return this._postMessageToChild({\n                method: 'version',\n                params: this.version()\n            });\n        });\n        this._postConfigToChild = () => __awaiter(this, void 0, void 0, function* () {\n            return this._postMessageToChild({\n                method: 'config',\n                params: {\n                    apiKey: this._apiKey,\n                    disableNotifications: this._disableNotifications\n                }\n            });\n        });\n        this._loadAsymmetricEncryptionKeyFromChild = () => __awaiter(this, void 0, void 0, function* () {\n            this._asymmetricEncryptionKey = yield this._postMessageToChild({\n                method: 'getAsymmetricEncryptionKey'\n            });\n        });\n        this._postMessageToChild = (payload) => __awaiter(this, void 0, void 0, function* () {\n            yield this._tilIframeReady();\n            if (this._destroyed) {\n                throw new Error('Authereum instance destroyed.');\n            }\n            if (!this._bodyContainsIframe()) {\n                this._destroyed = true;\n                this._teardownEventListeners();\n                // ignore destroy call to already destroyed iframe\n                if (payload.method === 'destroy') {\n                    return;\n                }\n                throw new Error('Authereum instance or iframe destroyed.');\n            }\n            return this._handleError(this._childIframeConnection.postMessage(payload));\n        });\n        this._handleChildLogoutEvent = () => __awaiter(this, void 0, void 0, function* () {\n            yield this._resetCache();\n            this.emit('logout', {});\n        });\n        this._handleChildDappKeyExpired = (loginKeyAddress) => __awaiter(this, void 0, void 0, function* () {\n            if (loginKeyAddress === this._cachedLoginKeyAddress) {\n                yield this._resetCache();\n                this.emit('dappKeyExpired', loginKeyAddress);\n                this.emit('logout');\n            }\n        });\n        this._handlePostMessage = (data) => {\n            try {\n                const { method, params } = data;\n                switch (method) {\n                    case 'onError':\n                        const err = params;\n                        this.emit('error', err);\n                        this._notifier.notify({\n                            type: 'error',\n                            message: err.message\n                        });\n                        return;\n                    case 'onLogout':\n                        return this._handleChildLogoutEvent();\n                    case 'onDappKeyExpired':\n                        return this._handleChildDappKeyExpired(params);\n                    case 'login':\n                        return this.login();\n                    case 'setWidgetPosition':\n                        // const position = params\n                        // const { x, y } = position\n                        // this.iframeStyle.left = x\n                        // this.iframeStyle.top = y\n                        // this._refreshWidget()\n                        return;\n                    case 'setWidgetSize': {\n                        const size = params;\n                        const { width, height } = size;\n                        this._iframeStyle.width = width;\n                        this._iframeStyle.height = height;\n                        return this._refreshWidget();\n                    }\n                    case 'setWidgetStyle': {\n                        const style = params;\n                        for (let key in style) {\n                            this._iframeStyle[key] = style[key];\n                        }\n                        return this._refreshWidget();\n                    }\n                    case 'setNotificationWidgetSize': {\n                        const size = params;\n                        const { width, height } = size;\n                        this._notificationIframeStyle.width = width;\n                        this._notificationIframeStyle.height = height;\n                        return this._refreshNotificationWidget();\n                    }\n                    case 'setNotificationWidgetStyle': {\n                        const style = params;\n                        for (let key in style) {\n                            this._notificationIframeStyle[key] = style[key];\n                        }\n                        return this._refreshNotificationWidget();\n                    }\n                    case 'getWindowSize':\n                        return this._getWindowSize();\n                    case 'hideWidget':\n                        return this.hideWidget();\n                    case 'log':\n                        return this._handlePostMessageLog(params);\n                    case 'openUrl':\n                        return this._openUrl(params);\n                    default:\n                        break;\n                }\n            }\n            catch (err) {\n                // noop\n            }\n        };\n        this._handlePostMessageLog = (data) => {\n            if (this._isPreload) {\n                return;\n            }\n            let { type, message } = data;\n            if (!type) {\n                type = 'log';\n            }\n            console[type](message);\n        };\n        this._getWindowSize = () => {\n            return {\n                width: this._getWindowWidth(),\n                height: this._getWindowHeight()\n            };\n        };\n        this._getWindowWidth = () => {\n            return window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;\n        };\n        this._getWindowHeight = () => {\n            return window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight;\n        };\n        // public _setIframePositionTop = (y: number) => {\n        // if (!this._iframe) return\n        // this._iframe.style.top = `${y}px`\n        // }\n        this._setIframePositionLeft = (x) => {\n            if (!this._iframe)\n                return;\n            this._iframe.style.left = `${x}px`;\n        };\n        this._setIframeWidth = (width) => {\n            if (!this._iframe)\n                return;\n            this._iframe.style.width = `${width}px`;\n        };\n        this._setIframeHeight = (height) => {\n            if (!this._iframe)\n                return;\n            this._iframe.style.height = `${height}px`;\n        };\n        this._refreshWidget = () => {\n            const { top, left, width, height, zIndex } = this._iframeStyle;\n            if (this._isPreload)\n                return;\n            if (!this._iframe)\n                return;\n            // this._setIframePositionTop(top)\n            // this._setIframePositionLeft(left)\n            this._setIframeWidth(width);\n            this._setIframeHeight(height);\n            this._iframe.style.zIndex = `${zIndex || 0}`;\n        };\n        this._refreshNotificationWidget = () => {\n            const { top, left, width, height, zIndex } = this._notificationIframeStyle;\n            if (this._isPreload)\n                return;\n            this._notificationIframe.style.width = `${width}px`;\n            this._notificationIframe.style.height = `${height}px`;\n            this._notificationIframe.style.zIndex = `${zIndex || 0}`;\n        };\n        this._loginKeyExists = () => __awaiter(this, void 0, void 0, function* () {\n            return !!(yield this.getLoginKey());\n        });\n        this._accountAddressExists = () => __awaiter(this, void 0, void 0, function* () {\n            return !!(yield this.getAccountAddress());\n        });\n        this._getAccountAdminKeyNonce = () => __awaiter(this, void 0, void 0, function* () {\n            return this._handleError(this._postMessageToChild({\n                method: 'getAccountAuthKeyNonce'\n            }));\n        });\n        this._getAccountAuthKeyNonce = () => __awaiter(this, void 0, void 0, function* () {\n            console.warn('Deprecation notice: `authereum._getAccountAuthKeyNonce()` is deprecated. Use `authereum._getAccountAdminKeyNonce()` instead.');\n            return this._getAccountAdminKeyNonce();\n        });\n        this._executeLoginKeyMetaTx = (tx) => __awaiter(this, void 0, void 0, function* () {\n            return this._handleError(this._postMessageToChild({\n                method: 'executeLoginKeyMetaTx',\n                params: serializeMessageObj(tx)\n            }));\n        });\n        this._loadLoginKey = (loginKey) => __awaiter(this, void 0, void 0, function* () {\n            yield this._tilReady();\n            return this._handleError(this._postMessageToChild({\n                method: 'loadLoginKey',\n                params: loginKey\n            }));\n        });\n        this._getOrCreateLoginKey = () => __awaiter(this, void 0, void 0, function* () {\n            yield this._tilReady();\n            return this._handleError(this._postMessageToChild({\n                method: 'getOrCreateLoginKey'\n            }));\n        });\n        this._getAuthenticateUri = (loginKeyAddress) => {\n            const encryptionKey = this._asymmetricEncryptionKey;\n            const date = new Date();\n            date.setDate(date.getDate() + 30); // expire in 30 days\n            const expiresAt = (date.getTime() / 1e3) | 0;\n            // NOTE: slk = sign login key\n            return this._webUri + '/?slk=' + encodeURIComponent(JSON.stringify({\n                loginKey: {\n                    publicAddress: loginKeyAddress,\n                    expiresAt\n                },\n                encryptionKey\n            })) + '&redirect_uri=' + this._redirectUri;\n        };\n        this._getSignWithAdminKeyUri = (message) => {\n            if (is_buffer_1.default(message)) {\n                message = `0x${message.toString('hex')}`;\n            }\n            // NOTE: sm = sign message\n            return this._webUri + '/?sm=' + encodeURIComponent(JSON.stringify({\n                message\n            })) + '&redirect_uri=' + this._redirectUri;\n        };\n        this._openPopupOrRedirect = (url) => __awaiter(this, void 0, void 0, function* () {\n            this.emit('openPopup', {});\n            if (this._forceRedirect) {\n                window.location.href = url;\n                return;\n            }\n            let child = this._getAuthereumPopupWindow(url);\n            let isBlocked = this._isAuthereumPopupBlocked(child);\n            if (isBlocked && !this._blockedPopupRedirect) {\n                const err = new Error('Disable popup blocker and try again');\n                this._notifier.notify({\n                    type: 'error',\n                    message: err.message,\n                    timeout: 5000\n                });\n                throw err;\n            }\n            else if (isBlocked) {\n                this.emit('popupBlocked');\n                const shouldShowPopupOrRedirect = yield this._showConfirmPopupOrRedirectModal();\n                if (!shouldShowPopupOrRedirect) {\n                    const errMessage = 'Popup or redirect rejected';\n                    this.emit('error', errMessage);\n                    throw new Error(errMessage);\n                }\n                // Try to bring up a user-initiated popup. If this fails\n                // fallback to a redirect\n                child = this._getAuthereumPopupWindow(url);\n                isBlocked = this._isAuthereumPopupBlocked(child);\n                if (isBlocked) {\n                    window.location.href = url;\n                    return;\n                }\n            }\n            child.focus();\n            return new Promise((resolve, reject) => {\n                const interval = setInterval(() => __awaiter(this, void 0, void 0, function* () {\n                    if (child.closed) {\n                        cleanUp();\n                        const err = new Error('Window closed');\n                        this.emit('error', err);\n                        this.emit('closePopup', {});\n                        reject(err);\n                    }\n                }), 250);\n                const timeout = setTimeout(() => {\n                    cleanUp();\n                    child.close();\n                    doneWithError(new Error('Timedout'));\n                }, 10 * 60 * 1000);\n                const cleanUp = () => {\n                    clearInterval(interval);\n                    clearTimeout(timeout);\n                    this.emit('closePopup', {});\n                };\n                const doneWithError = (err) => {\n                    cleanUp();\n                    this.emit('error', err);\n                    reject(err);\n                };\n                const done = (result = {}) => {\n                    cleanUp();\n                    resolve(result);\n                };\n                const handleParentMessageEvent = (event) => __awaiter(this, void 0, void 0, function* () {\n                    if (event.origin.includes(this._webUri)) {\n                        // this event tells parent to close child popup\n                        if (event.data.close) {\n                            child.close();\n                            done();\n                        }\n                        if (event.data.login) {\n                            done({ success: true });\n                            this.emit('login', {});\n                            this._cachedIsAuthenticated = true;\n                            if (event.data.encryptedSigningKey) {\n                                yield this._loadSigningKey(event.data.encryptedSigningKey);\n                            }\n                            this._logAnalyticsEvent({\n                                eventType: 'logged_in_dapp',\n                                properties: {\n                                    dapp_url: window.location.href\n                                }\n                            });\n                            if (this._redirectUri !== window.location.href) {\n                                window.location.href = this._redirectUri;\n                            }\n                        }\n                        if (event.data.result) {\n                            done(event.data.result);\n                            if (this._redirectUri !== window.location.href) {\n                                window.location.href = this._redirectUri;\n                            }\n                        }\n                        if (event.data.error) {\n                            doneWithError(new Error(event.data.error));\n                            if (this._redirectUri !== window.location.href) {\n                                window.location.href = this._redirectUri;\n                            }\n                        }\n                    }\n                });\n                this.addEventListener('message', handleParentMessageEvent, false);\n            });\n        });\n        this.addEventListener = (type, listener, useCapture = false) => {\n            window.addEventListener(type, listener, useCapture);\n            this._eventListeners.push({ type, listener, useCapture });\n        };\n        this._showConfirmPopupOrRedirectModal = () => {\n            return this._handleError(this._postMessageToChild({\n                method: 'showConfirmPopupOrRedirectModal'\n            }));\n        };\n        this._signLoginKeyRequest = (publicAddress) => __awaiter(this, void 0, void 0, function* () {\n            const url = this._getAuthenticateUri(publicAddress);\n            return this._openPopupOrRedirect(url);\n        });\n        this._tilDomReady = () => __awaiter(this, void 0, void 0, function* () {\n            return onDomReady();\n        });\n        // keep both static and normal version methods\n        this.version = () => {\n            return version_1.default;\n        };\n        this.isAuthenticatedSync = () => {\n            return this._cachedIsAuthenticated;\n        };\n        this.getTransactionReceipt = (txHash) => {\n            return this._handleError(this._postMessageToChild({\n                method: 'getTransactionReceipt',\n                params: txHash\n            }));\n        };\n        this.waitForTransactionReceipt = (txHash) => {\n            return this._handleError(this._postMessageToChild({\n                method: 'waitForTransactionReceipt',\n                params: txHash\n            }));\n        };\n        this.hasRecoveryEnabled = () => {\n            return this._handleError(this._postMessageToChild({\n                method: 'hasRecoveryEnabled'\n            }));\n        };\n        this.isContractDeployed = (accountAddress) => {\n            return this._handleError(this._postMessageToChild({\n                method: 'isContractDeployed',\n                params: accountAddress\n            }));\n        };\n        this._loadSigningKey = (signingKey) => __awaiter(this, void 0, void 0, function* () {\n            if (this._destroyed) {\n                console.warn('Authereum instance destroyed. Message not posted to child.');\n                return;\n            }\n            return this._postMessageToChild({\n                method: 'loadSigningKey',\n                params: signingKey\n            });\n        });\n        this._logAnalyticsEvent = (input) => __awaiter(this, void 0, void 0, function* () {\n            if (this._destroyed) {\n                console.warn('Authereum instance destroyed. Message not posted to child.');\n                return;\n            }\n            return this._postMessageToChild({\n                method: 'logAnalyticsEvent',\n                params: input\n            });\n        });\n        this._setupSigningKey = () => __awaiter(this, void 0, void 0, function* () {\n            yield this._tilReady();\n            const encryptedSigningKey = this._authereumQueryParams['encryptedSigningKey'];\n            if (encryptedSigningKey) {\n                const success = yield this._loadSigningKey(encryptedSigningKey);\n                if (success) {\n                    try {\n                        localStorage.removeItem('_authereum');\n                    }\n                    catch (err) {\n                        // noop\n                    }\n                }\n            }\n        });\n        this._cacheAuthereumQueryParams = () => __awaiter(this, void 0, void 0, function* () {\n            try {\n                const param = utils_1.getQueryParamValue('_authereum');\n                if (param) {\n                    this._authereumQueryParams = JSON.parse(param);\n                    try {\n                        localStorage.setItem('_authereum', btoa(JSON.stringify(this._authereumQueryParams)));\n                    }\n                    catch (err) {\n                        // noop\n                    }\n                    const newUrl = utils_1.removeQueryParam('_authereum');\n                    utils_1.replaceWindowUrl(newUrl);\n                }\n                else {\n                    try {\n                        // load from local storage cache if exists.\n                        // this local storage is cleared after connection.\n                        let cached = localStorage.getItem('_authereum');\n                        if (cached) {\n                            this._authereumQueryParams = JSON.parse(atob(cached));\n                        }\n                    }\n                    catch (err) {\n                        // noop\n                    }\n                }\n            }\n            catch (err) {\n                // noop\n            }\n        });\n        this.destroy = () => __awaiter(this, void 0, void 0, function* () {\n            if (this._destroyed) {\n                console.warn('Authereum instance already destroyed.');\n                return true;\n            }\n            try {\n                if (this._iframeReady && this._bodyContainsIframe()) {\n                    yield this._postMessageToChild({\n                        method: 'destroy'\n                    });\n                }\n            }\n            catch (err) {\n                console.warn(err);\n            }\n            for (let i = 0; i < this._injectedElements.length; i++) {\n                const element = this._injectedElements[i];\n                try {\n                    element.remove();\n                }\n                catch (err) {\n                    console.error(err);\n                }\n            }\n            /*\n            const elements = document.querySelectorAll('[id*=\"authereum\"]')\n            for (let i = 0; i < elements.length; i++) {\n              const element = elements[i]\n              try {\n                element.remove()\n              } catch (err) {\n                console.error(err)\n              }\n            }\n            */\n            this._iframeReady = false;\n            this._destroyed = true;\n            console.warn('Authereum instance destroyed.');\n            this._teardownEventListeners();\n            this.emit('destroy', {});\n            return true;\n        });\n        this.isDestroyed = () => {\n            return this._destroyed;\n        };\n        this.getAddressQrCodeDataUri = (address) => __awaiter(this, void 0, void 0, function* () {\n            return this._postMessageToChild({\n                method: 'getAddressQrCodeDataUri',\n                params: {\n                    address\n                }\n            });\n        });\n        this._loadNotificationsIframe = (url) => __awaiter(this, void 0, void 0, function* () {\n            const id = 'authereum__x-notification-iframe';\n            let el = document.getElementById(id);\n            if (el && el.src === url) {\n                this._notificationIframe = el;\n            }\n            else {\n                if (el) {\n                    el.remove();\n                }\n                this._notificationIframe = this._constructIframe({ id, url });\n                this._notificationIframe.style.top = '0';\n                this._notificationIframe.style.right = '0';\n                yield this._tilDomReady();\n                el = document.getElementById(id);\n                if (el) {\n                    el.remove();\n                }\n                document.body.appendChild(this._notificationIframe);\n            }\n        });\n        this._setDebug = (enabled) => __awaiter(this, void 0, void 0, function* () {\n            this._debug = enabled;\n            if (this._debug) {\n                this._iframe.style.outline = '1px solid red';\n                this._notificationIframe.style.outline = '1px solid red';\n            }\n            else {\n                this._iframe.style.outline = '0';\n                this._notificationIframe.style.outline = '0';\n            }\n        });\n        this._userConfig = config;\n        if (config instanceof Object) {\n            this._isPreload = !!config.isPreload;\n            this._disableGoogleAnalytics = !!config.disableGoogleAnalytics;\n        }\n        const merged = this._checkCachedInstance(config);\n        if (merged) {\n            return merged;\n        }\n        this._init(config);\n        this._starkProvider = new StarkWareProvider_1.default(this);\n        if (window._authereumInstances) {\n            window._authereumInstances.push(this);\n        }\n    }\n    _checkCachedInstance(config) {\n        let cachedInstance = null;\n        if (Array.isArray(window._authereumInstances)) {\n            if (window._authereumInstances.length) {\n                cachedInstance = window._authereumInstances.pop();\n            }\n        }\n        // checks if preloaded cached iframe matches the same network as user created\n        // instance, and if so then merge the state to use preloaded iframe.\n        if (cachedInstance) {\n            if (cachedInstance.isReady()) {\n                if (typeof config === 'string') {\n                    if (cachedInstance.getCachedNetworkName() === config) {\n                        return this._merge(cachedInstance);\n                    }\n                    else {\n                        cachedInstance.destroy();\n                        cachedInstance = null;\n                    }\n                }\n                else if (config instanceof Object) {\n                    if (cachedInstance.getCachedNetworkName() === config.networkName &&\n                        !config.xsUri) {\n                        return this._merge(cachedInstance);\n                    }\n                    else {\n                        cachedInstance.destroy();\n                        cachedInstance = null;\n                    }\n                }\n            }\n            else {\n                cachedInstance.destroy();\n                cachedInstance = null;\n            }\n        }\n    }\n    // this merges an authereum instance with this one\n    // by copying all properties and connected iframes.\n    _merge(instance) {\n        this._debug = instance._debug;\n        this._apiKey = instance._apiKey;\n        this._apiUri = instance._apiUri;\n        this._rpcUri = instance._rpcUri;\n        this._webUri = instance._webUri;\n        this._xsUri = instance._xsUri;\n        this._notifierUri = instance._notifierUri;\n        this._networkName = instance._networkName;\n        this._networkId = instance._networkId;\n        this._redirectUri = instance._redirectUri;\n        this._iframeConnection = instance._iframeConnection;\n        this._childIframeConnection = instance._childIframeConnection;\n        this._iframe = instance._iframe;\n        this._notificationIframe = instance._notificationIframe;\n        this._cacheReady = instance._cacheReady;\n        this._cachedLoginKeyAddress = instance._cachedLoginKeyAddress;\n        this._cachedAccountAddress = instance._cachedAccountAddress;\n        this._cachedIsAuthenticated = instance._cachedIsAuthenticated;\n        this._iframeReady = instance._iframeReady;\n        this._configReady = instance._configReady;\n        this._iframeStyle = instance._iframeStyle;\n        this._notificationIframeStyle = instance._notificationIframeStyle;\n        this._heartbeatStarted = instance._heartbeatStarted;\n        this._backoffTimeout = instance._backoffTimeout;\n        this._asymmetricEncryptionKey = instance._asymmetricEncryptionKey;\n        this._authereumQueryParams = instance._authereumQueryParams;\n        this._injectedElements = instance._injectedElements;\n        this._notificationsMap = instance._notificationsMap;\n        instance._handlePostMessage = this._handlePostMessage.bind(instance);\n        this._initConfig(this._userConfig);\n        this._cacheLoginKeyAddress();\n        this._getConfigFromChild()\n            .then((config) => {\n            this._setConfig(config);\n            this._postConfigToChild().catch(noop);\n            this.emit('iframeReady', {});\n        })\n            .catch(noop);\n        this._emitReadyEvent();\n        this._provider = new AuthereumProvider_1.default(this);\n        this._refreshWidget();\n        return this;\n    }\n    _setupFocusListener() {\n        this.addEventListener('focus', this._handleWindowFocus, false);\n    }\n    _setupActionKeyListener() {\n        this.addEventListener('keydown', this._handleActionKeyPress, false);\n    }\n    _teardownEventListeners() {\n        for (let i = 0; i < this._eventListeners.length; i++) {\n            const { type, listener, useCapture } = this._eventListeners[i];\n            window.removeEventListener(type, listener, useCapture);\n        }\n    }\n    _getOrCreateMainIframe() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this._iframe) {\n                if (this._iframeConnection) {\n                    this._iframeConnection.destroy();\n                }\n                this._iframe.remove();\n            }\n            return new Promise((resolve) => __awaiter(this, void 0, void 0, function* () {\n                const id = 'authereum__x-iframe';\n                let el = document.getElementById(id);\n                if (el && el.src === this._xsUri) {\n                    this._iframe = el;\n                }\n                else {\n                    this._iframe = this._constructIframe({ id, url: this._xsUri });\n                    let notificationIframeUrl = `${this._xsUri.replace(/\\/$/, '')}/notifications`;\n                    this._loadNotificationsIframe(notificationIframeUrl).catch(noop);\n                    resolve(this._iframe);\n                    yield this._tilDomReady();\n                    el = document.getElementById(id);\n                    if (el) {\n                        el.remove();\n                    }\n                    document.body.appendChild(this._iframe);\n                    this._iframe.onload = () => {\n                        this._postVersionToChild().catch(noop);\n                        this._loadAsymmetricEncryptionKeyFromChild().catch(noop);\n                        this._getConfigFromChild()\n                            .then((config) => {\n                            if (notificationIframeUrl !== config.notifierIframeUri) {\n                                this._loadNotificationsIframe(config.notifierIframeUri);\n                            }\n                            this._setConfig(config);\n                            this._postConfigToChild().catch(noop);\n                            this._configReady = true;\n                            this.emit('iframeReady', {});\n                        })\n                            .catch(noop);\n                    };\n                }\n            }));\n        });\n    }\n    _bodyContainsIframe() {\n        return document.body.contains(this._iframe);\n    }\n    _getAuthereumPopupWindow(url) {\n        return window.open(url, 'Authereum', `toolbar=no,\n      location=no,\n      status=no,\n      menubar=no,\n      scrollbars=no,\n      resizable=no,\n      width=470,\n      height=640`);\n    }\n    _isAuthereumPopupBlocked(child) {\n        return (child === null || child === undefined);\n    }\n    isPreload() {\n        return this._isPreload;\n    }\n}\nexports.default = Authereum;\n// keep both static and normal version methods\nAuthereum.version = () => {\n    return version_1.default;\n};\nif (typeof window !== 'undefined') {\n    window.Authereum = Authereum;\n    window._authereumInstances = [];\n    // disable preloading if param set for debugging\n    // if (!getQueryParamValue('debug_disable_preload')) {\n    if (utils_1.getQueryParamValue('authereum_debug')) {\n        // preload instance in order to avoid async calls between\n        // user action and login call.\n        let cachedNetwork = 'mainnet';\n        const networks = ['kovan', 'goerli', 'rinkeby', 'ropsten'];\n        for (let i = 0; i < networks.length; i++) {\n            // assuming which network to preload\n            if (window.location.href.includes(networks[i])) {\n                cachedNetwork = networks[i];\n                break;\n            }\n        }\n        const cachedInstance = new Authereum({\n            networkName: cachedNetwork,\n            isPreload: true\n        });\n        window._authereumInstances.push(cachedInstance);\n    }\n}\n"]},"metadata":{},"sourceType":"script"}