{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar ethUtil = require(\"ethereumjs-util\");\n\nexports.constants = {\n  EVM_WORD_WIDTH_IN_BYTES: 32,\n  EVM_WORD_WIDTH_IN_BITS: 256,\n  HEX_BASE: 16,\n  DEC_BASE: 10,\n  BIN_BASE: 2,\n  HEX_SELECTOR_LENGTH_IN_CHARS: 10,\n  HEX_SELECTOR_LENGTH_IN_BYTES: 4,\n  HEX_SELECTOR_BYTE_OFFSET_IN_CALLDATA: 0,\n  // Disable no-object-literal-type-assertion so we can enforce cast\n\n  /* tslint:disable no-object-literal-type-assertion */\n  DEFAULT_DECODING_RULES: {\n    shouldConvertStructsToObjects: true\n  },\n  DEFAULT_ENCODING_RULES: {\n    shouldOptimize: true,\n    shouldAnnotate: false\n  },\n\n  /* tslint:enable no-object-literal-type-assertion */\n  EMPTY_EVM_WORD_STRING: '0x0000000000000000000000000000000000000000000000000000000000000000',\n  EMPTY_EVM_WORD_BUFFER: ethUtil.toBuffer('0x0000000000000000000000000000000000000000000000000000000000000000'),\n  NUMBER_OF_BYTES_IN_UINT8: 8,\n  NUMBER_OF_BYTES_IN_INT8: 8\n};","map":{"version":3,"sources":["../../../../src/abi_encoder/utils/constants.ts"],"names":[],"mappings":";;;;;;AAAA,IAAA,OAAA,GAAA,OAAA,CAAA,iBAAA,CAAA;;AAIa,OAAA,CAAA,SAAA,GAAY;AACrB,EAAA,uBAAuB,EAAE,EADJ;AAErB,EAAA,sBAAsB,EAAE,GAFH;AAGrB,EAAA,QAAQ,EAAE,EAHW;AAIrB,EAAA,QAAQ,EAAE,EAJW;AAKrB,EAAA,QAAQ,EAAE,CALW;AAMrB,EAAA,4BAA4B,EAAE,EANT;AAOrB,EAAA,4BAA4B,EAAE,CAPT;AAQrB,EAAA,oCAAoC,EAAE,CARjB;AASrB;;AACA;AACA,EAAA,sBAAsB,EAAE;AAAE,IAAA,6BAA6B,EAAE;AAAjC,GAXH;AAYrB,EAAA,sBAAsB,EAAE;AAAE,IAAA,cAAc,EAAE,IAAlB;AAAwB,IAAA,cAAc,EAAE;AAAxC,GAZH;;AAarB;AACA,EAAA,qBAAqB,EAAE,oEAdF;AAerB,EAAA,qBAAqB,EAAE,OAAO,CAAC,QAAR,CAAiB,oEAAjB,CAfF;AAgBrB,EAAA,wBAAwB,EAAE,CAhBL;AAiBrB,EAAA,uBAAuB,EAAE;AAjBJ,CAAZ","sourceRoot":"","sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar ethUtil = require(\"ethereumjs-util\");\r\nexports.constants = {\r\n    EVM_WORD_WIDTH_IN_BYTES: 32,\r\n    EVM_WORD_WIDTH_IN_BITS: 256,\r\n    HEX_BASE: 16,\r\n    DEC_BASE: 10,\r\n    BIN_BASE: 2,\r\n    HEX_SELECTOR_LENGTH_IN_CHARS: 10,\r\n    HEX_SELECTOR_LENGTH_IN_BYTES: 4,\r\n    HEX_SELECTOR_BYTE_OFFSET_IN_CALLDATA: 0,\r\n    // Disable no-object-literal-type-assertion so we can enforce cast\r\n    /* tslint:disable no-object-literal-type-assertion */\r\n    DEFAULT_DECODING_RULES: { shouldConvertStructsToObjects: true },\r\n    DEFAULT_ENCODING_RULES: { shouldOptimize: true, shouldAnnotate: false },\r\n    /* tslint:enable no-object-literal-type-assertion */\r\n    EMPTY_EVM_WORD_STRING: '0x0000000000000000000000000000000000000000000000000000000000000000',\r\n    EMPTY_EVM_WORD_BUFFER: ethUtil.toBuffer('0x0000000000000000000000000000000000000000000000000000000000000000'),\r\n    NUMBER_OF_BYTES_IN_UINT8: 8,\r\n    NUMBER_OF_BYTES_IN_INT8: 8,\r\n};\r\n//# sourceMappingURL=constants.js.map"]},"metadata":{},"sourceType":"script"}