{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _constants = require(\"./constants\");\n\nvar _errorCodes = require(\"./errorCodes\");\n\nvar _createDestructor2 = _interopRequireDefault(require(\"./createDestructor\"));\n\nvar _connectCallReceiver = _interopRequireDefault(require(\"./connectCallReceiver\"));\n\nvar _connectCallSender = _interopRequireDefault(require(\"./connectCallSender\"));\n\nvar _createLogger = _interopRequireDefault(require(\"./createLogger\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/**\r\n * @typedef {Object} Parent\r\n * @property {Promise} promise A promise which will be resolved once a connection has\r\n * been established.\r\n * @property {Function} destroy A method that, when called, will disconnect any\r\n * messaging channels. You may call this even before a connection has been established.\r\n */\n\n/**\r\n * Attempts to establish communication with the parent window.\r\n * @param {Object} options\r\n * @param {string} [options.parentOrigin=*] Valid parent origin used to restrict communication.\r\n * @param {Object} [options.methods={}] Methods that may be called by the parent window.\r\n * @param {Number} [options.timeout] The amount of time, in milliseconds, Penpal should wait\r\n * for the parent to respond before rejecting the connection promise.\r\n * @return {Parent}\r\n */\n\n\nvar _default = function _default() {\n  let _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n      _ref$parentOrigin = _ref.parentOrigin,\n      parentOrigin = _ref$parentOrigin === void 0 ? '*' : _ref$parentOrigin,\n      _ref$methods = _ref.methods,\n      methods = _ref$methods === void 0 ? {} : _ref$methods,\n      timeout = _ref.timeout,\n      debug = _ref.debug;\n\n  const log = (0, _createLogger.default)(debug);\n\n  if (window === window.top) {\n    const error = new Error('connectToParent() must be called within an iframe');\n    error.code = _errorCodes.ERR_NOT_IN_IFRAME;\n    throw error;\n  }\n\n  const _createDestructor = (0, _createDestructor2.default)(),\n        destroy = _createDestructor.destroy,\n        onDestroy = _createDestructor.onDestroy;\n\n  const child = window;\n  const parent = child.parent;\n  const promise = new Promise((resolveConnectionPromise, reject) => {\n    let connectionTimeoutId;\n\n    if (timeout !== undefined) {\n      connectionTimeoutId = setTimeout(() => {\n        const error = new Error(`Connection to parent timed out after ${timeout}ms`);\n        error.code = _errorCodes.ERR_CONNECTION_TIMEOUT;\n        reject(error);\n        destroy();\n      }, timeout);\n    }\n\n    const handleMessageEvent = event => {\n      // Under niche scenarios, we get into this function after\n      // the iframe has been removed from the DOM. In Edge, this\n      // results in \"Object expected\" errors being thrown when we\n      // try to access properties on window (global properties).\n      // For this reason, we try to access a global up front (clearTimeout)\n      // and if it fails we can assume the iframe has been removed\n      // and we ignore the message event.\n      try {\n        clearTimeout();\n      } catch (e) {\n        return;\n      }\n\n      if (event.source !== parent || event.data.penpal !== _constants.HANDSHAKE_REPLY) {\n        return;\n      }\n\n      if (parentOrigin !== '*' && parentOrigin !== event.origin) {\n        log(`Child received handshake reply from origin ${event.origin} which did not match expected origin ${parentOrigin}`);\n        return;\n      }\n\n      log('Child: Received handshake reply');\n      child.removeEventListener(_constants.MESSAGE, handleMessageEvent);\n      const info = {\n        localName: 'Child',\n        local: child,\n        remote: parent,\n        originForSending: event.origin === 'null' ? '*' : event.origin,\n        originForReceiving: event.origin\n      };\n      const callSender = {};\n      const destroyCallReceiver = (0, _connectCallReceiver.default)(info, methods, log);\n      onDestroy(destroyCallReceiver);\n      const destroyCallSender = (0, _connectCallSender.default)(callSender, info, event.data.methodNames, destroy, log);\n      onDestroy(destroyCallSender);\n      clearTimeout(connectionTimeoutId);\n      resolveConnectionPromise(callSender);\n    };\n\n    child.addEventListener(_constants.MESSAGE, handleMessageEvent);\n    onDestroy(() => {\n      child.removeEventListener(_constants.MESSAGE, handleMessageEvent);\n      const error = new Error('Connection destroyed');\n      error.code = _errorCodes.ERR_CONNECTION_DESTROYED;\n      reject(error);\n    });\n    log('Child: Sending handshake');\n    parent.postMessage({\n      penpal: _constants.HANDSHAKE,\n      methodNames: Object.keys(methods)\n    }, parentOrigin);\n  });\n  return {\n    promise,\n    destroy\n  };\n};\n\nexports.default = _default;\nmodule.exports = exports.default;","map":{"version":3,"sources":["F:/7color/node_modules/penpal/lib/connectToParent.js"],"names":["Object","defineProperty","exports","value","default","_constants","require","_errorCodes","_createDestructor2","_interopRequireDefault","_connectCallReceiver","_connectCallSender","_createLogger","obj","__esModule","_default","_ref","arguments","length","undefined","_ref$parentOrigin","parentOrigin","_ref$methods","methods","timeout","debug","log","window","top","error","Error","code","ERR_NOT_IN_IFRAME","_createDestructor","destroy","onDestroy","child","parent","promise","Promise","resolveConnectionPromise","reject","connectionTimeoutId","setTimeout","ERR_CONNECTION_TIMEOUT","handleMessageEvent","event","clearTimeout","e","source","data","penpal","HANDSHAKE_REPLY","origin","removeEventListener","MESSAGE","info","localName","local","remote","originForSending","originForReceiving","callSender","destroyCallReceiver","destroyCallSender","methodNames","addEventListener","ERR_CONNECTION_DESTROYED","postMessage","HANDSHAKE","keys","module"],"mappings":"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","sourcesContent":["\"use strict\";\r\n\r\nObject.defineProperty(exports, \"__esModule\", {\r\n  value: true\r\n});\r\nexports.default = void 0;\r\n\r\nvar _constants = require(\"./constants\");\r\n\r\nvar _errorCodes = require(\"./errorCodes\");\r\n\r\nvar _createDestructor2 = _interopRequireDefault(require(\"./createDestructor\"));\r\n\r\nvar _connectCallReceiver = _interopRequireDefault(require(\"./connectCallReceiver\"));\r\n\r\nvar _connectCallSender = _interopRequireDefault(require(\"./connectCallSender\"));\r\n\r\nvar _createLogger = _interopRequireDefault(require(\"./createLogger\"));\r\n\r\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\r\n\r\n/**\r\n * @typedef {Object} Parent\r\n * @property {Promise} promise A promise which will be resolved once a connection has\r\n * been established.\r\n * @property {Function} destroy A method that, when called, will disconnect any\r\n * messaging channels. You may call this even before a connection has been established.\r\n */\r\n\r\n/**\r\n * Attempts to establish communication with the parent window.\r\n * @param {Object} options\r\n * @param {string} [options.parentOrigin=*] Valid parent origin used to restrict communication.\r\n * @param {Object} [options.methods={}] Methods that may be called by the parent window.\r\n * @param {Number} [options.timeout] The amount of time, in milliseconds, Penpal should wait\r\n * for the parent to respond before rejecting the connection promise.\r\n * @return {Parent}\r\n */\r\nvar _default = function _default() {\r\n  let _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\r\n      _ref$parentOrigin = _ref.parentOrigin,\r\n      parentOrigin = _ref$parentOrigin === void 0 ? '*' : _ref$parentOrigin,\r\n      _ref$methods = _ref.methods,\r\n      methods = _ref$methods === void 0 ? {} : _ref$methods,\r\n      timeout = _ref.timeout,\r\n      debug = _ref.debug;\r\n\r\n  const log = (0, _createLogger.default)(debug);\r\n\r\n  if (window === window.top) {\r\n    const error = new Error('connectToParent() must be called within an iframe');\r\n    error.code = _errorCodes.ERR_NOT_IN_IFRAME;\r\n    throw error;\r\n  }\r\n\r\n  const _createDestructor = (0, _createDestructor2.default)(),\r\n        destroy = _createDestructor.destroy,\r\n        onDestroy = _createDestructor.onDestroy;\r\n\r\n  const child = window;\r\n  const parent = child.parent;\r\n  const promise = new Promise((resolveConnectionPromise, reject) => {\r\n    let connectionTimeoutId;\r\n\r\n    if (timeout !== undefined) {\r\n      connectionTimeoutId = setTimeout(() => {\r\n        const error = new Error(`Connection to parent timed out after ${timeout}ms`);\r\n        error.code = _errorCodes.ERR_CONNECTION_TIMEOUT;\r\n        reject(error);\r\n        destroy();\r\n      }, timeout);\r\n    }\r\n\r\n    const handleMessageEvent = event => {\r\n      // Under niche scenarios, we get into this function after\r\n      // the iframe has been removed from the DOM. In Edge, this\r\n      // results in \"Object expected\" errors being thrown when we\r\n      // try to access properties on window (global properties).\r\n      // For this reason, we try to access a global up front (clearTimeout)\r\n      // and if it fails we can assume the iframe has been removed\r\n      // and we ignore the message event.\r\n      try {\r\n        clearTimeout();\r\n      } catch (e) {\r\n        return;\r\n      }\r\n\r\n      if (event.source !== parent || event.data.penpal !== _constants.HANDSHAKE_REPLY) {\r\n        return;\r\n      }\r\n\r\n      if (parentOrigin !== '*' && parentOrigin !== event.origin) {\r\n        log(`Child received handshake reply from origin ${event.origin} which did not match expected origin ${parentOrigin}`);\r\n        return;\r\n      }\r\n\r\n      log('Child: Received handshake reply');\r\n      child.removeEventListener(_constants.MESSAGE, handleMessageEvent);\r\n      const info = {\r\n        localName: 'Child',\r\n        local: child,\r\n        remote: parent,\r\n        originForSending: event.origin === 'null' ? '*' : event.origin,\r\n        originForReceiving: event.origin\r\n      };\r\n      const callSender = {};\r\n      const destroyCallReceiver = (0, _connectCallReceiver.default)(info, methods, log);\r\n      onDestroy(destroyCallReceiver);\r\n      const destroyCallSender = (0, _connectCallSender.default)(callSender, info, event.data.methodNames, destroy, log);\r\n      onDestroy(destroyCallSender);\r\n      clearTimeout(connectionTimeoutId);\r\n      resolveConnectionPromise(callSender);\r\n    };\r\n\r\n    child.addEventListener(_constants.MESSAGE, handleMessageEvent);\r\n    onDestroy(() => {\r\n      child.removeEventListener(_constants.MESSAGE, handleMessageEvent);\r\n      const error = new Error('Connection destroyed');\r\n      error.code = _errorCodes.ERR_CONNECTION_DESTROYED;\r\n      reject(error);\r\n    });\r\n    log('Child: Sending handshake');\r\n    parent.postMessage({\r\n      penpal: _constants.HANDSHAKE,\r\n      methodNames: Object.keys(methods)\r\n    }, parentOrigin);\r\n  });\r\n  return {\r\n    promise,\r\n    destroy\r\n  };\r\n};\r\n\r\nexports.default = _default;\r\nmodule.exports = exports.default;"]},"metadata":{},"sourceType":"script"}