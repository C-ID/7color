{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar OpCode;\n\n(function (OpCode) {\n  // 0s: Stop and Arithmetic Operations\n  OpCode[\"Stop\"] = \"STOP\";\n  OpCode[\"Add\"] = \"ADD\";\n  OpCode[\"Mul\"] = \"MUL\";\n  OpCode[\"Sub\"] = \"SUB\";\n  OpCode[\"Div\"] = \"DIV\";\n  OpCode[\"SDiv\"] = \"SDIV\";\n  OpCode[\"Mod\"] = \"MOD\";\n  OpCode[\"SMod\"] = \"SMOD\";\n  OpCode[\"AddMod\"] = \"ADDMOD\";\n  OpCode[\"MulMod\"] = \"MULMOD\";\n  OpCode[\"Exp\"] = \"EXP\";\n  OpCode[\"SignExtend\"] = \"SIGNEXTEND\"; // 10s: Comparison & Bitwise Logic Operations\n\n  OpCode[\"Lt\"] = \"LT\";\n  OpCode[\"Gt\"] = \"GT\";\n  OpCode[\"SLt\"] = \"SLT\";\n  OpCode[\"SGt\"] = \"SGT\";\n  OpCode[\"Eq\"] = \"EQ\";\n  OpCode[\"IsZero\"] = \"ISZERO\";\n  OpCode[\"And\"] = \"AND\";\n  OpCode[\"Or\"] = \"OR\";\n  OpCode[\"Xor\"] = \"XOR\";\n  OpCode[\"Not\"] = \"NOT\";\n  OpCode[\"Byte\"] = \"BYTE\"; // 20s: SHA3\n\n  OpCode[\"Sha3\"] = \"SHA3\"; // 30s: Environmental Information\n\n  OpCode[\"Address\"] = \"ADDRESS\";\n  OpCode[\"Balance\"] = \"BALANCE\";\n  OpCode[\"Origin\"] = \"ORIGIN\";\n  OpCode[\"Caller\"] = \"CALLER\";\n  OpCode[\"CallValue\"] = \"CALLVALUE\";\n  OpCode[\"CallDataLoad\"] = \"CALLDATALOAD\";\n  OpCode[\"CallDataSize\"] = \"CALLDATASIZE\";\n  OpCode[\"CallDataCopy\"] = \"CALLDATACOPY\";\n  OpCode[\"CodeSize\"] = \"CODESIZE\";\n  OpCode[\"CodeCopy\"] = \"CODECOPY\";\n  OpCode[\"GasPrice\"] = \"GASPRICE\";\n  OpCode[\"ExtCodeSize\"] = \"EXTCODESIZE\";\n  OpCode[\"ExtCodeCopy\"] = \"EXTCODECOPY\";\n  OpCode[\"ReturnDataSize\"] = \"RETURNDATASIZE\";\n  OpCode[\"ReturnDataCopy\"] = \"RETURNDATACOPY\"; // 40s: Block Information\n\n  OpCode[\"BlockHash\"] = \"BLOCKHASH\";\n  OpCode[\"Coinbase\"] = \"COINBASE\";\n  OpCode[\"TimeStamp\"] = \"TimeStamp\";\n  OpCode[\"Number\"] = \"NUMBER\";\n  OpCode[\"Difficulty\"] = \"DIFFICULTY\";\n  OpCode[\"Gaslimit\"] = \"GASLIMIT\"; // 50s: Stack, Memory, Storage and Flow Operations\n\n  OpCode[\"Pop\"] = \"POP\";\n  OpCode[\"MLoad\"] = \"MLOAD\";\n  OpCode[\"MStore\"] = \"MSTORE\";\n  OpCode[\"MStore8\"] = \"MSTORE8\";\n  OpCode[\"SLoad\"] = \"SLOAD\";\n  OpCode[\"SStore\"] = \"SSTORE\";\n  OpCode[\"Jump\"] = \"JUMP\";\n  OpCode[\"Jumpi\"] = \"JUMPI\";\n  OpCode[\"Pc\"] = \"PC\";\n  OpCode[\"MSize\"] = \"MSIZE\";\n  OpCode[\"Gas\"] = \"GAS\";\n  OpCode[\"JumpDest\"] = \"JUMPDEST\"; // 60s & 70s: Push Operations\n\n  OpCode[\"Push1\"] = \"PUSH1\";\n  OpCode[\"Push2\"] = \"PUSH2\";\n  OpCode[\"Push3\"] = \"PUSH3\";\n  OpCode[\"Push4\"] = \"PUSH4\";\n  OpCode[\"Push5\"] = \"PUSH5\";\n  OpCode[\"Push6\"] = \"PUSH6\";\n  OpCode[\"Push7\"] = \"PUSH7\";\n  OpCode[\"Push8\"] = \"PUSH8\";\n  OpCode[\"Push9\"] = \"PUSH9\";\n  OpCode[\"Push10\"] = \"PUSH10\";\n  OpCode[\"Push11\"] = \"PUSH11\";\n  OpCode[\"Push12\"] = \"PUSH12\";\n  OpCode[\"Push13\"] = \"PUSH13\";\n  OpCode[\"Push14\"] = \"PUSH14\";\n  OpCode[\"Push15\"] = \"PUSH15\";\n  OpCode[\"Push16\"] = \"PUSH16\";\n  OpCode[\"Push17\"] = \"PUSH17\";\n  OpCode[\"Push18\"] = \"PUSH18\";\n  OpCode[\"Push19\"] = \"PUSH19\";\n  OpCode[\"Push20\"] = \"PUSH20\";\n  OpCode[\"Push21\"] = \"PUSH21\";\n  OpCode[\"Push22\"] = \"PUSH22\";\n  OpCode[\"Push23\"] = \"PUSH23\";\n  OpCode[\"Push24\"] = \"PUSH24\";\n  OpCode[\"Push25\"] = \"PUSH25\";\n  OpCode[\"Push26\"] = \"PUSH26\";\n  OpCode[\"Push27\"] = \"PUSH27\";\n  OpCode[\"Push28\"] = \"PUSH28\";\n  OpCode[\"Push29\"] = \"PUSH29\";\n  OpCode[\"Push30\"] = \"PUSH30\";\n  OpCode[\"Push31\"] = \"PUSH31\";\n  OpCode[\"Push32\"] = \"PUSH32\"; // 80s: Duplication Operation\n\n  OpCode[\"Dup1\"] = \"DUP1\";\n  OpCode[\"Dup2\"] = \"DUP2\";\n  OpCode[\"Dup3\"] = \"DUP3\";\n  OpCode[\"Dup4\"] = \"DUP4\";\n  OpCode[\"Dup5\"] = \"DUP5\";\n  OpCode[\"Dup6\"] = \"DUP6\";\n  OpCode[\"Dup7\"] = \"DUP7\";\n  OpCode[\"Dup8\"] = \"DUP8\";\n  OpCode[\"Dup9\"] = \"DUP9\";\n  OpCode[\"Dup10\"] = \"DUP10\";\n  OpCode[\"Dup11\"] = \"DUP11\";\n  OpCode[\"Dup12\"] = \"DUP12\";\n  OpCode[\"Dup13\"] = \"DUP13\";\n  OpCode[\"Dup14\"] = \"DUP14\";\n  OpCode[\"Dup15\"] = \"DUP15\";\n  OpCode[\"Dup16\"] = \"DUP16\"; // 90s: Exchange Operation\n\n  OpCode[\"Swap1\"] = \"SWAP1\";\n  OpCode[\"Swap2\"] = \"SWAP2\";\n  OpCode[\"Swap3\"] = \"SWAP3\";\n  OpCode[\"Swap4\"] = \"SWAP4\";\n  OpCode[\"Swap5\"] = \"SWAP5\";\n  OpCode[\"Swap6\"] = \"SWAP6\";\n  OpCode[\"Swap7\"] = \"SWAP7\";\n  OpCode[\"Swap8\"] = \"SWAP8\";\n  OpCode[\"Swap9\"] = \"SWAP9\";\n  OpCode[\"Swap10\"] = \"SWAP10\";\n  OpCode[\"Swap11\"] = \"SWAP11\";\n  OpCode[\"Swap12\"] = \"SWAP12\";\n  OpCode[\"Swap13\"] = \"SWAP13\";\n  OpCode[\"Swap14\"] = \"SWAP14\";\n  OpCode[\"Swap15\"] = \"SWAP15\";\n  OpCode[\"Swap16\"] = \"SWAP16\"; // a0s: Logging Operations\n\n  OpCode[\"Log1\"] = \"LOG1\";\n  OpCode[\"Log2\"] = \"LOG2\";\n  OpCode[\"Log3\"] = \"LOG3\";\n  OpCode[\"Log4\"] = \"LOG4\"; // f0s: System operations\n\n  OpCode[\"Create\"] = \"CREATE\";\n  OpCode[\"Call\"] = \"CALL\";\n  OpCode[\"CallCode\"] = \"CALLCODE\";\n  OpCode[\"Return\"] = \"RETURN\";\n  OpCode[\"DelegateCall\"] = \"DELEGATECALL\";\n  OpCode[\"StaticCall\"] = \"STATICCALL\";\n  OpCode[\"Revert\"] = \"REVERT\";\n  OpCode[\"Invalid\"] = \"INVALID\";\n  OpCode[\"SelfDestruct\"] = \"SELFDESTRUCT\";\n})(OpCode = exports.OpCode || (exports.OpCode = {}));\n\nvar AbiType;\n\n(function (AbiType) {\n  AbiType[\"Function\"] = \"function\";\n  AbiType[\"Constructor\"] = \"constructor\";\n  AbiType[\"Event\"] = \"event\";\n  AbiType[\"Fallback\"] = \"fallback\";\n})(AbiType = exports.AbiType || (exports.AbiType = {}));\n\nvar BlockParamLiteral;\n\n(function (BlockParamLiteral) {\n  BlockParamLiteral[\"Earliest\"] = \"earliest\";\n  BlockParamLiteral[\"Latest\"] = \"latest\";\n  BlockParamLiteral[\"Pending\"] = \"pending\";\n})(BlockParamLiteral = exports.BlockParamLiteral || (exports.BlockParamLiteral = {}));\n\nvar SolidityTypes;\n\n(function (SolidityTypes) {\n  SolidityTypes[\"Address\"] = \"address\";\n  SolidityTypes[\"Bool\"] = \"bool\";\n  SolidityTypes[\"Bytes\"] = \"bytes\";\n  SolidityTypes[\"Int\"] = \"int\";\n  SolidityTypes[\"String\"] = \"string\";\n  SolidityTypes[\"Tuple\"] = \"tuple\";\n  SolidityTypes[\"Uint256\"] = \"uint256\";\n  SolidityTypes[\"Uint8\"] = \"uint8\";\n  SolidityTypes[\"Uint\"] = \"uint\";\n})(SolidityTypes = exports.SolidityTypes || (exports.SolidityTypes = {}));","map":{"version":3,"sources":["../src/index.ts"],"names":[],"mappings":"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CA/Dc,CAgEd;;AACA,EAAA,MAAA,CAAA,OAAA,CAAA,GAAA,OAAA;AACA,EAAA,MAAA,CAAA,OAAA,CAAA,GAAA,OAAA;AACA,EAAA,MAAA,CAAA,OAAA,CAAA,GAAA,OAAA;AACA,EAAA,MAAA,CAAA,OAAA,CAAA,GAAA,OAAA;AACA,EAAA,MAAA,CAAA,OAAA,CAAA,GAAA,OAAA;AACA,EAAA,MAAA,CAAA,OAAA,CAAA,GAAA,OAAA;AACA,EAAA,MAAA,CAAA,OAAA,CAAA,GAAA,OAAA;AACA,EAAA,MAAA,CAAA,OAAA,CAAA,GAAA,OAAA;AACA,EAAA,MAAA,CAAA,OAAA,CAAA,GAAA,OAAA;AACA,EAAA,MAAA,CAAA,QAAA,CAAA,GAAA,QAAA;AACA,EAAA,MAAA,CAAA,QAAA,CAAA,GAAA,QAAA;AACA,EAAA,MAAA,CAAA,QAAA,CAAA,GAAA,QAAA;AACA,EAAA,MAAA,CAAA,QAAA,CAAA,GAAA,QAAA;AACA,EAAA,MAAA,CAAA,QAAA,CAAA,GAAA,QAAA;AACA,EAAA,MAAA,CAAA,QAAA,CAAA,GAAA,QAAA;AACA,EAAA,MAAA,CAAA,QAAA,CAAA,GAAA,QAAA;AACA,EAAA,MAAA,CAAA,QAAA,CAAA,GAAA,QAAA;AACA,EAAA,MAAA,CAAA,QAAA,CAAA,GAAA,QAAA;AACA,EAAA,MAAA,CAAA,QAAA,CAAA,GAAA,QAAA;AACA,EAAA,MAAA,CAAA,QAAA,CAAA,GAAA,QAAA;AACA,EAAA,MAAA,CAAA,QAAA,CAAA,GAAA,QAAA;AACA,EAAA,MAAA,CAAA,QAAA,CAAA,GAAA,QAAA;AACA,EAAA,MAAA,CAAA,QAAA,CAAA,GAAA,QAAA;AACA,EAAA,MAAA,CAAA,QAAA,CAAA,GAAA,QAAA;AACA,EAAA,MAAA,CAAA,QAAA,CAAA,GAAA,QAAA;AACA,EAAA,MAAA,CAAA,QAAA,CAAA,GAAA,QAAA;AACA,EAAA,MAAA,CAAA,QAAA,CAAA,GAAA,QAAA;AACA,EAAA,MAAA,CAAA,QAAA,CAAA,GAAA,QAAA;AACA,EAAA,MAAA,CAAA,QAAA,CAAA,GAAA,QAAA;AACA,EAAA,MAAA,CAAA,QAAA,CA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","sourceRoot":"","sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar OpCode;\r\n(function (OpCode) {\r\n    // 0s: Stop and Arithmetic Operations\r\n    OpCode[\"Stop\"] = \"STOP\";\r\n    OpCode[\"Add\"] = \"ADD\";\r\n    OpCode[\"Mul\"] = \"MUL\";\r\n    OpCode[\"Sub\"] = \"SUB\";\r\n    OpCode[\"Div\"] = \"DIV\";\r\n    OpCode[\"SDiv\"] = \"SDIV\";\r\n    OpCode[\"Mod\"] = \"MOD\";\r\n    OpCode[\"SMod\"] = \"SMOD\";\r\n    OpCode[\"AddMod\"] = \"ADDMOD\";\r\n    OpCode[\"MulMod\"] = \"MULMOD\";\r\n    OpCode[\"Exp\"] = \"EXP\";\r\n    OpCode[\"SignExtend\"] = \"SIGNEXTEND\";\r\n    // 10s: Comparison & Bitwise Logic Operations\r\n    OpCode[\"Lt\"] = \"LT\";\r\n    OpCode[\"Gt\"] = \"GT\";\r\n    OpCode[\"SLt\"] = \"SLT\";\r\n    OpCode[\"SGt\"] = \"SGT\";\r\n    OpCode[\"Eq\"] = \"EQ\";\r\n    OpCode[\"IsZero\"] = \"ISZERO\";\r\n    OpCode[\"And\"] = \"AND\";\r\n    OpCode[\"Or\"] = \"OR\";\r\n    OpCode[\"Xor\"] = \"XOR\";\r\n    OpCode[\"Not\"] = \"NOT\";\r\n    OpCode[\"Byte\"] = \"BYTE\";\r\n    // 20s: SHA3\r\n    OpCode[\"Sha3\"] = \"SHA3\";\r\n    // 30s: Environmental Information\r\n    OpCode[\"Address\"] = \"ADDRESS\";\r\n    OpCode[\"Balance\"] = \"BALANCE\";\r\n    OpCode[\"Origin\"] = \"ORIGIN\";\r\n    OpCode[\"Caller\"] = \"CALLER\";\r\n    OpCode[\"CallValue\"] = \"CALLVALUE\";\r\n    OpCode[\"CallDataLoad\"] = \"CALLDATALOAD\";\r\n    OpCode[\"CallDataSize\"] = \"CALLDATASIZE\";\r\n    OpCode[\"CallDataCopy\"] = \"CALLDATACOPY\";\r\n    OpCode[\"CodeSize\"] = \"CODESIZE\";\r\n    OpCode[\"CodeCopy\"] = \"CODECOPY\";\r\n    OpCode[\"GasPrice\"] = \"GASPRICE\";\r\n    OpCode[\"ExtCodeSize\"] = \"EXTCODESIZE\";\r\n    OpCode[\"ExtCodeCopy\"] = \"EXTCODECOPY\";\r\n    OpCode[\"ReturnDataSize\"] = \"RETURNDATASIZE\";\r\n    OpCode[\"ReturnDataCopy\"] = \"RETURNDATACOPY\";\r\n    // 40s: Block Information\r\n    OpCode[\"BlockHash\"] = \"BLOCKHASH\";\r\n    OpCode[\"Coinbase\"] = \"COINBASE\";\r\n    OpCode[\"TimeStamp\"] = \"TimeStamp\";\r\n    OpCode[\"Number\"] = \"NUMBER\";\r\n    OpCode[\"Difficulty\"] = \"DIFFICULTY\";\r\n    OpCode[\"Gaslimit\"] = \"GASLIMIT\";\r\n    // 50s: Stack, Memory, Storage and Flow Operations\r\n    OpCode[\"Pop\"] = \"POP\";\r\n    OpCode[\"MLoad\"] = \"MLOAD\";\r\n    OpCode[\"MStore\"] = \"MSTORE\";\r\n    OpCode[\"MStore8\"] = \"MSTORE8\";\r\n    OpCode[\"SLoad\"] = \"SLOAD\";\r\n    OpCode[\"SStore\"] = \"SSTORE\";\r\n    OpCode[\"Jump\"] = \"JUMP\";\r\n    OpCode[\"Jumpi\"] = \"JUMPI\";\r\n    OpCode[\"Pc\"] = \"PC\";\r\n    OpCode[\"MSize\"] = \"MSIZE\";\r\n    OpCode[\"Gas\"] = \"GAS\";\r\n    OpCode[\"JumpDest\"] = \"JUMPDEST\";\r\n    // 60s & 70s: Push Operations\r\n    OpCode[\"Push1\"] = \"PUSH1\";\r\n    OpCode[\"Push2\"] = \"PUSH2\";\r\n    OpCode[\"Push3\"] = \"PUSH3\";\r\n    OpCode[\"Push4\"] = \"PUSH4\";\r\n    OpCode[\"Push5\"] = \"PUSH5\";\r\n    OpCode[\"Push6\"] = \"PUSH6\";\r\n    OpCode[\"Push7\"] = \"PUSH7\";\r\n    OpCode[\"Push8\"] = \"PUSH8\";\r\n    OpCode[\"Push9\"] = \"PUSH9\";\r\n    OpCode[\"Push10\"] = \"PUSH10\";\r\n    OpCode[\"Push11\"] = \"PUSH11\";\r\n    OpCode[\"Push12\"] = \"PUSH12\";\r\n    OpCode[\"Push13\"] = \"PUSH13\";\r\n    OpCode[\"Push14\"] = \"PUSH14\";\r\n    OpCode[\"Push15\"] = \"PUSH15\";\r\n    OpCode[\"Push16\"] = \"PUSH16\";\r\n    OpCode[\"Push17\"] = \"PUSH17\";\r\n    OpCode[\"Push18\"] = \"PUSH18\";\r\n    OpCode[\"Push19\"] = \"PUSH19\";\r\n    OpCode[\"Push20\"] = \"PUSH20\";\r\n    OpCode[\"Push21\"] = \"PUSH21\";\r\n    OpCode[\"Push22\"] = \"PUSH22\";\r\n    OpCode[\"Push23\"] = \"PUSH23\";\r\n    OpCode[\"Push24\"] = \"PUSH24\";\r\n    OpCode[\"Push25\"] = \"PUSH25\";\r\n    OpCode[\"Push26\"] = \"PUSH26\";\r\n    OpCode[\"Push27\"] = \"PUSH27\";\r\n    OpCode[\"Push28\"] = \"PUSH28\";\r\n    OpCode[\"Push29\"] = \"PUSH29\";\r\n    OpCode[\"Push30\"] = \"PUSH30\";\r\n    OpCode[\"Push31\"] = \"PUSH31\";\r\n    OpCode[\"Push32\"] = \"PUSH32\";\r\n    // 80s: Duplication Operation\r\n    OpCode[\"Dup1\"] = \"DUP1\";\r\n    OpCode[\"Dup2\"] = \"DUP2\";\r\n    OpCode[\"Dup3\"] = \"DUP3\";\r\n    OpCode[\"Dup4\"] = \"DUP4\";\r\n    OpCode[\"Dup5\"] = \"DUP5\";\r\n    OpCode[\"Dup6\"] = \"DUP6\";\r\n    OpCode[\"Dup7\"] = \"DUP7\";\r\n    OpCode[\"Dup8\"] = \"DUP8\";\r\n    OpCode[\"Dup9\"] = \"DUP9\";\r\n    OpCode[\"Dup10\"] = \"DUP10\";\r\n    OpCode[\"Dup11\"] = \"DUP11\";\r\n    OpCode[\"Dup12\"] = \"DUP12\";\r\n    OpCode[\"Dup13\"] = \"DUP13\";\r\n    OpCode[\"Dup14\"] = \"DUP14\";\r\n    OpCode[\"Dup15\"] = \"DUP15\";\r\n    OpCode[\"Dup16\"] = \"DUP16\";\r\n    // 90s: Exchange Operation\r\n    OpCode[\"Swap1\"] = \"SWAP1\";\r\n    OpCode[\"Swap2\"] = \"SWAP2\";\r\n    OpCode[\"Swap3\"] = \"SWAP3\";\r\n    OpCode[\"Swap4\"] = \"SWAP4\";\r\n    OpCode[\"Swap5\"] = \"SWAP5\";\r\n    OpCode[\"Swap6\"] = \"SWAP6\";\r\n    OpCode[\"Swap7\"] = \"SWAP7\";\r\n    OpCode[\"Swap8\"] = \"SWAP8\";\r\n    OpCode[\"Swap9\"] = \"SWAP9\";\r\n    OpCode[\"Swap10\"] = \"SWAP10\";\r\n    OpCode[\"Swap11\"] = \"SWAP11\";\r\n    OpCode[\"Swap12\"] = \"SWAP12\";\r\n    OpCode[\"Swap13\"] = \"SWAP13\";\r\n    OpCode[\"Swap14\"] = \"SWAP14\";\r\n    OpCode[\"Swap15\"] = \"SWAP15\";\r\n    OpCode[\"Swap16\"] = \"SWAP16\";\r\n    // a0s: Logging Operations\r\n    OpCode[\"Log1\"] = \"LOG1\";\r\n    OpCode[\"Log2\"] = \"LOG2\";\r\n    OpCode[\"Log3\"] = \"LOG3\";\r\n    OpCode[\"Log4\"] = \"LOG4\";\r\n    // f0s: System operations\r\n    OpCode[\"Create\"] = \"CREATE\";\r\n    OpCode[\"Call\"] = \"CALL\";\r\n    OpCode[\"CallCode\"] = \"CALLCODE\";\r\n    OpCode[\"Return\"] = \"RETURN\";\r\n    OpCode[\"DelegateCall\"] = \"DELEGATECALL\";\r\n    OpCode[\"StaticCall\"] = \"STATICCALL\";\r\n    OpCode[\"Revert\"] = \"REVERT\";\r\n    OpCode[\"Invalid\"] = \"INVALID\";\r\n    OpCode[\"SelfDestruct\"] = \"SELFDESTRUCT\";\r\n})(OpCode = exports.OpCode || (exports.OpCode = {}));\r\nvar AbiType;\r\n(function (AbiType) {\r\n    AbiType[\"Function\"] = \"function\";\r\n    AbiType[\"Constructor\"] = \"constructor\";\r\n    AbiType[\"Event\"] = \"event\";\r\n    AbiType[\"Fallback\"] = \"fallback\";\r\n})(AbiType = exports.AbiType || (exports.AbiType = {}));\r\nvar BlockParamLiteral;\r\n(function (BlockParamLiteral) {\r\n    BlockParamLiteral[\"Earliest\"] = \"earliest\";\r\n    BlockParamLiteral[\"Latest\"] = \"latest\";\r\n    BlockParamLiteral[\"Pending\"] = \"pending\";\r\n})(BlockParamLiteral = exports.BlockParamLiteral || (exports.BlockParamLiteral = {}));\r\nvar SolidityTypes;\r\n(function (SolidityTypes) {\r\n    SolidityTypes[\"Address\"] = \"address\";\r\n    SolidityTypes[\"Bool\"] = \"bool\";\r\n    SolidityTypes[\"Bytes\"] = \"bytes\";\r\n    SolidityTypes[\"Int\"] = \"int\";\r\n    SolidityTypes[\"String\"] = \"string\";\r\n    SolidityTypes[\"Tuple\"] = \"tuple\";\r\n    SolidityTypes[\"Uint256\"] = \"uint256\";\r\n    SolidityTypes[\"Uint8\"] = \"uint8\";\r\n    SolidityTypes[\"Uint\"] = \"uint\";\r\n})(SolidityTypes = exports.SolidityTypes || (exports.SolidityTypes = {}));\r\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"script"}