{"ast":null,"code":"\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n  result[\"default\"] = mod;\n  return result;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst waterfall_1 = __importDefault(require(\"async/waterfall\"));\n\nconst ethUtil = __importStar(require(\"ethereumjs-util\"));\n\nconst xtend_1 = __importDefault(require(\"xtend\"));\n\nconst web3_provider_engine_1 = __importDefault(require(\"web3-provider-engine\"));\n\nconst hooked_wallet_1 = __importDefault(require(\"web3-provider-engine/subproviders/hooked-wallet\"));\n\nconst rpc_1 = __importDefault(require(\"web3-provider-engine/subproviders/rpc\"));\n\nconst subscriptions_1 = __importDefault(require(\"web3-provider-engine/subproviders/subscriptions\"));\n\nconst filters_1 = __importDefault(require(\"web3-provider-engine/subproviders/filters\"));\n\nconst pify_1 = __importDefault(require(\"pify\"));\n\nconst web3Utils = __importStar(require(\"web3-utils\"));\n\nconst AuthereumSDK_1 = __importDefault(require(\"./AuthereumSDK\"));\n\nconst utils_1 = require(\"./utils\");\n\nclass AuthereumProvider extends web3_provider_engine_1.default {\n  constructor(config) {\n    super();\n    this.isAuthereum = true;\n    this.lastSignTx = '';\n    this.lastSignTxTimeout = null;\n    this.lastTx = '';\n    this.lastTxTimeout = null;\n    this.lastMsg = '';\n    this.lastMsgTimeout = null;\n    this.lastTypedMsg = '';\n    this.lastTypedMsgTimeout = null;\n    let authereumClient = null;\n\n    if (config instanceof AuthereumSDK_1.default) {\n      authereumClient = config;\n      config = authereumClient.config;\n    }\n\n    this.config = config || {};\n    this.authereum = authereumClient || new AuthereumSDK_1.default(this.config);\n    this.initSubprovider();\n    this.isAuthereum = true;\n  }\n\n  initSubprovider() {\n    return __awaiter(this, void 0, void 0, function* () {\n      yield this.authereum._tilReady();\n      this.rpcUri = this.config.rpcUri || (yield this.authereum.getRpcUri());\n      const throttleTimeout = 2e3;\n      const walletSubprovider = new hooked_wallet_1.default({\n        getAccounts: cb => __awaiter(this, void 0, void 0, function* () {\n          const loggedIn = yield this.authereum.isAuthenticated();\n\n          if (!loggedIn) {\n            if (cb) {\n              cb(null, []);\n            }\n\n            return [];\n          }\n\n          const accountAddress = yield this.authereum.getAccountAddress();\n\n          if (!accountAddress) {\n            if (cb) {\n              cb(null, []);\n            }\n\n            return [];\n          }\n\n          if (cb) {\n            cb(null, [accountAddress]);\n          }\n\n          return [accountAddress];\n        }),\n        approveTransaction: (txParams, cb) => __awaiter(this, void 0, void 0, function* () {\n          if (cb) {\n            cb(null, true);\n          }\n\n          return true;\n        }),\n        approveMessage: (msgParams, cb) => __awaiter(this, void 0, void 0, function* () {\n          if (cb) {\n            cb(null, true);\n          }\n\n          return true;\n        }),\n        approveTypedMessage: (msgParams, cb) => __awaiter(this, void 0, void 0, function* () {\n          if (cb) {\n            cb(null, true);\n          }\n\n          return true;\n        }),\n        signMessage: (msgParams, cb) => __awaiter(this, void 0, void 0, function* () {\n          let currentMsg = msgParams;\n\n          try {\n            currentMsg = JSON.stringify(msgParams);\n          } catch (err) {// noop\n          } // Throttle if the tx is identical\n\n\n          clearTimeout(this.lastMsgTimeout);\n\n          if (this.lastMsg === currentMsg) {\n            return this._throttledSignMessage(msgParams, cb);\n          } // Check if this is the first one. If so, run it through the throttling function\n\n\n          const isFirst = !this.lastMsg;\n          this.lastMsg = currentMsg;\n          this.lastMsgTimeout = setTimeout(() => {\n            this.lastMsg = '';\n          }, throttleTimeout);\n\n          if (isFirst) {\n            return this._throttledSignMessage(msgParams, cb);\n          }\n\n          return this._signMessage(msgParams, cb);\n        }),\n        signTransaction: (txParams, cb) => __awaiter(this, void 0, void 0, function* () {\n          const t = Object.assign({}, txParams);\n          t.nonce = null; // Throttle if the tx is identical\n\n          const currentTx = JSON.stringify(t);\n          clearTimeout(this.lastSignTxTimeout);\n\n          if (this.lastSignTx === currentTx) {\n            return this._throttledSignTransaction(txParams, cb);\n          } // Check if this is the first one. If so, run it through the throttling function\n\n\n          const isFirst = !this.lastSignTx;\n          this.lastSignTx = currentTx;\n          this.lastSignTxTimeout = setTimeout(() => {\n            this.lastSignTx = '';\n          }, throttleTimeout);\n\n          if (isFirst) {\n            return this._throttledSignTransaction(txParams, cb);\n          }\n\n          return this._signTransaction(txParams, cb);\n        }),\n        processSignTransaction: (txParams, cb) => __awaiter(this, void 0, void 0, function* () {\n          const t = Object.assign({}, txParams);\n          t.nonce = null; // Throttle if the tx is identical\n\n          const currentTx = JSON.stringify(t);\n          clearTimeout(this.lastTxTimeout);\n\n          if (this.lastTx === currentTx) {\n            return this._throttledProcessSignTransaction(txParams, cb);\n          } // Check if this is the first one. If so, run it through the throttling function\n\n\n          const isFirst = !this.lastTx;\n          this.lastTx = currentTx;\n          this.lastTxTimeout = setTimeout(() => {\n            this.lastTx = '';\n          }, throttleTimeout);\n\n          if (isFirst) {\n            return this._throttledProcessSignTransaction(txParams, cb);\n          }\n\n          return walletSubprovider.finalizeTx(txParams, cb);\n        }),\n        processTransaction: (txParams, cb) => __awaiter(this, void 0, void 0, function* () {\n          const t = Object.assign({}, txParams);\n          t.nonce = null; // Throttle if the tx is identical\n\n          const currentTx = JSON.stringify(t);\n          clearTimeout(this.lastTxTimeout);\n\n          if (this.lastTx === currentTx) {\n            return this._throttledProcessTransaction(txParams, cb);\n          } // Check if this is the first one. If so, run it through the throttling function\n\n\n          const isFirst = !this.lastTx;\n          this.lastTx = currentTx;\n          this.lastTxTimeout = setTimeout(() => {\n            this.lastTx = '';\n          }, throttleTimeout);\n\n          if (isFirst) {\n            return this._throttledProcessTransaction(txParams, cb);\n          }\n\n          return this._processTransaction(txParams, cb);\n        }),\n        finalizeTx: (txParams, cb) => __awaiter(this, void 0, void 0, function* () {\n          try {\n            const signedTx = yield this._signTransaction(txParams);\n            const res = {\n              raw: signedTx,\n              tx: txParams\n            };\n\n            if (cb) {\n              cb(null, res);\n            }\n\n            return res;\n          } catch (err) {\n            if (cb) {\n              cb(err);\n            }\n\n            throw err;\n          }\n        }),\n        approvePersonalMessage: (msgParams, cb) => __awaiter(this, void 0, void 0, function* () {\n          if (cb) {\n            cb(null, true);\n          }\n\n          return true;\n        }),\n        signPersonalMessage: (msgParams, cb) => __awaiter(this, void 0, void 0, function* () {\n          msgParams.personal = true;\n          return walletSubprovider.signMessage(msgParams, cb);\n        }),\n        signTypedMessage: (msgParams, cb) => __awaiter(this, void 0, void 0, function* () {\n          let currentTypedMsg = msgParams;\n\n          try {\n            currentTypedMsg = JSON.stringify(msgParams);\n          } catch (err) {// noop\n          } // Throttle if the tx is identical\n\n\n          clearTimeout(this.lastTypedMsgTimeout);\n\n          if (this.lastTypedMsg === currentTypedMsg) {\n            return this._throttledSignTypedMessage(msgParams, cb);\n          } // Check if this is the first one. If so, run it through the throttling function\n\n\n          const isFirst = !this.lastTypedMsg;\n          this.lastTypedMsg = currentTypedMsg;\n          this.lastTypedMsgTimeout = setTimeout(() => {\n            this.lastTypedMsg = '';\n          }, throttleTimeout);\n\n          if (isFirst) {\n            return this._throttledSignTypedMessage(msgParams, cb);\n          }\n\n          return this._signTypedMessage(msgParams, cb);\n        })\n      });\n      this.walletSubprovider = walletSubprovider;\n\n      this._processTransaction = (txParams, cb) => __awaiter(this, void 0, void 0, function* () {\n        try {\n          const signedTransaction = yield pify_1.default(walletSubprovider.signTransaction.bind(walletSubprovider))(txParams);\n          const transactionHash = web3Utils.sha3(signedTransaction);\n\n          if (cb) {\n            cb(null, transactionHash);\n          }\n\n          return transactionHash;\n        } catch (err) {\n          if (cb) {\n            cb(err);\n            return;\n          }\n\n          throw err;\n        }\n      });\n\n      this._throttledProcessSignTransaction = utils_1.throttle((txParams, cb) => __awaiter(this, void 0, void 0, function* () {\n        return walletSubprovider.finalizeTx(txParams, cb);\n      }), throttleTimeout);\n      this._throttledProcessTransaction = utils_1.throttle((txParams, cb) => __awaiter(this, void 0, void 0, function* () {\n        return this._processTransaction(txParams, cb);\n      }), throttleTimeout);\n\n      this._signMessage = (msgParams, cb) => __awaiter(this, void 0, void 0, function* () {\n        try {\n          const signature = yield this.authereum.signMessage(msgParams.data, {\n            personal: msgParams.personal,\n            includeAuthSignature: true\n          });\n\n          if (cb) {\n            cb(null, signature);\n          }\n\n          return signature;\n        } catch (err) {\n          if (cb) {\n            cb(err);\n          }\n        }\n      });\n\n      this._throttledSignMessage = utils_1.throttle((msgParams, cb) => __awaiter(this, void 0, void 0, function* () {\n        return this._signMessage(msgParams, cb);\n      }), throttleTimeout);\n\n      this._signTypedMessage = (msgParams, cb) => __awaiter(this, void 0, void 0, function* () {\n        try {\n          const signature = yield this.authereum.signMessage(msgParams.data, {\n            includeAuthSignature: true\n          });\n\n          if (cb) {\n            cb(null, signature);\n          }\n\n          return signature;\n        } catch (err) {\n          if (cb) {\n            cb(err);\n          }\n        }\n      });\n\n      this._throttledSignTypedMessage = utils_1.throttle((msgParams, cb) => __awaiter(this, void 0, void 0, function* () {\n        return this._signTypedMessage(msgParams, cb);\n      }), throttleTimeout);\n\n      this._signTransaction = (txParams, cb) => __awaiter(this, void 0, void 0, function* () {\n        try {\n          const res = yield this.authereum.signTransaction(txParams);\n\n          if (!res) {\n            throw new Error('Error signing transaction');\n          }\n\n          if (cb) {\n            cb(null, res.signedTransactionData);\n          }\n\n          return res.signedTransactionData;\n        } catch (err) {\n          cb(err);\n        }\n      });\n\n      this._throttledSignTransaction = utils_1.throttle((txParams, cb) => __awaiter(this, void 0, void 0, function* () {\n        return this._signTransaction(txParams, cb);\n      }), throttleTimeout); // keep reference to original sendAsync\n\n      this._sendAsync = this.sendAsync;\n\n      this.sendAsync = (payload, callback) => __awaiter(this, void 0, void 0, function* () {\n        return new Promise((resolve, reject) => {\n          if (!callback) {\n            callback = (err, response) => {\n              if (err) {\n                reject(err);\n                return;\n              }\n\n              resolve(response);\n            };\n          }\n\n          this._sendAsync(payload, callback);\n        });\n      });\n\n      this.send = (payload, callback) => {\n        // Web3 >=1.0-beta.38 calls `send` with method and parameters\n        if (typeof payload === 'string') {\n          return new Promise((resolve, reject) => {\n            this.sendAsync({\n              jsonrpc: '2.0',\n              id: 1,\n              method: payload,\n              params: callback || []\n            }, (error, response) => {\n              if (error) {\n                reject(error);\n              } else {\n                resolve(response.result);\n              }\n            });\n          });\n        } // Web3 <=1.0 beta.37 uses `send` with a callback for async queries\n\n\n        if (callback) {\n          this.sendAsync(payload, callback);\n          return;\n        }\n\n        let result = null;\n\n        switch (payload.method) {\n          case 'eth_uninstallFilter':\n            this.sendAsync(payload, () => {// noop\n            });\n            result = true;\n            break;\n\n          default:\n            let message = `The Authereum Web3 object does not support synchronous methods like ${payload.method} without a callback parameter.`;\n            throw new Error(message);\n        }\n\n        return {\n          id: payload.id,\n          jsonrpc: payload.jsonrpc,\n          result: result\n        };\n      };\n\n      walletSubprovider.handleRequest = (payload, next, end) => {\n        const self = walletSubprovider;\n        self._parityRequests = {};\n        self._parityRequestCount = 0; // switch statement is not block scoped\n        // sp we cant repeat var declarations\n\n        let txParams;\n        let msgParams;\n        let extraParams;\n        let message;\n        let address;\n        const method = payload.method;\n\n        if (method && method.startsWith('stark_')) {\n          this.authereum.getStarkProvider().send(method, payload.params).then(result => end(null, result)).catch(err => end(err));\n          return;\n        }\n\n        switch (method) {\n          case 'eth_coinbase':\n            // process normally\n            self.getAccounts((err, accounts) => {\n              if (err) return end(err);\n              let result = accounts[0] || null;\n              end(null, result);\n            });\n            return;\n\n          case 'eth_accounts':\n            // process normally\n            self.getAccounts((err, accounts) => {\n              if (err) return end(err);\n              end(null, accounts);\n            });\n            return;\n\n          case 'eth_sendTransaction':\n            txParams = payload.params[0];\n            waterfall_1.default([cb => self.processTransaction(txParams, cb)], end);\n            return;\n\n          case 'eth_signTransaction':\n            txParams = payload.params[0];\n            waterfall_1.default([cb => self.processSignTransaction(txParams, cb)], end);\n            return;\n\n          case 'eth_sign':\n            // process normally\n            address = payload.params[0];\n            message = payload.params[1]; // non-standard \"extraParams\" to be appended to our \"msgParams\" obj\n            // good place for metadata\n\n            extraParams = payload.params[2] || {};\n            msgParams = xtend_1.default(extraParams, {\n              from: address,\n              data: message\n            });\n            waterfall_1.default([cb => self.processMessage(msgParams, cb)], end);\n            return;\n\n          case 'personal_sign':\n            return (() => {\n              // process normally\n              const first = payload.params[0];\n              const second = payload.params[1]; // We initially incorrectly ordered these parameters.\n              // To gracefully respect users who adopted this API early,\n              // we are currently gracefully recovering from the wrong param order\n              // when it is clearly identifiable.\n              //\n              // That means when the first param is definitely an address,\n              // and the second param is definitely not, but is hex.\n\n              if (resemblesData(second) && resemblesAddress(first)) {\n                let warning = `The eth_personalSign method requires params ordered `;\n                warning += `[message, address]. This was previously handled incorrectly, `;\n                warning += `and has been corrected automatically. `;\n                warning += `Please switch this param order for smooth behavior in the future.`;\n                console.warn(warning);\n                address = payload.params[0];\n                message = payload.params[1];\n              } else {\n                message = payload.params[0];\n                address = payload.params[1];\n              } // non-standard \"extraParams\" to be appended to our \"msgParams\" obj\n              // good place for metadata\n\n\n              extraParams = payload.params[2] || {};\n              msgParams = xtend_1.default(extraParams, {\n                from: address,\n                data: message\n              });\n              waterfall_1.default([cb => self.processPersonalMessage(msgParams, cb)], end);\n            })();\n\n          case 'eth_decryptMessage':\n            return (() => {\n              // process normally\n              const first = payload.params[0];\n              const second = payload.params[1]; // We initially incorrectly ordered these parameters.\n              // To gracefully respect users who adopted this API early,\n              // we are currently gracefully recovering from the wrong param order\n              // when it is clearly identifiable.\n              //\n              // That means when the first param is definitely an address,\n              // and the second param is definitely not, but is hex.\n\n              if (resemblesData(second) && resemblesAddress(first)) {\n                let warning = `The eth_decryptMessage method requires params ordered `;\n                warning += `[message, address]. This was previously handled incorrectly, `;\n                warning += `and has been corrected automatically. `;\n                warning += `Please switch this param order for smooth behavior in the future.`;\n                console.warn(warning);\n                address = payload.params[0];\n                message = payload.params[1];\n              } else {\n                message = payload.params[0];\n                address = payload.params[1];\n              } // non-standard \"extraParams\" to be appended to our \"msgParams\" obj\n              // good place for metadata\n\n\n              extraParams = payload.params[2] || {};\n              msgParams = xtend_1.default(extraParams, {\n                from: address,\n                data: message\n              });\n              waterfall_1.default([cb => self.validateDecryptMessage(msgParams, cb), cb => self.processDecryptMessage(msgParams, cb)], end);\n            })();\n\n          case 'encryption_public_key':\n            return (() => {\n              address = payload.params[0];\n              waterfall_1.default([cb => self.validateEncryptionPublicKey(address, cb), cb => self.processEncryptionPublicKey(address, cb)], end);\n            })();\n\n          case 'personal_ecRecover':\n            return (() => {\n              message = payload.params[0];\n              let signature = payload.params[1]; // non-standard \"extraParams\" to be appended to our \"msgParams\" obj\n              // good place for metadata\n\n              extraParams = payload.params[2] || {};\n              msgParams = xtend_1.default(extraParams, {\n                sig: signature,\n                data: message\n              });\n              self.recoverPersonalSignature(msgParams, end);\n            })();\n\n          case 'eth_signTypedData':\n            // process normally\n            message = payload.params[0];\n            address = payload.params[1];\n            extraParams = payload.params[2] || {};\n            msgParams = xtend_1.default(extraParams, {\n              from: address,\n              data: message\n            });\n            waterfall_1.default([cb => self.processTypedMessage(msgParams, cb)], end);\n            return;\n\n          case 'eth_signTypedData_v3':\n            // process normally\n            address = payload.params[0];\n            message = payload.params[1];\n            extraParams = payload.params[2] || {};\n            msgParams = xtend_1.default(extraParams, {\n              from: address,\n              data: message\n            });\n            waterfall_1.default([cb => self.processTypedMessage(msgParams, cb)], end);\n            return;\n\n          case 'parity_postTransaction':\n            txParams = payload.params[0];\n            self.parityPostTransaction(txParams, end);\n            return;\n\n          case 'parity_postSign':\n            address = payload.params[0];\n            message = payload.params[1];\n            self.parityPostSign(address, message, end);\n            return;\n\n          case 'parity_checkRequest':\n            return (() => {\n              const requestId = payload.params[0];\n              self.parityCheckRequest(requestId, end);\n            })();\n\n          case 'parity_defaultAccount':\n            self.getAccounts((err, accounts) => {\n              if (err) return end(err);\n              const account = accounts[0] || null;\n              end(null, account);\n            });\n            return;\n\n          default:\n            {\n              next();\n              return;\n            }\n        }\n      };\n\n      walletSubprovider.validatePersonalMessage = (msgParams, cb) => __awaiter(this, void 0, void 0, function* () {\n        if (cb) {\n          cb(null, true);\n        }\n\n        return true;\n      });\n\n      walletSubprovider.validateMessage = (msgParams, cb) => __awaiter(this, void 0, void 0, function* () {\n        if (cb) {\n          cb(null, true);\n        }\n\n        return true;\n      });\n\n      walletSubprovider.validateTypedMessage = (msgParams, cb) => __awaiter(this, void 0, void 0, function* () {\n        if (cb) {\n          cb(null, true);\n        }\n\n        return true;\n      });\n\n      this.addProvider(walletSubprovider);\n      this.rpcSubProvider = new rpc_1.default({\n        rpcUrl: this.rpcUri\n      });\n      this.addProvider(new subscriptions_1.default());\n      this.addProvider(new filters_1.default());\n      this.addProvider({\n        setEngine: _ => _,\n        handleRequest: (payload, next, end) => __awaiter(this, void 0, void 0, function* () {\n          this.rpcSubProvider.handleRequest(payload, next, end);\n        })\n      }); // network connectivity error\n\n      this.on('error', err => {\n        console.error(err.stack);\n      }); // start polling\n\n      this.start();\n\n      this._blockTracker.removeAllListeners();\n    });\n  }\n\n  getAccounts(cb) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const loggedIn = yield this.authereum.isAuthenticated();\n\n      if (!loggedIn) {\n        if (cb) {\n          cb(null, []);\n        }\n\n        return [];\n      }\n\n      const accountAddress = yield this.authereum.getAccountAddress();\n\n      if (!accountAddress) {\n        if (cb) {\n          cb(null, []);\n        }\n\n        return [];\n      }\n\n      if (cb) {\n        cb(null, [accountAddress]);\n      }\n\n      return [accountAddress];\n    });\n  }\n\n  isConnected() {\n    return this.authereum.isAuthenticatedSync();\n  }\n\n  enable() {\n    return __awaiter(this, void 0, void 0, function* () {\n      yield this.authereum.login();\n      const accountAddress = yield this.authereum.getAccountAddress();\n\n      if (accountAddress) {\n        return [accountAddress];\n      }\n\n      return [];\n    });\n  }\n\n  disable() {\n    return __awaiter(this, void 0, void 0, function* () {\n      return this.authereum.logout();\n    });\n  }\n\n  tilDomReady() {\n    return new Promise(resolve => {\n      if (document.readyState !== 'loading') {\n        resolve();\n      } else {\n        document.addEventListener('DOMContentLoaded', () => resolve());\n      }\n    });\n  }\n\n  sendTransaction(tx) {\n    return __awaiter(this, void 0, void 0, function* () {\n      return this.sendTransactionBatch([tx]);\n    });\n  }\n\n  sendTransactionBatch(txs) {\n    return __awaiter(this, void 0, void 0, function* () {\n      return this.authereum.sendTransactionBatch(txs);\n    });\n  }\n\n  estimateGasBatch(txs) {\n    return __awaiter(this, void 0, void 0, function* () {\n      return this.authereum.estimateGasBatch(txs);\n    });\n  }\n\n  sign(msgParams) {\n    return this._signMessage(msgParams);\n  }\n\n  signMessageWithAdminKey(message) {\n    return this.authereum.signMessageWithAdminKey(message);\n  }\n\n  signMessageWithSigningKey(...input) {\n    return this.authereum.signMessageWithSigningKey(...input);\n  }\n\n  showWidget(enabled = true) {\n    return this.authereum.showWidget(enabled);\n  }\n\n  widgetEnabled() {\n    return this.authereum.widgetEnabled();\n  }\n\n  getTransactionReceipt(txHash) {\n    return this.authereum.getTransactionReceipt(txHash);\n  }\n\n  waitForTransactionReceipt(txHash) {\n    return this.authereum.waitForTransactionReceipt(txHash);\n  }\n\n  isContractDeployed(accountAddress) {\n    return this.authereum.isContractDeployed(accountAddress);\n  }\n\n}\n\nexports.default = AuthereumProvider;\n\nfunction resemblesAddress(str) {\n  const fixed = ethUtil.addHexPrefix(str);\n  const isValid = ethUtil.isValidAddress(fixed);\n  return isValid;\n} // Returns true if resembles hex data\n// but definitely not a valid address.\n\n\nfunction resemblesData(str) {\n  const fixed = ethUtil.addHexPrefix(str);\n  const isValidAddress = ethUtil.isValidAddress(fixed);\n  return !isValidAddress && isValidHex(str);\n}\n\nfunction isValidHex(data) {\n  const isString = typeof data === 'string';\n  if (!isString) return false;\n  const isHexPrefixed = data.slice(0, 2) === '0x';\n  if (!isHexPrefixed) return false;\n  const nonPrefixed = data.slice(2);\n  const hexRegex = /^[0-9A-Fa-f]+$/g;\n  const isValid = nonPrefixed.match(hexRegex);\n  return isValid;\n}","map":{"version":3,"sources":["D:/proj/7color/node_modules/authereum/dist/AuthereumProvider.js"],"names":["__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","__importDefault","mod","__esModule","__importStar","k","Object","hasOwnProperty","call","defineProperty","exports","waterfall_1","require","ethUtil","xtend_1","web3_provider_engine_1","hooked_wallet_1","rpc_1","subscriptions_1","filters_1","pify_1","web3Utils","AuthereumSDK_1","utils_1","AuthereumProvider","default","constructor","config","isAuthereum","lastSignTx","lastSignTxTimeout","lastTx","lastTxTimeout","lastMsg","lastMsgTimeout","lastTypedMsg","lastTypedMsgTimeout","authereumClient","authereum","initSubprovider","_tilReady","rpcUri","getRpcUri","throttleTimeout","walletSubprovider","getAccounts","cb","loggedIn","isAuthenticated","accountAddress","getAccountAddress","approveTransaction","txParams","approveMessage","msgParams","approveTypedMessage","signMessage","currentMsg","JSON","stringify","err","clearTimeout","_throttledSignMessage","isFirst","setTimeout","_signMessage","signTransaction","t","assign","nonce","currentTx","_throttledSignTransaction","_signTransaction","processSignTransaction","_throttledProcessSignTransaction","finalizeTx","processTransaction","_throttledProcessTransaction","_processTransaction","signedTx","res","raw","tx","approvePersonalMessage","signPersonalMessage","personal","signTypedMessage","currentTypedMsg","_throttledSignTypedMessage","_signTypedMessage","signedTransaction","bind","transactionHash","sha3","throttle","signature","data","includeAuthSignature","Error","signedTransactionData","_sendAsync","sendAsync","payload","callback","response","send","jsonrpc","id","method","params","error","message","handleRequest","end","self","_parityRequests","_parityRequestCount","extraParams","address","startsWith","getStarkProvider","catch","accounts","from","processMessage","first","second","resemblesData","resemblesAddress","warning","console","warn","processPersonalMessage","validateDecryptMessage","processDecryptMessage","validateEncryptionPublicKey","processEncryptionPublicKey","sig","recoverPersonalSignature","processTypedMessage","parityPostTransaction","parityPostSign","requestId","parityCheckRequest","account","validatePersonalMessage","validateMessage","validateTypedMessage","addProvider","rpcSubProvider","rpcUrl","setEngine","_","on","stack","start","_blockTracker","removeAllListeners","isConnected","isAuthenticatedSync","enable","login","disable","logout","tilDomReady","document","readyState","addEventListener","sendTransaction","sendTransactionBatch","txs","estimateGasBatch","sign","signMessageWithAdminKey","signMessageWithSigningKey","input","showWidget","enabled","widgetEnabled","getTransactionReceipt","txHash","waitForTransactionReceipt","isContractDeployed","str","fixed","addHexPrefix","isValid","isValidAddress","isValidHex","isString","isHexPrefixed","slice","nonPrefixed","hexRegex","match"],"mappings":"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","sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result[\"default\"] = mod;\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst waterfall_1 = __importDefault(require(\"async/waterfall\"));\nconst ethUtil = __importStar(require(\"ethereumjs-util\"));\nconst xtend_1 = __importDefault(require(\"xtend\"));\nconst web3_provider_engine_1 = __importDefault(require(\"web3-provider-engine\"));\nconst hooked_wallet_1 = __importDefault(require(\"web3-provider-engine/subproviders/hooked-wallet\"));\nconst rpc_1 = __importDefault(require(\"web3-provider-engine/subproviders/rpc\"));\nconst subscriptions_1 = __importDefault(require(\"web3-provider-engine/subproviders/subscriptions\"));\nconst filters_1 = __importDefault(require(\"web3-provider-engine/subproviders/filters\"));\nconst pify_1 = __importDefault(require(\"pify\"));\nconst web3Utils = __importStar(require(\"web3-utils\"));\nconst AuthereumSDK_1 = __importDefault(require(\"./AuthereumSDK\"));\nconst utils_1 = require(\"./utils\");\nclass AuthereumProvider extends web3_provider_engine_1.default {\n    constructor(config) {\n        super();\n        this.isAuthereum = true;\n        this.lastSignTx = '';\n        this.lastSignTxTimeout = null;\n        this.lastTx = '';\n        this.lastTxTimeout = null;\n        this.lastMsg = '';\n        this.lastMsgTimeout = null;\n        this.lastTypedMsg = '';\n        this.lastTypedMsgTimeout = null;\n        let authereumClient = null;\n        if (config instanceof AuthereumSDK_1.default) {\n            authereumClient = config;\n            config = authereumClient.config;\n        }\n        this.config = config || {};\n        this.authereum = authereumClient || new AuthereumSDK_1.default(this.config);\n        this.initSubprovider();\n        this.isAuthereum = true;\n    }\n    initSubprovider() {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.authereum._tilReady();\n            this.rpcUri = this.config.rpcUri || (yield this.authereum.getRpcUri());\n            const throttleTimeout = 2e3;\n            const walletSubprovider = new hooked_wallet_1.default({\n                getAccounts: (cb) => __awaiter(this, void 0, void 0, function* () {\n                    const loggedIn = yield this.authereum.isAuthenticated();\n                    if (!loggedIn) {\n                        if (cb) {\n                            cb(null, []);\n                        }\n                        return [];\n                    }\n                    const accountAddress = yield this.authereum.getAccountAddress();\n                    if (!accountAddress) {\n                        if (cb) {\n                            cb(null, []);\n                        }\n                        return [];\n                    }\n                    if (cb) {\n                        cb(null, [accountAddress]);\n                    }\n                    return [accountAddress];\n                }),\n                approveTransaction: (txParams, cb) => __awaiter(this, void 0, void 0, function* () {\n                    if (cb) {\n                        cb(null, true);\n                    }\n                    return true;\n                }),\n                approveMessage: (msgParams, cb) => __awaiter(this, void 0, void 0, function* () {\n                    if (cb) {\n                        cb(null, true);\n                    }\n                    return true;\n                }),\n                approveTypedMessage: (msgParams, cb) => __awaiter(this, void 0, void 0, function* () {\n                    if (cb) {\n                        cb(null, true);\n                    }\n                    return true;\n                }),\n                signMessage: (msgParams, cb) => __awaiter(this, void 0, void 0, function* () {\n                    let currentMsg = msgParams;\n                    try {\n                        currentMsg = JSON.stringify(msgParams);\n                    }\n                    catch (err) {\n                        // noop\n                    }\n                    // Throttle if the tx is identical\n                    clearTimeout(this.lastMsgTimeout);\n                    if (this.lastMsg === currentMsg) {\n                        return this._throttledSignMessage(msgParams, cb);\n                    }\n                    // Check if this is the first one. If so, run it through the throttling function\n                    const isFirst = !this.lastMsg;\n                    this.lastMsg = currentMsg;\n                    this.lastMsgTimeout = setTimeout(() => {\n                        this.lastMsg = '';\n                    }, throttleTimeout);\n                    if (isFirst) {\n                        return this._throttledSignMessage(msgParams, cb);\n                    }\n                    return this._signMessage(msgParams, cb);\n                }),\n                signTransaction: (txParams, cb) => __awaiter(this, void 0, void 0, function* () {\n                    const t = Object.assign({}, txParams);\n                    t.nonce = null;\n                    // Throttle if the tx is identical\n                    const currentTx = JSON.stringify(t);\n                    clearTimeout(this.lastSignTxTimeout);\n                    if (this.lastSignTx === currentTx) {\n                        return this._throttledSignTransaction(txParams, cb);\n                    }\n                    // Check if this is the first one. If so, run it through the throttling function\n                    const isFirst = !this.lastSignTx;\n                    this.lastSignTx = currentTx;\n                    this.lastSignTxTimeout = setTimeout(() => {\n                        this.lastSignTx = '';\n                    }, throttleTimeout);\n                    if (isFirst) {\n                        return this._throttledSignTransaction(txParams, cb);\n                    }\n                    return this._signTransaction(txParams, cb);\n                }),\n                processSignTransaction: (txParams, cb) => __awaiter(this, void 0, void 0, function* () {\n                    const t = Object.assign({}, txParams);\n                    t.nonce = null;\n                    // Throttle if the tx is identical\n                    const currentTx = JSON.stringify(t);\n                    clearTimeout(this.lastTxTimeout);\n                    if (this.lastTx === currentTx) {\n                        return this._throttledProcessSignTransaction(txParams, cb);\n                    }\n                    // Check if this is the first one. If so, run it through the throttling function\n                    const isFirst = !this.lastTx;\n                    this.lastTx = currentTx;\n                    this.lastTxTimeout = setTimeout(() => {\n                        this.lastTx = '';\n                    }, throttleTimeout);\n                    if (isFirst) {\n                        return this._throttledProcessSignTransaction(txParams, cb);\n                    }\n                    return walletSubprovider.finalizeTx(txParams, cb);\n                }),\n                processTransaction: (txParams, cb) => __awaiter(this, void 0, void 0, function* () {\n                    const t = Object.assign({}, txParams);\n                    t.nonce = null;\n                    // Throttle if the tx is identical\n                    const currentTx = JSON.stringify(t);\n                    clearTimeout(this.lastTxTimeout);\n                    if (this.lastTx === currentTx) {\n                        return this._throttledProcessTransaction(txParams, cb);\n                    }\n                    // Check if this is the first one. If so, run it through the throttling function\n                    const isFirst = !this.lastTx;\n                    this.lastTx = currentTx;\n                    this.lastTxTimeout = setTimeout(() => {\n                        this.lastTx = '';\n                    }, throttleTimeout);\n                    if (isFirst) {\n                        return this._throttledProcessTransaction(txParams, cb);\n                    }\n                    return this._processTransaction(txParams, cb);\n                }),\n                finalizeTx: (txParams, cb) => __awaiter(this, void 0, void 0, function* () {\n                    try {\n                        const signedTx = yield this._signTransaction(txParams);\n                        const res = { raw: signedTx, tx: txParams };\n                        if (cb) {\n                            cb(null, res);\n                        }\n                        return res;\n                    }\n                    catch (err) {\n                        if (cb) {\n                            cb(err);\n                        }\n                        throw err;\n                    }\n                }),\n                approvePersonalMessage: (msgParams, cb) => __awaiter(this, void 0, void 0, function* () {\n                    if (cb) {\n                        cb(null, true);\n                    }\n                    return true;\n                }),\n                signPersonalMessage: (msgParams, cb) => __awaiter(this, void 0, void 0, function* () {\n                    msgParams.personal = true;\n                    return walletSubprovider.signMessage(msgParams, cb);\n                }),\n                signTypedMessage: (msgParams, cb) => __awaiter(this, void 0, void 0, function* () {\n                    let currentTypedMsg = msgParams;\n                    try {\n                        currentTypedMsg = JSON.stringify(msgParams);\n                    }\n                    catch (err) {\n                        // noop\n                    }\n                    // Throttle if the tx is identical\n                    clearTimeout(this.lastTypedMsgTimeout);\n                    if (this.lastTypedMsg === currentTypedMsg) {\n                        return this._throttledSignTypedMessage(msgParams, cb);\n                    }\n                    // Check if this is the first one. If so, run it through the throttling function\n                    const isFirst = !this.lastTypedMsg;\n                    this.lastTypedMsg = currentTypedMsg;\n                    this.lastTypedMsgTimeout = setTimeout(() => {\n                        this.lastTypedMsg = '';\n                    }, throttleTimeout);\n                    if (isFirst) {\n                        return this._throttledSignTypedMessage(msgParams, cb);\n                    }\n                    return this._signTypedMessage(msgParams, cb);\n                })\n            });\n            this.walletSubprovider = walletSubprovider;\n            this._processTransaction = (txParams, cb) => __awaiter(this, void 0, void 0, function* () {\n                try {\n                    const signedTransaction = yield pify_1.default(walletSubprovider.signTransaction.bind(walletSubprovider))(txParams);\n                    const transactionHash = web3Utils.sha3(signedTransaction);\n                    if (cb) {\n                        cb(null, transactionHash);\n                    }\n                    return transactionHash;\n                }\n                catch (err) {\n                    if (cb) {\n                        cb(err);\n                        return;\n                    }\n                    throw err;\n                }\n            });\n            this._throttledProcessSignTransaction = utils_1.throttle((txParams, cb) => __awaiter(this, void 0, void 0, function* () {\n                return walletSubprovider.finalizeTx(txParams, cb);\n            }), throttleTimeout);\n            this._throttledProcessTransaction = utils_1.throttle((txParams, cb) => __awaiter(this, void 0, void 0, function* () {\n                return this._processTransaction(txParams, cb);\n            }), throttleTimeout);\n            this._signMessage = (msgParams, cb) => __awaiter(this, void 0, void 0, function* () {\n                try {\n                    const signature = yield this.authereum.signMessage(msgParams.data, {\n                        personal: msgParams.personal,\n                        includeAuthSignature: true\n                    });\n                    if (cb) {\n                        cb(null, signature);\n                    }\n                    return signature;\n                }\n                catch (err) {\n                    if (cb) {\n                        cb(err);\n                    }\n                }\n            });\n            this._throttledSignMessage = utils_1.throttle((msgParams, cb) => __awaiter(this, void 0, void 0, function* () {\n                return this._signMessage(msgParams, cb);\n            }), throttleTimeout);\n            this._signTypedMessage = (msgParams, cb) => __awaiter(this, void 0, void 0, function* () {\n                try {\n                    const signature = yield this.authereum.signMessage(msgParams.data, {\n                        includeAuthSignature: true\n                    });\n                    if (cb) {\n                        cb(null, signature);\n                    }\n                    return signature;\n                }\n                catch (err) {\n                    if (cb) {\n                        cb(err);\n                    }\n                }\n            });\n            this._throttledSignTypedMessage = utils_1.throttle((msgParams, cb) => __awaiter(this, void 0, void 0, function* () {\n                return this._signTypedMessage(msgParams, cb);\n            }), throttleTimeout);\n            this._signTransaction = (txParams, cb) => __awaiter(this, void 0, void 0, function* () {\n                try {\n                    const res = yield this.authereum.signTransaction(txParams);\n                    if (!res) {\n                        throw new Error('Error signing transaction');\n                    }\n                    if (cb) {\n                        cb(null, res.signedTransactionData);\n                    }\n                    return res.signedTransactionData;\n                }\n                catch (err) {\n                    cb(err);\n                }\n            });\n            this._throttledSignTransaction = utils_1.throttle((txParams, cb) => __awaiter(this, void 0, void 0, function* () {\n                return this._signTransaction(txParams, cb);\n            }), throttleTimeout);\n            // keep reference to original sendAsync\n            this._sendAsync = this.sendAsync;\n            this.sendAsync = (payload, callback) => __awaiter(this, void 0, void 0, function* () {\n                return new Promise((resolve, reject) => {\n                    if (!callback) {\n                        callback = (err, response) => {\n                            if (err) {\n                                reject(err);\n                                return;\n                            }\n                            resolve(response);\n                        };\n                    }\n                    this._sendAsync(payload, callback);\n                });\n            });\n            this.send = (payload, callback) => {\n                // Web3 >=1.0-beta.38 calls `send` with method and parameters\n                if (typeof payload === 'string') {\n                    return new Promise((resolve, reject) => {\n                        this.sendAsync({\n                            jsonrpc: '2.0',\n                            id: 1,\n                            method: payload,\n                            params: callback || []\n                        }, (error, response) => {\n                            if (error) {\n                                reject(error);\n                            }\n                            else {\n                                resolve(response.result);\n                            }\n                        });\n                    });\n                }\n                // Web3 <=1.0 beta.37 uses `send` with a callback for async queries\n                if (callback) {\n                    this.sendAsync(payload, callback);\n                    return;\n                }\n                let result = null;\n                switch (payload.method) {\n                    case 'eth_uninstallFilter':\n                        this.sendAsync(payload, () => {\n                            // noop\n                        });\n                        result = true;\n                        break;\n                    default:\n                        let message = `The Authereum Web3 object does not support synchronous methods like ${payload.method} without a callback parameter.`;\n                        throw new Error(message);\n                }\n                return {\n                    id: payload.id,\n                    jsonrpc: payload.jsonrpc,\n                    result: result\n                };\n            };\n            walletSubprovider.handleRequest = (payload, next, end) => {\n                const self = walletSubprovider;\n                self._parityRequests = {};\n                self._parityRequestCount = 0;\n                // switch statement is not block scoped\n                // sp we cant repeat var declarations\n                let txParams;\n                let msgParams;\n                let extraParams;\n                let message;\n                let address;\n                const method = payload.method;\n                if (method && method.startsWith('stark_')) {\n                    this.authereum.getStarkProvider().send(method, payload.params)\n                        .then(result => end(null, result))\n                        .catch(err => end(err));\n                    return;\n                }\n                switch (method) {\n                    case 'eth_coinbase':\n                        // process normally\n                        self.getAccounts((err, accounts) => {\n                            if (err)\n                                return end(err);\n                            let result = accounts[0] || null;\n                            end(null, result);\n                        });\n                        return;\n                    case 'eth_accounts':\n                        // process normally\n                        self.getAccounts((err, accounts) => {\n                            if (err)\n                                return end(err);\n                            end(null, accounts);\n                        });\n                        return;\n                    case 'eth_sendTransaction':\n                        txParams = payload.params[0];\n                        waterfall_1.default([\n                            (cb) => self.processTransaction(txParams, cb)\n                        ], end);\n                        return;\n                    case 'eth_signTransaction':\n                        txParams = payload.params[0];\n                        waterfall_1.default([\n                            (cb) => self.processSignTransaction(txParams, cb)\n                        ], end);\n                        return;\n                    case 'eth_sign':\n                        // process normally\n                        address = payload.params[0];\n                        message = payload.params[1];\n                        // non-standard \"extraParams\" to be appended to our \"msgParams\" obj\n                        // good place for metadata\n                        extraParams = payload.params[2] || {};\n                        msgParams = xtend_1.default(extraParams, {\n                            from: address,\n                            data: message\n                        });\n                        waterfall_1.default([\n                            (cb) => self.processMessage(msgParams, cb)\n                        ], end);\n                        return;\n                    case 'personal_sign':\n                        return (() => {\n                            // process normally\n                            const first = payload.params[0];\n                            const second = payload.params[1];\n                            // We initially incorrectly ordered these parameters.\n                            // To gracefully respect users who adopted this API early,\n                            // we are currently gracefully recovering from the wrong param order\n                            // when it is clearly identifiable.\n                            //\n                            // That means when the first param is definitely an address,\n                            // and the second param is definitely not, but is hex.\n                            if (resemblesData(second) && resemblesAddress(first)) {\n                                let warning = `The eth_personalSign method requires params ordered `;\n                                warning += `[message, address]. This was previously handled incorrectly, `;\n                                warning += `and has been corrected automatically. `;\n                                warning += `Please switch this param order for smooth behavior in the future.`;\n                                console.warn(warning);\n                                address = payload.params[0];\n                                message = payload.params[1];\n                            }\n                            else {\n                                message = payload.params[0];\n                                address = payload.params[1];\n                            }\n                            // non-standard \"extraParams\" to be appended to our \"msgParams\" obj\n                            // good place for metadata\n                            extraParams = payload.params[2] || {};\n                            msgParams = xtend_1.default(extraParams, {\n                                from: address,\n                                data: message\n                            });\n                            waterfall_1.default([\n                                (cb) => self.processPersonalMessage(msgParams, cb)\n                            ], end);\n                        })();\n                    case 'eth_decryptMessage':\n                        return (() => {\n                            // process normally\n                            const first = payload.params[0];\n                            const second = payload.params[1];\n                            // We initially incorrectly ordered these parameters.\n                            // To gracefully respect users who adopted this API early,\n                            // we are currently gracefully recovering from the wrong param order\n                            // when it is clearly identifiable.\n                            //\n                            // That means when the first param is definitely an address,\n                            // and the second param is definitely not, but is hex.\n                            if (resemblesData(second) && resemblesAddress(first)) {\n                                let warning = `The eth_decryptMessage method requires params ordered `;\n                                warning += `[message, address]. This was previously handled incorrectly, `;\n                                warning += `and has been corrected automatically. `;\n                                warning += `Please switch this param order for smooth behavior in the future.`;\n                                console.warn(warning);\n                                address = payload.params[0];\n                                message = payload.params[1];\n                            }\n                            else {\n                                message = payload.params[0];\n                                address = payload.params[1];\n                            }\n                            // non-standard \"extraParams\" to be appended to our \"msgParams\" obj\n                            // good place for metadata\n                            extraParams = payload.params[2] || {};\n                            msgParams = xtend_1.default(extraParams, {\n                                from: address,\n                                data: message\n                            });\n                            waterfall_1.default([\n                                (cb) => self.validateDecryptMessage(msgParams, cb),\n                                (cb) => self.processDecryptMessage(msgParams, cb)\n                            ], end);\n                        })();\n                    case 'encryption_public_key':\n                        return (() => {\n                            address = payload.params[0];\n                            waterfall_1.default([\n                                (cb) => self.validateEncryptionPublicKey(address, cb),\n                                (cb) => self.processEncryptionPublicKey(address, cb)\n                            ], end);\n                        })();\n                    case 'personal_ecRecover':\n                        return (() => {\n                            message = payload.params[0];\n                            let signature = payload.params[1];\n                            // non-standard \"extraParams\" to be appended to our \"msgParams\" obj\n                            // good place for metadata\n                            extraParams = payload.params[2] || {};\n                            msgParams = xtend_1.default(extraParams, {\n                                sig: signature,\n                                data: message\n                            });\n                            self.recoverPersonalSignature(msgParams, end);\n                        })();\n                    case 'eth_signTypedData':\n                        // process normally\n                        message = payload.params[0];\n                        address = payload.params[1];\n                        extraParams = payload.params[2] || {};\n                        msgParams = xtend_1.default(extraParams, {\n                            from: address,\n                            data: message\n                        });\n                        waterfall_1.default([\n                            (cb) => self.processTypedMessage(msgParams, cb)\n                        ], end);\n                        return;\n                    case 'eth_signTypedData_v3':\n                        // process normally\n                        address = payload.params[0];\n                        message = payload.params[1];\n                        extraParams = payload.params[2] || {};\n                        msgParams = xtend_1.default(extraParams, {\n                            from: address,\n                            data: message\n                        });\n                        waterfall_1.default([\n                            (cb) => self.processTypedMessage(msgParams, cb)\n                        ], end);\n                        return;\n                    case 'parity_postTransaction':\n                        txParams = payload.params[0];\n                        self.parityPostTransaction(txParams, end);\n                        return;\n                    case 'parity_postSign':\n                        address = payload.params[0];\n                        message = payload.params[1];\n                        self.parityPostSign(address, message, end);\n                        return;\n                    case 'parity_checkRequest':\n                        return (() => {\n                            const requestId = payload.params[0];\n                            self.parityCheckRequest(requestId, end);\n                        })();\n                    case 'parity_defaultAccount':\n                        self.getAccounts((err, accounts) => {\n                            if (err)\n                                return end(err);\n                            const account = accounts[0] || null;\n                            end(null, account);\n                        });\n                        return;\n                    default: {\n                        next();\n                        return;\n                    }\n                }\n            };\n            walletSubprovider.validatePersonalMessage = (msgParams, cb) => __awaiter(this, void 0, void 0, function* () {\n                if (cb) {\n                    cb(null, true);\n                }\n                return true;\n            });\n            walletSubprovider.validateMessage = (msgParams, cb) => __awaiter(this, void 0, void 0, function* () {\n                if (cb) {\n                    cb(null, true);\n                }\n                return true;\n            });\n            walletSubprovider.validateTypedMessage = (msgParams, cb) => __awaiter(this, void 0, void 0, function* () {\n                if (cb) {\n                    cb(null, true);\n                }\n                return true;\n            });\n            this.addProvider(walletSubprovider);\n            this.rpcSubProvider = new rpc_1.default({\n                rpcUrl: this.rpcUri\n            });\n            this.addProvider(new subscriptions_1.default());\n            this.addProvider(new filters_1.default());\n            this.addProvider({\n                setEngine: _ => _,\n                handleRequest: (payload, next, end) => __awaiter(this, void 0, void 0, function* () {\n                    this.rpcSubProvider.handleRequest(payload, next, end);\n                })\n            });\n            // network connectivity error\n            this.on('error', (err) => {\n                console.error(err.stack);\n            });\n            // start polling\n            this.start();\n            this._blockTracker.removeAllListeners();\n        });\n    }\n    getAccounts(cb) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const loggedIn = yield this.authereum.isAuthenticated();\n            if (!loggedIn) {\n                if (cb) {\n                    cb(null, []);\n                }\n                return [];\n            }\n            const accountAddress = yield this.authereum.getAccountAddress();\n            if (!accountAddress) {\n                if (cb) {\n                    cb(null, []);\n                }\n                return [];\n            }\n            if (cb) {\n                cb(null, [accountAddress]);\n            }\n            return [accountAddress];\n        });\n    }\n    isConnected() {\n        return this.authereum.isAuthenticatedSync();\n    }\n    enable() {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.authereum.login();\n            const accountAddress = yield this.authereum.getAccountAddress();\n            if (accountAddress) {\n                return [accountAddress];\n            }\n            return [];\n        });\n    }\n    disable() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.authereum.logout();\n        });\n    }\n    tilDomReady() {\n        return new Promise((resolve) => {\n            if (document.readyState !== 'loading') {\n                resolve();\n            }\n            else {\n                document.addEventListener('DOMContentLoaded', () => resolve());\n            }\n        });\n    }\n    sendTransaction(tx) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.sendTransactionBatch([tx]);\n        });\n    }\n    sendTransactionBatch(txs) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.authereum.sendTransactionBatch(txs);\n        });\n    }\n    estimateGasBatch(txs) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.authereum.estimateGasBatch(txs);\n        });\n    }\n    sign(msgParams) {\n        return this._signMessage(msgParams);\n    }\n    signMessageWithAdminKey(message) {\n        return this.authereum.signMessageWithAdminKey(message);\n    }\n    signMessageWithSigningKey(...input) {\n        return this.authereum.signMessageWithSigningKey(...input);\n    }\n    showWidget(enabled = true) {\n        return this.authereum.showWidget(enabled);\n    }\n    widgetEnabled() {\n        return this.authereum.widgetEnabled();\n    }\n    getTransactionReceipt(txHash) {\n        return this.authereum.getTransactionReceipt(txHash);\n    }\n    waitForTransactionReceipt(txHash) {\n        return this.authereum.waitForTransactionReceipt(txHash);\n    }\n    isContractDeployed(accountAddress) {\n        return this.authereum.isContractDeployed(accountAddress);\n    }\n}\nexports.default = AuthereumProvider;\nfunction resemblesAddress(str) {\n    const fixed = ethUtil.addHexPrefix(str);\n    const isValid = ethUtil.isValidAddress(fixed);\n    return isValid;\n}\n// Returns true if resembles hex data\n// but definitely not a valid address.\nfunction resemblesData(str) {\n    const fixed = ethUtil.addHexPrefix(str);\n    const isValidAddress = ethUtil.isValidAddress(fixed);\n    return !isValidAddress && isValidHex(str);\n}\nfunction isValidHex(data) {\n    const isString = typeof data === 'string';\n    if (!isString)\n        return false;\n    const isHexPrefixed = data.slice(0, 2) === '0x';\n    if (!isHexPrefixed)\n        return false;\n    const nonPrefixed = data.slice(2);\n    const hexRegex = /^[0-9A-Fa-f]+$/g;\n    const isValid = nonPrefixed.match(hexRegex);\n    return isValid;\n}\n"]},"metadata":{},"sourceType":"script"}