{"ast":null,"code":"'use strict';\n\nfunction constructFilter(filterName, query) {\n  function Filter(options) {\n    var self = this;\n    self.filterId = null;\n    self.options = Object.assign({\n      delay: 300,\n      decoder: function decodeData(data) {\n        return data;\n      },\n      defaultFilterObject: {}\n    }, options || {});\n    self.watchers = {};\n    self.interval = setInterval(function () {\n      if (self.filterId !== null && Object.keys(self.watchers).length > 0) {\n        query.getFilterChanges(self.filterId, function (changeError, changeResult) {\n          var decodedChangeResults = [];\n          var decodingError = null; // eslint-disable-line\n\n          if (!changeError) {\n            try {\n              changeResult.forEach(function (log, logIndex) {\n                decodedChangeResults[logIndex] = changeResult[logIndex];\n                decodedChangeResults[logIndex].data = self.options.decoder(decodedChangeResults[logIndex].data);\n              });\n            } catch (decodingErrorMesage) {\n              decodingError = new Error('[ethjs-filter] while decoding filter change event data from RPC \\'' + JSON.stringify(decodedChangeResults) + '\\': ' + decodingErrorMesage);\n            }\n          }\n\n          Object.keys(self.watchers).forEach(function (id) {\n            var watcher = self.watchers[id];\n\n            if (watcher.stop === true) {\n              delete self.watchers[id];\n              return;\n            }\n\n            if (decodingError) {\n              watcher.reject(decodingError);\n              watcher.callback(decodingError, null);\n            } else {\n              if (changeError) {\n                watcher.reject(changeError);\n              } else if (Array.isArray(decodedChangeResults) && changeResult.length > 0) {\n                watcher.resolve(decodedChangeResults);\n              }\n\n              watcher.callback(changeError, decodedChangeResults);\n            }\n          });\n        });\n      }\n    }, self.options.delay);\n  }\n\n  Filter.prototype.at = function atFilter(filterId) {\n    var self = this;\n    self.filterId = filterId;\n  };\n\n  Filter.prototype.watch = function watchFilter(watchCallbackInput) {\n    var callback = watchCallbackInput || function () {}; // eslint-disable-line\n\n\n    var self = this;\n    var id = Math.random().toString(36).substring(7);\n    var output = new Promise(function (resolve, reject) {\n      self.watchers[id] = {\n        resolve: resolve,\n        reject: reject,\n        callback: callback,\n        stop: false\n      };\n    });\n\n    output.stopWatching = function stopWatching() {\n      self.watchers[id].stop = true;\n    };\n\n    return output;\n  };\n\n  Filter.prototype.uninstall = function uninstallFilter(cb) {\n    var self = this;\n\n    var callback = cb || function emptyCallback() {};\n\n    self.watchers = Object.assign({});\n    clearInterval(self.interval);\n    return new Promise(function (resolve, reject) {\n      query.uninstallFilter(self.filterId, function (uninstallError, uninstallResilt) {\n        if (uninstallError) {\n          reject(uninstallError);\n        } else {\n          resolve(uninstallResilt);\n        }\n\n        callback(uninstallError, uninstallResilt);\n      });\n    });\n  };\n\n  Filter.prototype['new'] = function newFilter() {\n    var callback = function callback() {}; // eslint-disable-line\n\n\n    var self = this;\n    var filterInputs = [];\n    var args = [].slice.call(arguments); // eslint-disable-line\n    // pop callback if provided\n\n    if (typeof args[args.length - 1] === 'function') {\n      callback = args.pop();\n    } // if a param object was presented, push that into the inputs\n\n\n    if (filterName === 'Filter') {\n      filterInputs.push(Object.assign(self.options.defaultFilterObject, args[args.length - 1] || {}));\n    }\n\n    return new Promise(function (resolve, reject) {\n      // add complex callback\n      filterInputs.push(function (setupError, filterId) {\n        if (!setupError) {\n          self.filterId = filterId;\n          resolve(filterId);\n        } else {\n          reject(setupError);\n        }\n\n        callback(setupError, filterId);\n      }); // apply filter, call new.. filter method\n\n      query['new' + filterName].apply(query, filterInputs);\n    });\n  };\n\n  return Filter;\n}\n/**\r\n * EthFilter constructor, intakes a query, helps manage filter event polling\r\n *\r\n * @method EthFilter\r\n * @param {Object} query the `ethjs-query` or `eth-query` object\r\n * @returns {Object} output an EthFilter instance\r\n * @throws error if new is not used\r\n */\n\n\nfunction EthFilter(query) {\n  var self = this;\n\n  if (!(self instanceof EthFilter)) {\n    throw new Error('the EthFilter object must be instantiated with `new` flag.. (e.g. `const filters = new EthFilter(query);`)');\n  }\n\n  if (typeof query !== 'object') {\n    throw new Error('the EthFilter object must be instantiated with an EthQuery instance (e.g. `const filters = new EthFilter(new EthQuery(provider));`). See github.com/ethjs/ethjs-query for more details..');\n  }\n\n  self.Filter = constructFilter('Filter', query);\n  self.BlockFilter = constructFilter('BlockFilter', query);\n  self.PendingTransactionFilter = constructFilter('PendingTransactionFilter', query);\n} // export EthFilter\n\n\nmodule.exports = EthFilter;","map":{"version":3,"sources":["F:/7color/node_modules/ethjs-filter/lib/index.js"],"names":["constructFilter","filterName","query","Filter","options","self","filterId","Object","assign","delay","decoder","decodeData","data","defaultFilterObject","watchers","interval","setInterval","keys","length","getFilterChanges","changeError","changeResult","decodedChangeResults","decodingError","forEach","log","logIndex","decodingErrorMesage","Error","JSON","stringify","id","watcher","stop","reject","callback","Array","isArray","resolve","prototype","at","atFilter","watch","watchFilter","watchCallbackInput","Math","random","toString","substring","output","Promise","stopWatching","uninstall","uninstallFilter","cb","emptyCallback","clearInterval","uninstallError","uninstallResilt","newFilter","filterInputs","args","slice","call","arguments","pop","push","setupError","apply","EthFilter","BlockFilter","PendingTransactionFilter","module","exports"],"mappings":"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","sourcesContent":["'use strict';\r\n\r\nfunction constructFilter(filterName, query) {\r\n  function Filter(options) {\r\n    var self = this;\r\n    self.filterId = null;\r\n    self.options = Object.assign({\r\n      delay: 300,\r\n      decoder: function decodeData(data) {\r\n        return data;\r\n      },\r\n      defaultFilterObject: {}\r\n    }, options || {});\r\n\r\n    self.watchers = {};\r\n    self.interval = setInterval(function () {\r\n      if (self.filterId !== null && Object.keys(self.watchers).length > 0) {\r\n        query.getFilterChanges(self.filterId, function (changeError, changeResult) {\r\n          var decodedChangeResults = [];\r\n          var decodingError = null; // eslint-disable-line\r\n\r\n          if (!changeError) {\r\n            try {\r\n              changeResult.forEach(function (log, logIndex) {\r\n                decodedChangeResults[logIndex] = changeResult[logIndex];\r\n                decodedChangeResults[logIndex].data = self.options.decoder(decodedChangeResults[logIndex].data);\r\n              });\r\n            } catch (decodingErrorMesage) {\r\n              decodingError = new Error('[ethjs-filter] while decoding filter change event data from RPC \\'' + JSON.stringify(decodedChangeResults) + '\\': ' + decodingErrorMesage);\r\n            }\r\n          }\r\n\r\n          Object.keys(self.watchers).forEach(function (id) {\r\n            var watcher = self.watchers[id];\r\n            if (watcher.stop === true) {\r\n              delete self.watchers[id];\r\n              return;\r\n            }\r\n\r\n            if (decodingError) {\r\n              watcher.reject(decodingError);\r\n              watcher.callback(decodingError, null);\r\n            } else {\r\n              if (changeError) {\r\n                watcher.reject(changeError);\r\n              } else if (Array.isArray(decodedChangeResults) && changeResult.length > 0) {\r\n                watcher.resolve(decodedChangeResults);\r\n              }\r\n\r\n              watcher.callback(changeError, decodedChangeResults);\r\n            }\r\n          });\r\n        });\r\n      }\r\n    }, self.options.delay);\r\n  }\r\n\r\n  Filter.prototype.at = function atFilter(filterId) {\r\n    var self = this;\r\n    self.filterId = filterId;\r\n  };\r\n\r\n  Filter.prototype.watch = function watchFilter(watchCallbackInput) {\r\n    var callback = watchCallbackInput || function () {}; // eslint-disable-line\r\n    var self = this;\r\n    var id = Math.random().toString(36).substring(7);\r\n    var output = new Promise(function (resolve, reject) {\r\n      self.watchers[id] = { resolve: resolve, reject: reject, callback: callback, stop: false };\r\n    });\r\n\r\n    output.stopWatching = function stopWatching() {\r\n      self.watchers[id].stop = true;\r\n    };\r\n\r\n    return output;\r\n  };\r\n\r\n  Filter.prototype.uninstall = function uninstallFilter(cb) {\r\n    var self = this;\r\n    var callback = cb || function emptyCallback() {};\r\n    self.watchers = Object.assign({});\r\n    clearInterval(self.interval);\r\n\r\n    return new Promise(function (resolve, reject) {\r\n      query.uninstallFilter(self.filterId, function (uninstallError, uninstallResilt) {\r\n        if (uninstallError) {\r\n          reject(uninstallError);\r\n        } else {\r\n          resolve(uninstallResilt);\r\n        }\r\n\r\n        callback(uninstallError, uninstallResilt);\r\n      });\r\n    });\r\n  };\r\n\r\n  Filter.prototype['new'] = function newFilter() {\r\n    var callback = function callback() {}; // eslint-disable-line\r\n    var self = this;\r\n    var filterInputs = [];\r\n    var args = [].slice.call(arguments); // eslint-disable-line\r\n    // pop callback if provided\r\n    if (typeof args[args.length - 1] === 'function') {\r\n      callback = args.pop();\r\n    }\r\n\r\n    // if a param object was presented, push that into the inputs\r\n    if (filterName === 'Filter') {\r\n      filterInputs.push(Object.assign(self.options.defaultFilterObject, args[args.length - 1] || {}));\r\n    }\r\n\r\n    return new Promise(function (resolve, reject) {\r\n      // add complex callback\r\n      filterInputs.push(function (setupError, filterId) {\r\n        if (!setupError) {\r\n          self.filterId = filterId;\r\n          resolve(filterId);\r\n        } else {\r\n          reject(setupError);\r\n        }\r\n\r\n        callback(setupError, filterId);\r\n      });\r\n\r\n      // apply filter, call new.. filter method\r\n      query['new' + filterName].apply(query, filterInputs);\r\n    });\r\n  };\r\n\r\n  return Filter;\r\n}\r\n\r\n/**\r\n * EthFilter constructor, intakes a query, helps manage filter event polling\r\n *\r\n * @method EthFilter\r\n * @param {Object} query the `ethjs-query` or `eth-query` object\r\n * @returns {Object} output an EthFilter instance\r\n * @throws error if new is not used\r\n */\r\n\r\nfunction EthFilter(query) {\r\n  var self = this;\r\n  if (!(self instanceof EthFilter)) {\r\n    throw new Error('the EthFilter object must be instantiated with `new` flag.. (e.g. `const filters = new EthFilter(query);`)');\r\n  }\r\n  if (typeof query !== 'object') {\r\n    throw new Error('the EthFilter object must be instantiated with an EthQuery instance (e.g. `const filters = new EthFilter(new EthQuery(provider));`). See github.com/ethjs/ethjs-query for more details..');\r\n  }\r\n\r\n  self.Filter = constructFilter('Filter', query);\r\n  self.BlockFilter = constructFilter('BlockFilter', query);\r\n  self.PendingTransactionFilter = constructFilter('PendingTransactionFilter', query);\r\n}\r\n\r\n// export EthFilter\r\nmodule.exports = EthFilter;"]},"metadata":{},"sourceType":"script"}